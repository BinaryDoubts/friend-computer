{"modules":{"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","source":"/** @license React v16.2.0\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (q, k) {\n  \"object\" === (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"undefined\" !== typeof module ? module.exports = k() : \"function\" === typeof define && define.amd ? define(k) : q.React = k();\n})(undefined, function () {\n  function q(a) {\n    for (var b = arguments.length - 1, c = \"Minified React error #\" + a + \"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\" + a, d = 0; d < b; d++) {\n      c += \"\\x26args[]\\x3d\" + encodeURIComponent(arguments[d + 1]);\n    }b = Error(c + \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");\n    b.name = \"Invariant Violation\";b.framesToPop = 1;throw b;\n  }function k(a) {\n    return function () {\n      return a;\n    };\n  }function p(a, b, c) {\n    this.props = a;this.context = b;this.refs = w;this.updater = c || x;\n  }function y(a, b, c) {\n    this.props = a;this.context = b;this.refs = w;this.updater = c || x;\n  }function z() {}function A(a, b, c) {\n    this.props = a;this.context = b;this.refs = w;this.updater = c || x;\n  }function G(a, b, c) {\n    var d,\n        f = {},\n        l = null,\n        e = null;if (null != b) for (d in void 0 !== b.ref && (e = b.ref), void 0 !== b.key && (l = \"\" + b.key), b) {\n      H.call(b, d) && !I.hasOwnProperty(d) && (f[d] = b[d]);\n    }var g = arguments.length - 2;if (1 === g) f.children = c;else if (1 < g) {\n      for (var h = Array(g), n = 0; n < g; n++) {\n        h[n] = arguments[n + 2];\n      }f.children = h;\n    }if (a && a.defaultProps) for (d in g = a.defaultProps, g) {\n      void 0 === f[d] && (f[d] = g[d]);\n    }return { $$typeof: r, type: a, key: l, ref: e, props: f, _owner: B.current };\n  }function C(a) {\n    return \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && null !== a && a.$$typeof === r;\n  }function O(a) {\n    var b = { \"\\x3d\": \"\\x3d0\", \":\": \"\\x3d2\" };return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n      return b[a];\n    });\n  }function J(a, b, c, d) {\n    if (u.length) {\n      var f = u.pop();f.result = a;f.keyPrefix = b;f.func = c;f.context = d;f.count = 0;return f;\n    }return { result: a, keyPrefix: b, func: c, context: d, count: 0 };\n  }function K(a) {\n    a.result = null;a.keyPrefix = null;a.func = null;a.context = null;a.count = 0;10 > u.length && u.push(a);\n  }function t(a, b, c, d) {\n    var f = typeof a === \"undefined\" ? \"undefined\" : _typeof(a);if (\"undefined\" === f || \"boolean\" === f) a = null;var l = !1;if (null === a) l = !0;else switch (f) {case \"string\":case \"number\":\n        l = !0;break;case \"object\":\n        switch (a.$$typeof) {case r:case P:case Q:case R:\n            l = !0;}}if (l) return c(d, a, \"\" === b ? \".\" + D(a, 0) : b), 1;l = 0;b = \"\" === b ? \".\" : b + \":\";if (Array.isArray(a)) for (var e = 0; e < a.length; e++) {\n      f = a[e];var g = b + D(f, e);l += t(f, g, c, d);\n    } else if (null === a || \"undefined\" === typeof a ? g = null : (g = L && a[L] || a[\"@@iterator\"], g = \"function\" === typeof g ? g : null), \"function\" === typeof g) for (a = g.call(a), e = 0; !(f = a.next()).done;) {\n      f = f.value, g = b + D(f, e++), l += t(f, g, c, d);\n    } else \"object\" === f && (c = \"\" + a, q(\"31\", \"[object Object]\" === c ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : c, \"\"));return l;\n  }function D(a, b) {\n    return \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && null !== a && null != a.key ? O(a.key) : b.toString(36);\n  }function S(a, b, c) {\n    a.func.call(a.context, b, a.count++);\n  }function T(a, b, c) {\n    var d = a.result,\n        f = a.keyPrefix;a = a.func.call(a.context, b, a.count++);Array.isArray(a) ? E(a, d, c, F.thatReturnsArgument) : null != a && (C(a) && (b = f + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(M, \"$\\x26/\") + \"/\") + c, a = { $$typeof: r, type: a.type, key: b, ref: a.ref, props: a.props, _owner: a._owner }), d.push(a));\n  }function E(a, b, c, d, f) {\n    var e = \"\";null != c && (e = (\"\" + c).replace(M, \"$\\x26/\") + \"/\");b = J(b, e, d, f);null == a || t(a, \"\", T, b);K(b);\n  }var N = Object.getOwnPropertySymbols,\n      U = Object.prototype.hasOwnProperty,\n      V = Object.prototype.propertyIsEnumerable,\n      v = function () {\n    try {\n      if (!Object.assign) return !1;var a = new String(\"abc\");a[5] = \"de\";if (\"5\" === Object.getOwnPropertyNames(a)[0]) return !1;var b = {};for (a = 0; 10 > a; a++) {\n        b[\"_\" + String.fromCharCode(a)] = a;\n      }if (\"0123456789\" !== Object.getOwnPropertyNames(b).map(function (a) {\n        return b[a];\n      }).join(\"\")) return !1;var c = {};\"abcdefghijklmnopqrst\".split(\"\").forEach(function (a) {\n        c[a] = a;\n      });return \"abcdefghijklmnopqrst\" !== Object.keys(Object.assign({}, c)).join(\"\") ? !1 : !0;\n    } catch (d) {\n      return !1;\n    }\n  }() ? Object.assign : function (a, b) {\n    if (null === a || void 0 === a) throw new TypeError(\"Object.assign cannot be called with null or undefined\");var c = Object(a);for (var d, f = 1; f < arguments.length; f++) {\n      var e = Object(arguments[f]);for (var h in e) {\n        U.call(e, h) && (c[h] = e[h]);\n      }if (N) {\n        d = N(e);for (var g = 0; g < d.length; g++) {\n          V.call(e, d[g]) && (c[d[g]] = e[d[g]]);\n        }\n      }\n    }return c;\n  },\n      h = \"function\" === typeof Symbol && Symbol[\"for\"],\n      r = h ? Symbol[\"for\"](\"react.element\") : 60103,\n      P = h ? Symbol[\"for\"](\"react.call\") : 60104,\n      Q = h ? Symbol[\"for\"](\"react.return\") : 60105,\n      R = h ? Symbol[\"for\"](\"react.portal\") : 60106;h = h ? Symbol[\"for\"](\"react.fragment\") : 60107;var L = \"function\" === typeof Symbol && Symbol.iterator,\n      w = {},\n      e = function e() {};e.thatReturns = k;e.thatReturnsFalse = k(!1);e.thatReturnsTrue = k(!0);e.thatReturnsNull = k(null);e.thatReturnsThis = function () {\n    return this;\n  };e.thatReturnsArgument = function (a) {\n    return a;\n  };var F = e,\n      x = { isMounted: function isMounted(a) {\n      return !1;\n    }, enqueueForceUpdate: function enqueueForceUpdate(a, b, c) {}, enqueueReplaceState: function enqueueReplaceState(a, b, c, d) {}, enqueueSetState: function enqueueSetState(a, b, c, d) {} };p.prototype.isReactComponent = {};p.prototype.setState = function (a, b) {\n    \"object\" !== (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && \"function\" !== typeof a && null != a ? q(\"85\") : void 0;this.updater.enqueueSetState(this, a, b, \"setState\");\n  };p.prototype.forceUpdate = function (a) {\n    this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n  };z.prototype = p.prototype;e = y.prototype = new z();e.constructor = y;v(e, p.prototype);e.isPureReactComponent = !0;e = A.prototype = new z();e.constructor = A;v(e, p.prototype);e.unstable_isAsyncReactComponent = !0;e.render = function () {\n    return this.props.children;\n  };var B = { current: null },\n      H = Object.prototype.hasOwnProperty,\n      I = { key: !0, ref: !0, __self: !0, __source: !0 },\n      M = /\\/+/g,\n      u = [];h = { Children: { map: function map(a, b, c) {\n        if (null == a) return a;var d = [];E(a, d, null, b, c);return d;\n      }, forEach: function forEach(a, b, c) {\n        if (null == a) return a;b = J(null, null, b, c);null == a || t(a, \"\", S, b);K(b);\n      }, count: function count(a, b) {\n        return null == a ? 0 : t(a, \"\", F.thatReturnsNull, null);\n      }, toArray: function toArray(a) {\n        var b = [];E(a, b, null, F.thatReturnsArgument);return b;\n      }, only: function only(a) {\n        C(a) ? void 0 : q(\"143\");return a;\n      } }, Component: p, PureComponent: y, unstable_AsyncComponent: A, Fragment: h, createElement: G,\n    cloneElement: function cloneElement(a, b, c) {\n      var d = v({}, a.props),\n          e = a.key,\n          h = a.ref,\n          k = a._owner;if (null != b) {\n        void 0 !== b.ref && (h = b.ref, k = B.current);void 0 !== b.key && (e = \"\" + b.key);if (a.type && a.type.defaultProps) var g = a.type.defaultProps;for (m in b) {\n          H.call(b, m) && !I.hasOwnProperty(m) && (d[m] = void 0 === b[m] && void 0 !== g ? g[m] : b[m]);\n        }\n      }var m = arguments.length - 2;if (1 === m) d.children = c;else if (1 < m) {\n        g = Array(m);for (var n = 0; n < m; n++) {\n          g[n] = arguments[n + 2];\n        }d.children = g;\n      }return { $$typeof: r, type: a.type, key: e, ref: h, props: d, _owner: k };\n    }, createFactory: function createFactory(a) {\n      var b = G.bind(null, a);b.type = a;return b;\n    }, isValidElement: C, version: \"16.2.0\", __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { ReactCurrentOwner: B, assign: v } };h = (e = Object.freeze({ default: h })) && h || e;return h[\"default\"] ? h[\"default\"] : h;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_5.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_5.js","source":"\"use strict\";\n\nmodule.exports = { \"ssr\": false };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zdHJlYW1fNS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCLEVBQUMsT0FBTSxLQUFQLEVBQWpCIiwiZmlsZSI6Il9zdHJlYW1fNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1wic3NyXCI6ZmFsc2V9Il19","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_4.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_4.js","source":"\"use strict\";\n\nmodule.exports = function () {}();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zdHJlYW1fNC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWtCLFlBQVcsQ0FBRyxDQUFmLEVBQWpCIiwiZmlsZSI6Il9zdHJlYW1fNC5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gKGZ1bmN0aW9uICgpeyB9KSgpIl19","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_3.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_3.js","source":"\"use strict\";\n\nmodule.exports = {};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zdHJlYW1fMy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCLEVBQWpCIiwiZmlsZSI6Il9zdHJlYW1fMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge30iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_1.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_1.js","source":"\"use strict\";\n\nmodule.exports = [[\"Header\", [[\"title\", [\"value\", \"the computer is your friend\"]], [\"subtitle\", [\"value\", \"a quick hack for playing Paranaoia\"]]], []], [\"h2\", [], [\"creation\"]], [\"p\", [], [\"Your Troubleshooter has a first name, RED clearance, and a three-letter home sector. They also have five stats: Tough, Quick, Cunning, Convincing, and Mutant. \"]], [\"aside\", [], [[\"h5\", [], [\"dice conventions\"]], [\"p\", [], [\"Whenever you see the letter ‘d’ before a number, that’s just shorthand for ‘a die of that-number sides’. d4 means a four-sided die, d6 means a six-sided die, d8 means an eight-sided die, and d10 means a ten-sided die.\"]]]], [\"p\", [], [\"Pick what you’re best at and write d10 in its space on your character sheet.\"]], [\"p\", [], [\"Turn to the player to your left (skip the GM) and they’ll pick what you’re worst at. Write d4 in its space.\"]], [\"p\", [], [\"Finally, distribute d6, d6, and d8 into the three remaining stats as you see fit. You’ll begin with 6 Health, a RED-clearance jumpsuit, a personal communicator, and a 3-ammo 2-damage RED laser pistol. \"]], [\"p\", [], [\"Ask your GM what your mutant power is. Don’t tell anyone else.\"]], [\"h2\", [], [\"rolling\"]], [\"p\", [], [\"When you attempt something risky, dramatic, or stupid, the GM will tell you what stat to roll. If you’re targeting another character (for instance, with a lie, a laser blast, or a punch to the face), they roll the relevant stat to avoid being affected. \"]], [\"p\", [], [\"If instead you’re rolling to overcome a challenge - like leaping over a pit of killbots or repairing a nuclear reactor - the GM will roll a d6 Disaster Die to represent your odds of failure.\"]], [\"p\", [], [\"If you beat the opposing roll, your character will succeed. If you equal the opposing roll, your character will succeed, but face a complication: the GM will offer you a hard choice or a worse outcome. \"]], [\"p\", [], [\"If you roll lower than the opposition, your character has failed, probably very badly.\"]], [\"h2\", [], [\"extra dice\"]], [\"p\", [], [\"When another player is able to help you out with a specific problem (and describes how they help), you gain a d6 Trust Die that you’ll roll alongside your stat die.\", [\"aside\", [], [[\"h4\", [], [\"a note on notes\"]], [\"p\", [], [\"Paranoid gaming works best when everyone else can see that you’re plotting something. For this reason, secret plans of action must be conveyed between players and the GM via handwritten notes - no texting, Morse code, or smoke signals allowed.\"]]]]]], [\"p\", [], [\"When another player sabotages you, either covertly or openly, the GM or your opponent gains an additional d6 Disaster Die. (Passing notes to the GM describing your betrayal is an excellent tactic.)\"]], [\"p\", [], [\"Any time a player or GM rolls multiple dice, they take only the single highest result.\"]], [\"h2\", [], [\"clones\"]], [\"p\", [], [\"You have six. (Try not to waste them.)\"]], [\"p\", [], [\"If you die, you manage to make it back to the group a few minutes later via tube-delivery, man-cannon, drone drop-off, or any other implausibly rapid means. You have whatever gear you began the mission with (personal and assigned) and only foggy memories of the moments leading up to your death.\"]], [\"h2\", [], [\"initiative\"]], [\"p\", [], [\"When you want to shoot another player (and it’s a surprise), point at them and shout \", [\"strong\", [], [\"“BANG!”\"]]]], [\"p\", [], [\"If you got the drop on them, you get a free shoot (Quick) roll before combat starts.\"]], [\"h2\", [], [\"combat\"]], [\"p\", [], [\"When you get into a fight, every player chooses a stat die and rolls it simultaneously. Going around the table from highest to lowest, each person gets to move and take an action.\"]], [\"p\", [], [\"Your action should correspond to the stat you rolled, although feel free to lie if you think you can get away with it. (If the GM or anyone else calls you on it, you lose your action). \"]], [\"p\", [], [\"When you take your action, don’t re-roll the stat die: use it as it lies. When defending against attacks, you must use a different stat - if you’re focused on shooting, you can’t also use Quick to dodge someone else’s laser blast.\"]], [\"h2\", [], [\"shooting and ammo\"]], [\"p\", [], [\"When you receive a complication on a shooting roll, burn 1 ammo. Don’t track your shots otherwise – it’s only desperate near-misses that really chew through your ammunition. \"]], [\"p\", [], [\"At 0-ammo, your gun’s dry. Ask the equipment guy for more ammunition, and hope they’re in a giving mood.\"]], [\"h2\", [], [\"roles\"]], [\"p\", [], [\"These roles are assigned during the briefing for each mission. If you have more than five players, tough - let them argue for who deserves the power. \"]], [\"p\", [], [\"In addition to the usual in-game powers and responsibilities that come with these roles, each role has a mechanical ability, as described below.\"]], [\"h4\", [], [\"team leader\"]], [\"p\", [], [\"Regardless of what they rolled on their stat die in combat, the team leader can always choose to go first (“in order to set an example”) or last (“in order to protect the chain of command”) in each combat round. As well, they break ties on initiative in combat.\"]], [\"h4\", [], [\"happiness officer\"]], [\"p\", [], [\"The happiness officer begins each mission with a pool of five d6 Morale Dice. If they declare that a character is exhibiting excellent morale, they can grant one Morale Die as a bonus to a specific roll. \"]], [\"p\", [], [\"If they decide that a character is exhibiting poor morale, they can give a Morale Die to whoever is rolling against that character. \"]], [\"p\", [], [\"The GM may ask them to explain, even tenuously, what behaviour has warranted their dice assignments.\"]], [\"h4\", [], [\"loyalty officer\"]], [\"p\", [], [\"The loyalty officer begins each mission with one Suspicion Token. They can spend this token to intercept and inspect a note being passed. Note that they have to actually see the note being passed, and that once it’s in the GM’s hands, it’s no longer fair game. They cannot show the note to the other players, but are allowed to describe its contents (if they wish).\"]], [\"p\", [], [\"Every time a character (other than the loyalty officer) is executed for treason with the permission of the Computer or a higher-clearance citizen, they regain their Suspicion Token. \"]], [\"h4\", [], [\"hygiene officer\"]], [\"p\", [], [\"The hygiene officer can demand spot checks of other players’ parts of the table - if they find crumbs, spills, or other evidence of poor hygiene, all rolls opposing that player gain an additional d6 Poor Hygiene die until everything’s cleaned up.\"]], [\"h4\", [], [\"equipment guy\"]], [\"p\", [], [\"The equipment guy begins each mission with a pool of three Malfunction Tokens. They can spend these tokens, 1:1, to declare that a teammate’s laser pistol has suffered an unfortunate malfunction. They can do this at any time, even on another player’s turn in combat. Note that it might be suspicious, and indeed treasonous, if it happens to the same person more than once.\"]], [\"p\", [], [\"Also, any dice that roll off the table become the property of the equipment guy. Bribes to get your dice back are accepted and encouraged.\"]], [\"h2\", [], [\"equipment\"]], [\"p\", [], [\"Almost everything not assigned to you at the beginning of the mission is treasonous to possess.\"]], [\"h4\", [], [\"weapons\"]], [\"ul\", [], [[\"li\", [], [\"zapgun: \", \"0\", \" damage, \", \"1\", \" ammo, stuns (target loses next turn)\"]], [\"li\", [], [\"your fists: \", \"1\", \" damage, melee\"]], [\"li\", [], [\"INFRARED-market knockoff laser pistol: \", \"1\", \" damage, \", \"2\", \" ammo\"]], [\"li\", [], [\"really nasty knife: \", \"2\", \" damage, melee\"]], [\"li\", [], [\"RED laser pistol: \", \"2\", \" damage, \", \"3\", \" ammo\"]], [\"li\", [], [\"cone rifle: \", \"2\", \" damage, \", \"2\", \" ammo, group\"]], [\"li\", [], [\"military-issue slugthrower: \", \"3\", \" damage, \", \"4\", \" ammo\"]], [\"li\", [], [\"grenade: \", \"3\", \" damage, group\"]], [\"li\", [], [\"tacnuke: \", \"1\", \"0\", \"0\", \"0\", \" damage, everyone in the sector\"]]]], [\"h4\", [], [\"armor\"]], [\"ul\", [], [[\"li\", [], [\"INFRARED impact armor: -\", \"1\", \" incoming damage from melee\"]], [\"li\", [], [\"ORANGE reflec armor: -\", \"1\", \" incoming damage from lasers\"]], [\"li\", [], [\"military-issue armor: -\", \"1\", \" incoming damage from everything\"]], [\"li\", [], [\"DTH-TRP powered armor: +\", \"2\", \" melee damage, -\", \"2\", \" incoming damage from everything, opposing rolls get bonus d\", \"6\", \" Deathtrap die\"]]]], [\"h4\", [], [\"gear\"]], [\"ul\", [], [[\"li\", [], [\"AlgaeFun Energy Beverage: gain a bonus d\", \"6\", \" Energized\", \"!\", \" die on your next roll, and then give a d\", \"4\", \" Withdrawal\", \"!\", \" die to your opposition on your next two rolls\"]], [\"li\", [], [\"medic’s kit: heal target to full or bring them to \", \"1\", \" Health (opposed Cunning rolls between medic and patient - winner decides)\"]], [\"li\", [], [\"personal communicator: speak to Troubleshooter Central, check the C-Net, call the Computer\"]], [\"li\", [], [\"time bomb: \", \"5\", \" damage, area, requires Cunning roll to set timer correctly\"]]]], [\"h4\", [], [\"experimental gear\"]], [\"p\", [], [\"You will usually be assigned experimental gear to test in the field at the beginning of each mission. Details about this type of equipment is, of course, classified. (But GMs, see the Appendix for more).\"]], [\"h2\", [], [\"non-player characters\"]], [\"p\", [], [\"GM-controlled characters have only two stats: Opposition and Health. \"]], [\"ul\", [], [[\"li\", [], [\"Pathetic enemies: d\", \"4\", \" Opposition, \", \"2\", \" Health.\"]], [\"li\", [], [\"Competent foes: d\", \"6\", \" Opposition, \", \"4\", \" Health.\"]], [\"li\", [], [\"Scary, well-armed opposition: d\", \"8\", \" Opposition, \", \"6\", \" Health.\"]], [\"li\", [], [\"Terrifying killbots and jacked-up mutant monsters: d\", \"1\", \"0\", \" Opposition, at least \", \"8\", \" Health.\"]]]], [\"p\", [], [\"\\nWhen NPCs take actions, the GM rolls a single die for the entire group and uses that result for each action taken by a member of the group. In combat, they get a second die of the same size to roll for defense - as with players, their action die never gets re-rolled.\"]], [\"h2\", [], [\"appendix a: an example of combat\"]], [\"p\", [], [[\"em\", [], [\"Hitcha-R-IDE-1 and Gareth-R-AID-2 round the corner and find themselves facing two ragged mutants and the BLUE-rank military traitor they’ve been sent to find. The GM declares that combat has begun\"]], \".\", [\"br\", [], []]]], [\"p\", [], [\"Hitch and Gareth both decide they’d probably like to open fire and roll Quick (which is d8 for both characters).\"]], [\"p\", [], [\"Hitch rolls a 6, and Gareth rolls a 2.\"]], [\"p\", [], [\"At the same time, the GM rolls for her characters. She decides the mutants aren’t much of a threat and gives them a d4 Opposition, and rolls a 1.\"]], [\"p\", [], [\"The soldier is pretty well-trained, so she gives him a d8, and rolls a 5.\"]], [\"p\", [], [\"Hitch gets the first action. Since he rolled Quick, whatever he does should be related to agility or precision. He decides to shoot one of the mutants. The GM grabs another d4 and rolls to defend, but only gets a 1, which is a success for Gareth. She narrates his laser bolt catching one of the mutants between the eyes, dealing two damage and killing the monster instantly.\"]], [\"p\", [], [\"Next, the GM goes with the soldier. She describes him raising his nasty slugthrower rifle and laying down fire on Hitch in revenge. Hitch, who can’t defend with Quick, instead describes how he was smart enough to see this coming and uses Cunning (d6), rolling a lucky 6.\"]], [\"em\", [], [\"Continuing on, Gareth would get his turn, followed by the GM’s single remaining mutant. After that, the round restarts, with all surviving combatants rolling again.\"]], [\"h2\", [], [\"appendix b: experimental gear\"]], [\"p\", [], [\"Each table below has 20 entries, so roll 1d20 once for an adjective, once for a design, and then once more for the device’s function.\"]], [\"Table\", [[\"data\", [\"expression\", \"[{adjective: \\\"Explosive\\\", design: \\\"Backpack-mounted device\\\"}, \\n\\t\\t\\t  {adjective: \\\"Radioactive\\\", design: \\\"Goggles\\\"},\\n\\t\\t\\t  {adjective: \\\"Psychic\\\", design: \\\"Briefcase\\\"},\\n\\t\\t\\t  {adjective: \\\"Electrified\\\", design: \\\"Pistol\\\"},\\n\\t\\t\\t  {adjective: \\\"Flaming\\\", design: \\\"Aerosol canister\\\"},\\n\\t\\t\\t  {adjective: \\\"Invisible\\\", design: \\\"Grenade\\\"},\\n\\t\\t\\t  {adjective: '\\\"Invisible\\\"', design: \\\"Robot buddy\\\"},\\n\\t\\t\\t  {adjective: \\\"Microscopic\\\", design: \\\"Jumpsuit\\\"},\\n\\t\\t\\t  {adjective: \\\"Massive\\\", design: \\\"Helmet\\\"},\\n\\t\\t\\t  {adjective: \\\"Glowing\\\", design: \\\"Cannon\\\"},\\t\\t\\t  \\n\\t\\t\\t  {adjective: \\\"Invisible\\\", design: \\\"Camera\\\"},\\n\\t\\t\\t  {adjective: '\\\"Invisible\\\"', design: \\\"Crowbar\\\"},\\n\\t\\t\\t  {adjective: \\\"Microscopic\\\", design: \\\"Hat\\\"},\\n\\t\\t\\t  {adjective: \\\"Massive\\\", design: \\\"Tablet\\\"},\\n\\t\\t\\t  {adjective: \\\"Glowing\\\", design: \\\"Gift-wrapped present\\\"},\\t\\t\\t\\n\\t\\t\\t  {adjective: \\\"Slippery\\\", design: \\\"Stick\\\"},\\t\\t\\t\\n\\t\\t\\t  {adjective: \\\"Sneaky\\\", design: \\\"Can of paint\\\"},\\t\\n\\t\\t\\t  {adjective: \\\"Floating\\\", design: \\\"Extension cord\\\"},\\t\\n\\t\\t\\t  {adjective: \\\"Heavy\\\", design: \\\"Statue\\\"},\\t\\n\\t\\t\\t  {adjective: \\\"Intelligent\\\", design: \\\"Bomb\\\"},\\t\\t  \\n\\t\\t\\t  ]\"]]], []], [\"Table\", [[\"data\", [\"expression\", \"[{function: \\\"Generates an anti-gravity bubble\\\"},\\n\\t\\t\\t  {function: \\\"Dispenses tasty snacks\\\"},\\n\\t\\t\\t  {function: \\\"Sings incredibly annoying songs\\\"},\\n\\t\\t\\t  {function: \\\"Projects advertisements for Bouncy Bubble Beverage\\\"},\\n\\t\\t\\t  {function: \\\"Deadens mutant powers\\\"},\\n\\t\\t\\t  {function: \\\"Offers useless advice\\\"},\\n\\t\\t\\t  {function: \\\"Explodes skulls\\\"},\\n\\t\\t\\t  {function: \\\"Makes you exactly half invisible\\\"},\\n\\t\\t\\t  {function: \\\"Inflames passion for dance\\\"},\\n\\t\\t\\t  {function: \\\"Digs very good holes\\\"},\\n\\t\\t\\t  {function: \\\"Remote control over machines\\\"},\\n\\t\\t\\t  {function: '\\\"Not entirely sure, to be totally honest.\\\"'},\\n\\t\\t\\t  {function: \\\"Makes an ominous ticking sound\\\"},\\n\\t\\t\\t  {function: \\\"Summons small appliances from a pocket dimension\\\"},\\t\\n\\t\\t\\t  {function: \\\"Explodes violently, then rebuilds itself\\\"},\\n\\t\\t\\t  {function: \\\"Checks loyalty and morale via probing questions\\\"},\\n\\t\\t\\t  {function: \\\"Just seems like a regular mirror\\\"},\\n\\t\\t\\t  {function: \\\"Combat toothbrush\\\"},\\n\\t\\t\\t  {function: \\\"Acts like a friendly pet\\\"},\\n\\t\\t\\t  {function: \\\"Sends powerful electric shocks in response to negative statements\\\"}]\"]]], []], [\"Table\", [[\"data\", [\"expression\", \"[{\\\"more functions\\\": \\\"Dictionary\\\"}, \\n              {\\\"more functions\\\": \\\"Huggable, Talking Plush Computer: Your Friend Forever\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"The Fashiontron 5000\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Indicates which way is up at all times\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Spits out cookies\\\"},\\n\\t\\t      {\\\"more functions\\\": \\\"Combination megaphone/police siren/net-gun\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Telepathic radio\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Salt shaker\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Alpha-Complex-army knife, complete with power sander and machete\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Weaponized shower\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Vacuums at a dangerous level of suction\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Roll again, and tell only the Team Leader what it does\\\"},\\t\\t\\t \\n\\t\\t\\t  {\\\"more functions\\\": \\\"Death predictor and obituary generator\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Holographic projector\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"None whatsoever\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Universal lockpick\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Inverse Geiger counter\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Silences all nearby sound\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Lie detector (impossible to turn off)\\\"},\\n\\t\\t\\t  {\\\"more functions\\\": \\\"Roll three more times. Only mention one of the functions.\\\"},\\t\\t\\n\\t\\t\\t  ]\"]]], []]];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom\\umd\\react-dom.production.min.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom\\umd\\react-dom.production.min.js","source":"/** @license React v16.2.0\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (na, l) {\n  \"object\" === (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"undefined\" !== typeof module ? module.exports = l(require(\"react\")) : \"function\" === typeof define && define.amd ? define([\"react\"], l) : na.ReactDOM = l(na.React);\n})(undefined, function (na) {\n  function l(a) {\n    for (var b = arguments.length - 1, c = \"Minified React error #\" + a + \"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\" + a, d = 0; d < b; d++) {\n      c += \"\\x26args[]\\x3d\" + encodeURIComponent(arguments[d + 1]);\n    }b = Error(c + \" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");\n    b.name = \"Invariant Violation\";b.framesToPop = 1;throw b;\n  }function va(a, b) {\n    return (a & b) === b;\n  }function Xc(a, b) {\n    if (Yc.hasOwnProperty(a) || 2 < a.length && (\"o\" === a[0] || \"O\" === a[0]) && (\"n\" === a[1] || \"N\" === a[1])) return !1;if (null === b) return !0;switch (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) {case \"boolean\":\n        return Yc.hasOwnProperty(a) ? a = !0 : (b = Ub(a)) ? a = b.hasBooleanValue || b.hasStringBooleanValue || b.hasOverloadedBooleanValue : (a = a.toLowerCase().slice(0, 5), a = \"data-\" === a || \"aria-\" === a), a;case \"undefined\":case \"number\":case \"string\":case \"object\":\n        return !0;default:\n        return !1;}\n  }\n  function Ub(a) {\n    return ib.hasOwnProperty(a) ? ib[a] : null;\n  }function Zc() {\n    if (jb) for (var a in ba) {\n      var b = ba[a],\n          c = jb.indexOf(a);-1 < c ? void 0 : l(\"96\", a);if (!oa[c]) {\n        b.extractEvents ? void 0 : l(\"97\", a);oa[c] = b;c = b.eventTypes;for (var d in c) {\n          var e = void 0;var f = c[d],\n              g = b,\n              h = d;Vb.hasOwnProperty(h) ? l(\"99\", h) : void 0;Vb[h] = f;var k = f.phasedRegistrationNames;if (k) {\n            for (e in k) {\n              k.hasOwnProperty(e) && $c(k[e], g, h);\n            }e = !0;\n          } else f.registrationName ? ($c(f.registrationName, g, h), e = !0) : e = !1;e ? void 0 : l(\"98\", d, a);\n        }\n      }\n    }\n  }function $c(a, b, c) {\n    ca[a] ? l(\"100\", a) : void 0;ca[a] = b;kb[a] = b.eventTypes[c].dependencies;\n  }function ad(a) {\n    jb ? l(\"101\") : void 0;jb = Array.prototype.slice.call(a);Zc();\n  }function bd(a) {\n    var b = !1,\n        c;for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];ba.hasOwnProperty(c) && ba[c] === d || (ba[c] ? l(\"102\", c) : void 0, ba[c] = d, b = !0);\n      }\n    }b && Zc();\n  }function lb(a) {\n    return function () {\n      return a;\n    };\n  }function cd(a, b, c, d) {\n    b = a.type || \"unknown-event\";a.currentTarget = dd(d);y.invokeGuardedCallbackAndCatchFirstError(b, c, void 0, a);a.currentTarget = null;\n  }function wa(a, b) {\n    null == b ? l(\"30\") : void 0;if (null == a) return b;if (Array.isArray(a)) {\n      if (Array.isArray(b)) return a.push.apply(a, b), a;a.push(b);return a;\n    }return Array.isArray(b) ? [a].concat(b) : [a, b];\n  }function da(a, b, c) {\n    Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n  }function Wb(a, b) {\n    var c = a.stateNode;if (!c) return null;var d = Xb(c);if (!d) return null;c = d[b];a: switch (b) {case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":\n        (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));a = !d;break a;default:\n        a = !1;}if (a) return null;c && \"function\" !== typeof c ? l(\"231\", b, typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) : void 0;return c;\n  }function ed(a, b, c, d) {\n    for (var e, f = 0; f < oa.length; f++) {\n      var g = oa[f];g && (g = g.extractEvents(a, b, c, d)) && (e = wa(e, g));\n    }return e;\n  }function Yb(a) {\n    a && (pa = wa(pa, a));\n  }function Zb(a) {\n    var b = pa;pa = null;b && (a ? da(b, $e) : da(b, af), pa ? l(\"95\") : void 0, y.rethrowCaughtError());\n  }function W(a) {\n    if (a[O]) return a[O];for (var b = []; !a[O];) {\n      if (b.push(a), a.parentNode) a = a.parentNode;else return null;\n    }var c = void 0,\n        d = a[O];if (5 === d.tag || 6 === d.tag) return d;for (; a && (d = a[O]); a = b.pop()) {\n      c = d;\n    }return c;\n  }function xa(a) {\n    if (5 === a.tag || 6 === a.tag) return a.stateNode;l(\"33\");\n  }function fd(a) {\n    return a[ea] || null;\n  }function T(a) {\n    do {\n      a = a[\"return\"];\n    } while (a && 5 !== a.tag);return a ? a : null;\n  }function gd(a, b, c) {\n    for (var d = []; a;) {\n      d.push(a), a = T(a);\n    }for (a = d.length; 0 < a--;) {\n      b(d[a], \"captured\", c);\n    }for (a = 0; a < d.length; a++) {\n      b(d[a], \"bubbled\", c);\n    }\n  }function hd(a, b, c) {\n    if (b = Wb(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = wa(c._dispatchListeners, b), c._dispatchInstances = wa(c._dispatchInstances, a);\n  }function bf(a) {\n    a && a.dispatchConfig.phasedRegistrationNames && gd(a._targetInst, hd, a);\n  }function cf(a) {\n    if (a && a.dispatchConfig.phasedRegistrationNames) {\n      var b = a._targetInst;b = b ? T(b) : null;gd(b, hd, a);\n    }\n  }function $b(a, b, c) {\n    a && c && c.dispatchConfig.registrationName && (b = Wb(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = wa(c._dispatchListeners, b), c._dispatchInstances = wa(c._dispatchInstances, a));\n  }function df(a) {\n    a && a.dispatchConfig.registrationName && $b(a._targetInst, null, a);\n  }function ya(a) {\n    da(a, bf);\n  }function id(a, b, c, d) {\n    if (c && d) a: {\n      var e = c;for (var f = d, g = 0, h = e; h; h = T(h)) {\n        g++;\n      }h = 0;for (var k = f; k; k = T(k)) {\n        h++;\n      }for (; 0 < g - h;) {\n        e = T(e), g--;\n      }for (; 0 < h - g;) {\n        f = T(f), h--;\n      }for (; g--;) {\n        if (e === f || e === f.alternate) break a;e = T(e);f = T(f);\n      }e = null;\n    } else e = null;f = e;for (e = []; c && c !== f;) {\n      g = c.alternate;if (null !== g && g === f) break;e.push(c);c = T(c);\n    }for (c = []; d && d !== f;) {\n      g = d.alternate;if (null !== g && g === f) break;c.push(d);d = T(d);\n    }for (d = 0; d < e.length; d++) {\n      $b(e[d], \"bubbled\", a);\n    }for (a = c.length; 0 < a--;) {\n      $b(c[a], \"captured\", b);\n    }\n  }function jd() {\n    !ac && P.canUseDOM && (ac = \"textContent\" in document.documentElement ? \"textContent\" : \"innerText\");return ac;\n  }function kd() {\n    if (H._fallbackText) return H._fallbackText;var a,\n        b = H._startText,\n        c = b.length,\n        d,\n        e = ld(),\n        f = e.length;for (a = 0; a < c && b[a] === e[a]; a++) {}var g = c - a;for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {}H._fallbackText = e.slice(a, 1 < d ? 1 - d : void 0);return H._fallbackText;\n  }function ld() {\n    return \"value\" in H._root ? H._root.value : H._root[jd()];\n  }function n(a, b, c, d) {\n    this.dispatchConfig = a;this._targetInst = b;this.nativeEvent = c;a = this.constructor.Interface;for (var e in a) {\n      a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n    }this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? G.thatReturnsTrue : G.thatReturnsFalse;this.isPropagationStopped = G.thatReturnsFalse;return this;\n  }function ef(a, b, c, d) {\n    if (this.eventPool.length) {\n      var e = this.eventPool.pop();this.call(e, a, b, c, d);return e;\n    }return new this(a, b, c, d);\n  }function ff(a) {\n    a instanceof this ? void 0 : l(\"223\");a.destructor();10 > this.eventPool.length && this.eventPool.push(a);\n  }function md(a) {\n    a.eventPool = [];a.getPooled = ef;a.release = ff;\n  }function nd(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function od(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function gf() {\n    var a = window.opera;return \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && \"function\" === typeof a.version && 12 >= parseInt(a.version(), 10);\n  }function pd(a, b) {\n    switch (a) {case \"topKeyUp\":\n        return -1 !== hf.indexOf(b.keyCode);case \"topKeyDown\":\n        return 229 !== b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":\n        return !0;\n      default:\n        return !1;}\n  }function qd(a) {\n    a = a.detail;return \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && \"data\" in a ? a.data : null;\n  }function jf(a, b) {\n    switch (a) {case \"topCompositionEnd\":\n        return qd(b);case \"topKeyPress\":\n        if (32 !== b.which) return null;rd = !0;return sd;case \"topTextInput\":\n        return a = b.data, a === sd && rd ? null : a;default:\n        return null;}\n  }function kf(a, b) {\n    if (za) return \"topCompositionEnd\" === a || !bc && pd(a, b) ? (a = kd(), H._root = null, H._startText = null, H._fallbackText = null, za = !1, a) : null;switch (a) {case \"topPaste\":\n        return null;case \"topKeyPress\":\n        if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n          if (b.char && 1 < b.char.length) return b.char;if (b.which) return String.fromCharCode(b.which);\n        }return null;case \"topCompositionEnd\":\n        return td ? null : b.data;default:\n        return null;}\n  }function ud(a) {\n    if (a = vd(a)) {\n      mb && \"function\" === typeof mb.restoreControlledState ? void 0 : l(\"194\");var b = Xb(a.stateNode);mb.restoreControlledState(a.stateNode, a.type, b);\n    }\n  }function wd(a) {\n    Ga ? fa ? fa.push(a) : fa = [a] : Ga = a;\n  }function xd() {\n    if (Ga) {\n      var a = Ga,\n          b = fa;fa = Ga = null;ud(a);if (b) for (a = 0; a < b.length; a++) {\n        ud(b[a]);\n      }\n    }\n  }\n  function cc(a, b) {\n    if (dc) return ec(a, b);dc = !0;try {\n      return ec(a, b);\n    } finally {\n      dc = !1, xd();\n    }\n  }function yd(a) {\n    var b = a && a.nodeName && a.nodeName.toLowerCase();return \"input\" === b ? !!lf[a.type] : \"textarea\" === b ? !0 : !1;\n  }function fc(a) {\n    a = a.target || a.srcElement || window;a.correspondingUseElement && (a = a.correspondingUseElement);return 3 === a.nodeType ? a.parentNode : a;\n  }function gc(a, b) {\n    if (!P.canUseDOM || b && !(\"addEventListener\" in document)) return !1;b = \"on\" + a;var c = b in document;c || (c = document.createElement(\"div\"), c.setAttribute(b, \"return;\"), c = \"function\" === typeof c[b]);!c && zd && \"wheel\" === a && (c = document.implementation.hasFeature(\"Events.wheel\", \"3.0\"));return c;\n  }function Ad(a) {\n    var b = a.type;return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n  }function mf(a) {\n    var b = Ad(a) ? \"checked\" : \"value\",\n        c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n        d = \"\" + a[b];if (!a.hasOwnProperty(b) && \"function\" === typeof c.get && \"function\" === typeof c.set) return Object.defineProperty(a, b, { enumerable: c.enumerable, configurable: !0, get: function get() {\n        return c.get.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;c.set.call(this, a);\n      } }), { getValue: function getValue() {\n        return d;\n      }, setValue: function setValue(a) {\n        d = \"\" + a;\n      }, stopTracking: function stopTracking() {\n        a._valueTracker = null;delete a[b];\n      } };\n  }function nb(a) {\n    a._valueTracker || (a._valueTracker = mf(a));\n  }function Bd(a) {\n    if (!a) return !1;var b = a._valueTracker;if (!b) return !0;var c = b.getValue();var d = \"\";a && (d = Ad(a) ? a.checked ? \"true\" : \"false\" : a.value);a = d;return a !== c ? (b.setValue(a), !0) : !1;\n  }function Cd(a, b, c) {\n    a = n.getPooled(Dd.change, a, b, c);a.type = \"change\";wd(c);ya(a);return a;\n  }function nf(a) {\n    Yb(a);\n    Zb(!1);\n  }function ob(a) {\n    var b = xa(a);if (Bd(b)) return a;\n  }function of(a, b) {\n    if (\"topChange\" === a) return b;\n  }function Ed() {\n    Ha && (Ha.detachEvent(\"onpropertychange\", Fd), Oa = Ha = null);\n  }function Fd(a) {\n    \"value\" === a.propertyName && ob(Oa) && (a = Cd(Oa, a, fc(a)), cc(nf, a));\n  }function pf(a, b, c) {\n    \"topFocus\" === a ? (Ed(), Ha = b, Oa = c, Ha.attachEvent(\"onpropertychange\", Fd)) : \"topBlur\" === a && Ed();\n  }function qf(a, b) {\n    if (\"topSelectionChange\" === a || \"topKeyUp\" === a || \"topKeyDown\" === a) return ob(Oa);\n  }function rf(a, b) {\n    if (\"topClick\" === a) return ob(b);\n  }function sf(a, b) {\n    if (\"topInput\" === a || \"topChange\" === a) return ob(b);\n  }function Aa(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function tf(a) {\n    var b = this.nativeEvent;return b.getModifierState ? b.getModifierState(a) : (a = uf[a]) ? !!b[a] : !1;\n  }function hc(a) {\n    return tf;\n  }function qa(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function Pa(a) {\n    a = a.type;return \"string\" === typeof a ? a : \"function\" === typeof a ? a.displayName || a.name : null;\n  }function Qa(a) {\n    var b = a;if (a.alternate) for (; b[\"return\"];) {\n      b = b[\"return\"];\n    } else {\n      if (0 !== (b.effectTag & 2)) return 1;for (; b[\"return\"];) {\n        if (b = b[\"return\"], 0 !== (b.effectTag & 2)) return 1;\n      }\n    }return 3 === b.tag ? 2 : 3;\n  }function vf(a) {\n    return (a = a._reactInternalFiber) ? 2 === Qa(a) : !1;\n  }function Gd(a) {\n    2 !== Qa(a) ? l(\"188\") : void 0;\n  }function Hd(a) {\n    var b = a.alternate;if (!b) return b = Qa(a), 3 === b ? l(\"188\") : void 0, 1 === b ? null : a;for (var c = a, d = b;;) {\n      var e = c[\"return\"],\n          f = e ? e.alternate : null;if (!e || !f) break;if (e.child === f.child) {\n        for (var g = e.child; g;) {\n          if (g === c) return Gd(e), a;if (g === d) return Gd(e), b;g = g.sibling;\n        }l(\"188\");\n      }if (c[\"return\"] !== d[\"return\"]) c = e, d = f;else {\n        g = !1;for (var h = e.child; h;) {\n          if (h === c) {\n            g = !0;c = e;d = f;break;\n          }if (h === d) {\n            g = !0;d = e;c = f;break;\n          }h = h.sibling;\n        }if (!g) {\n          for (h = f.child; h;) {\n            if (h === c) {\n              g = !0;c = f;d = e;break;\n            }if (h === d) {\n              g = !0;d = f;c = e;break;\n            }h = h.sibling;\n          }g ? void 0 : l(\"189\");\n        }\n      }c.alternate !== d ? l(\"190\") : void 0;\n    }3 !== c.tag ? l(\"188\") : void 0;return c.stateNode.current === c ? a : b;\n  }function wf(a) {\n    a = Hd(a);if (!a) return null;for (var b = a;;) {\n      if (5 === b.tag || 6 === b.tag) return b;if (b.child) b.child[\"return\"] = b, b = b.child;else {\n        if (b === a) break;for (; !b.sibling;) {\n          if (!b[\"return\"] || b[\"return\"] === a) return null;b = b[\"return\"];\n        }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\n      }\n    }return null;\n  }function xf(a) {\n    a = Hd(a);if (!a) return null;for (var b = a;;) {\n      if (5 === b.tag || 6 === b.tag) return b;if (b.child && 4 !== b.tag) b.child[\"return\"] = b, b = b.child;else {\n        if (b === a) break;for (; !b.sibling;) {\n          if (!b[\"return\"] || b[\"return\"] === a) return null;b = b[\"return\"];\n        }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\n      }\n    }return null;\n  }function yf(a) {\n    var b = a.targetInst;do {\n      if (!b) {\n        a.ancestors.push(b);break;\n      }var c;for (c = b; c[\"return\"];) {\n        c = c[\"return\"];\n      }c = 3 !== c.tag ? null : c.stateNode.containerInfo;if (!c) break;a.ancestors.push(b);\n      b = W(c);\n    } while (b);for (c = 0; c < a.ancestors.length; c++) {\n      b = a.ancestors[c], pb(a.topLevelType, b, a.nativeEvent, fc(a.nativeEvent));\n    }\n  }function ic(a) {\n    Ra = !!a;\n  }function r(a, b, c) {\n    return c ? Id.listen(c, b, jc.bind(null, a)) : null;\n  }function ha(a, b, c) {\n    return c ? Id.capture(c, b, jc.bind(null, a)) : null;\n  }function jc(a, b) {\n    if (Ra) {\n      var c = fc(b);c = W(c);null === c || \"number\" !== typeof c.tag || 2 === Qa(c) || (c = null);if (qb.length) {\n        var d = qb.pop();d.topLevelType = a;d.nativeEvent = b;d.targetInst = c;a = d;\n      } else a = { topLevelType: a, nativeEvent: b, targetInst: c, ancestors: [] };\n      try {\n        cc(yf, a);\n      } finally {\n        a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > qb.length && qb.push(a);\n      }\n    }\n  }function rb(a, b) {\n    var c = {};c[a.toLowerCase()] = b.toLowerCase();c[\"Webkit\" + a] = \"webkit\" + b;c[\"Moz\" + a] = \"moz\" + b;c[\"ms\" + a] = \"MS\" + b;c[\"O\" + a] = \"o\" + b.toLowerCase();return c;\n  }function sb(a) {\n    if (kc[a]) return kc[a];if (!U[a]) return a;var b = U[a],\n        c;for (c in b) {\n      if (b.hasOwnProperty(c) && c in Jd) return kc[a] = b[c];\n    }return \"\";\n  }function Kd(a) {\n    Object.prototype.hasOwnProperty.call(a, tb) || (a[tb] = zf++, Ld[a[tb]] = {});return Ld[a[tb]];\n  }function Md(a, b) {\n    return a === b ? 0 !== a || 0 !== b || 1 / a === 1 / b : a !== a && b !== b;\n  }function Nd(a, b) {\n    return a && b ? a === b ? !0 : Od(a) ? !1 : Od(b) ? Nd(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n  }function Pd(a) {\n    for (; a && a.firstChild;) {\n      a = a.firstChild;\n    }return a;\n  }function Qd(a, b) {\n    var c = Pd(a);a = 0;for (var d; c;) {\n      if (3 === c.nodeType) {\n        d = a + c.textContent.length;if (a <= b && d >= b) return { node: c, offset: b - a };a = d;\n      }a: {\n        for (; c;) {\n          if (c.nextSibling) {\n            c = c.nextSibling;break a;\n          }c = c.parentNode;\n        }c = void 0;\n      }c = Pd(c);\n    }\n  }function lc(a) {\n    var b = a && a.nodeName && a.nodeName.toLowerCase();return b && (\"input\" === b && \"text\" === a.type || \"textarea\" === b || \"true\" === a.contentEditable);\n  }function Rd(a, b) {\n    if (mc || null == X || X !== nc()) return null;var c = X;\"selectionStart\" in c && lc(c) ? c = { start: c.selectionStart, end: c.selectionEnd } : window.getSelection ? (c = window.getSelection(), c = { anchorNode: c.anchorNode, anchorOffset: c.anchorOffset, focusNode: c.focusNode, focusOffset: c.focusOffset }) : c = void 0;return Sa && oc(Sa, c) ? null : (Sa = c, a = n.getPooled(Sd.select, pc, a, b), a.type = \"select\", a.target = X, ya(a), a);\n  }function Td(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function Ud(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function Vd(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function ub(a) {\n    var b = a.keyCode;\"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;return 32 <= a || 13 === a ? a : 0;\n  }function Wd(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function Xd(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function Yd(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function Zd(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function $d(a, b, c, d) {\n    return n.call(this, a, b, c, d);\n  }function I(a, b) {\n    0 > ra || (a.current = vb[ra], vb[ra] = null, ra--);\n  }function M(a, b, c) {\n    ra++;vb[ra] = a.current;a.current = b;\n  }function Ta(a) {\n    return Ua(a) ? wb : ia.current;\n  }function Va(a, b) {\n    var c = a.type.contextTypes;if (!c) return ja;var d = a.stateNode;if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;var e = {},\n        f;for (f in c) {\n      e[f] = b[f];\n    }d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);return e;\n  }function Ua(a) {\n    return 2 === a.tag && null != a.type.childContextTypes;\n  }function ae(a) {\n    Ua(a) && (I(J, a), I(ia, a));\n  }function be(a, b, c) {\n    null != ia.cursor ? l(\"168\") : void 0;M(ia, b, a);M(J, c, a);\n  }function ce(a, b) {\n    var c = a.stateNode,\n        d = a.type.childContextTypes;if (\"function\" !== typeof c.getChildContext) return b;c = c.getChildContext();for (var e in c) {\n      e in d ? void 0 : l(\"108\", Pa(a) || \"Unknown\", e);\n    }return C({}, b, c);\n  }function xb(a) {\n    if (!Ua(a)) return !1;var b = a.stateNode;b = b && b.__reactInternalMemoizedMergedChildContext || ja;wb = ia.current;M(ia, b, a);M(J, J.current, a);return !0;\n  }function de(a, b) {\n    var c = a.stateNode;c ? void 0 : l(\"169\");if (b) {\n      var d = ce(a, wb);c.__reactInternalMemoizedMergedChildContext = d;I(J, a);I(ia, a);M(ia, d, a);\n    } else I(J, a);M(J, b, a);\n  }function Q(a, b, c) {\n    this.tag = a;this.key = b;this.stateNode = this.type = null;this.sibling = this.child = this[\"return\"] = null;this.index = 0;this.memoizedState = this.updateQueue = this.memoizedProps = this.pendingProps = this.ref = null;this.internalContextTag = c;this.effectTag = 0;this.lastEffect = this.firstEffect = this.nextEffect = null;this.expirationTime = 0;this.alternate = null;\n  }function yb(a, b, c) {\n    var d = a.alternate;null === d ? (d = new Q(a.tag, a.key, a.internalContextTag), d.type = a.type, d.stateNode = a.stateNode, d.alternate = a, a.alternate = d) : (d.effectTag = 0, d.nextEffect = null, d.firstEffect = null, d.lastEffect = null);d.expirationTime = c;d.pendingProps = b;d.child = a.child;d.memoizedProps = a.memoizedProps;d.memoizedState = a.memoizedState;d.updateQueue = a.updateQueue;d.sibling = a.sibling;d.index = a.index;d.ref = a.ref;return d;\n  }function qc(a, b, c) {\n    var d = void 0,\n        e = a.type,\n        f = a.key;\"function\" === typeof e ? (d = e.prototype && e.prototype.isReactComponent ? new Q(2, f, b) : new Q(0, f, b), d.type = e, d.pendingProps = a.props) : \"string\" === typeof e ? (d = new Q(5, f, b), d.type = e, d.pendingProps = a.props) : \"object\" === (typeof e === \"undefined\" ? \"undefined\" : _typeof(e)) && null !== e && \"number\" === typeof e.tag ? (d = e, d.pendingProps = a.props) : l(\"130\", null == e ? e : typeof e === \"undefined\" ? \"undefined\" : _typeof(e), \"\");d.expirationTime = c;return d;\n  }function zb(a, b, c, d) {\n    b = new Q(10, d, b);b.pendingProps = a;b.expirationTime = c;return b;\n  }function rc(a, b, c) {\n    b = new Q(6, null, b);b.pendingProps = a;b.expirationTime = c;return b;\n  }function sc(a, b, c) {\n    b = new Q(7, a.key, b);b.type = a.handler;b.pendingProps = a;b.expirationTime = c;return b;\n  }function tc(a, b, c) {\n    a = new Q(9, null, b);a.expirationTime = c;return a;\n  }function uc(a, b, c) {\n    b = new Q(4, a.key, b);b.pendingProps = a.children || [];b.expirationTime = c;b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation };return b;\n  }function ee(a) {\n    return function (b) {\n      try {\n        return a(b);\n      } catch (c) {}\n    };\n  }function Af(a) {\n    if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n    var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;if (b.isDisabled || !b.supportsFiber) return !0;try {\n      var c = b.inject(a);vc = ee(function (a) {\n        return b.onCommitFiberRoot(c, a);\n      });wc = ee(function (a) {\n        return b.onCommitFiberUnmount(c, a);\n      });\n    } catch (d) {}return !0;\n  }function fe(a) {\n    \"function\" === typeof vc && vc(a);\n  }function ge(a) {\n    \"function\" === typeof wc && wc(a);\n  }function he(a) {\n    return { baseState: a, expirationTime: 0, first: null, last: null, callbackList: null, hasForceUpdate: !1, isInitialized: !1 };\n  }function Ab(a, b) {\n    null === a.last ? a.first = a.last = b : (a.last.next = b, a.last = b);if (0 === a.expirationTime || a.expirationTime > b.expirationTime) a.expirationTime = b.expirationTime;\n  }function Bb(a, b) {\n    var c = a.alternate,\n        d = a.updateQueue;null === d && (d = a.updateQueue = he(null));null !== c ? (a = c.updateQueue, null === a && (a = c.updateQueue = he(null))) : a = null;a = a !== d ? a : null;null === a ? Ab(d, b) : null === d.last || null === a.last ? (Ab(d, b), Ab(a, b)) : (Ab(d, b), a.last = b);\n  }function ie(a, b, c, d) {\n    a = a.partialState;return \"function\" === typeof a ? a.call(b, c, d) : a;\n  }function xc(a, b, c, d, e, f) {\n    null !== a && a.updateQueue === c && (c = b.updateQueue = { baseState: c.baseState, expirationTime: c.expirationTime, first: c.first, last: c.last, isInitialized: c.isInitialized, callbackList: null, hasForceUpdate: !1 });c.expirationTime = 0;c.isInitialized ? a = c.baseState : (a = c.baseState = b.memoizedState, c.isInitialized = !0);for (var g = !0, h = c.first, k = !1; null !== h;) {\n      var l = h.expirationTime;if (l > f) {\n        var D = c.expirationTime;if (0 === D || D > l) c.expirationTime = l;k || (k = !0, c.baseState = a);\n      } else {\n        k || (c.first = h.next, null === c.first && (c.last = null));if (h.isReplace) a = ie(h, d, a, e), g = !0;else if (l = ie(h, d, a, e)) a = g ? C({}, a, l) : C(a, l), g = !1;h.isForced && (c.hasForceUpdate = !0);null !== h.callback && (l = c.callbackList, null === l && (l = c.callbackList = []), l.push(h));\n      }h = h.next;\n    }null !== c.callbackList ? b.effectTag |= 32 : null !== c.first || c.hasForceUpdate || (b.updateQueue = null);k || (c.baseState = a);return a;\n  }function je(a, b) {\n    var c = a.callbackList;if (null !== c) for (a.callbackList = null, a = 0; a < c.length; a++) {\n      var d = c[a],\n          e = d.callback;d.callback = null;\"function\" !== typeof e ? l(\"191\", e) : void 0;e.call(b);\n    }\n  }function Wa(a) {\n    if (null === a || \"undefined\" === typeof a) return null;a = ke && a[ke] || a[\"@@iterator\"];return \"function\" === typeof a ? a : null;\n  }function Xa(a, b) {\n    var c = b.ref;if (null !== c && \"function\" !== typeof c) {\n      if (b._owner) {\n        b = b._owner;var d = void 0;b && (2 !== b.tag ? l(\"110\") : void 0, d = b.stateNode);d ? void 0 : l(\"147\", c);var e = \"\" + c;if (null !== a && null !== a.ref && a.ref._stringRef === e) return a.ref;a = function a(_a) {\n          var b = d.refs === ja ? d.refs = {} : d.refs;null === _a ? delete b[e] : b[e] = _a;\n        };a._stringRef = e;return a;\n      }\"string\" !== typeof c ? l(\"148\") : void 0;b._owner ? void 0 : l(\"149\", c);\n    }return c;\n  }function Cb(a, b) {\n    \"textarea\" !== a.type && l(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n  }function le(a) {\n    function b(b, c) {\n      if (a) {\n        var d = b.lastEffect;null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;c.nextEffect = null;c.effectTag = 8;\n      }\n    }function c(c, d) {\n      if (!a) return null;for (; null !== d;) {\n        b(c, d), d = d.sibling;\n      }return null;\n    }function d(a, b) {\n      for (a = new Map(); null !== b;) {\n        null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n      }return a;\n    }function e(a, b, c) {\n      a = yb(a, b, c);a.index = 0;a.sibling = null;return a;\n    }function f(b, c, d) {\n      b.index = d;if (!a) return c;d = b.alternate;if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;b.effectTag = 2;return c;\n    }function g(b) {\n      a && null === b.alternate && (b.effectTag = 2);return b;\n    }function h(a, b, c, d) {\n      if (null === b || 6 !== b.tag) return b = rc(c, a.internalContextTag, d), b[\"return\"] = a, b;b = e(b, c, d);b[\"return\"] = a;return b;\n    }function k(a, b, c, d) {\n      if (null !== b && b.type === c.type) return d = e(b, c.props, d), d.ref = Xa(b, c), d[\"return\"] = a, d;\n      d = qc(c, a.internalContextTag, d);d.ref = Xa(b, c);d[\"return\"] = a;return d;\n    }function m(a, b, c, d) {\n      if (null === b || 7 !== b.tag) return b = sc(c, a.internalContextTag, d), b[\"return\"] = a, b;b = e(b, c, d);b[\"return\"] = a;return b;\n    }function D(a, b, c, d) {\n      if (null === b || 9 !== b.tag) return b = tc(c, a.internalContextTag, d), b.type = c.value, b[\"return\"] = a, b;b = e(b, null, d);b.type = c.value;b[\"return\"] = a;return b;\n    }function A(a, b, c, d) {\n      if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = uc(c, a.internalContextTag, d), b[\"return\"] = a, b;b = e(b, c.children || [], d);b[\"return\"] = a;return b;\n    }function v(a, b, c, d, g) {\n      if (null === b || 10 !== b.tag) return b = zb(c, a.internalContextTag, d, g), b[\"return\"] = a, b;b = e(b, c, d);b[\"return\"] = a;return b;\n    }function K(a, b, c) {\n      if (\"string\" === typeof b || \"number\" === typeof b) return b = rc(\"\" + b, a.internalContextTag, c), b[\"return\"] = a, b;if (\"object\" === (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) && null !== b) {\n        switch (b.$$typeof) {case Db:\n            if (b.type === sa) return b = zb(b.props.children, a.internalContextTag, c, b.key), b[\"return\"] = a, b;c = qc(b, a.internalContextTag, c);c.ref = Xa(null, b);c[\"return\"] = a;return c;case Eb:\n            return b = sc(b, a.internalContextTag, c), b[\"return\"] = a, b;case Fb:\n            return c = tc(b, a.internalContextTag, c), c.type = b.value, c[\"return\"] = a, c;case Ya:\n            return b = uc(b, a.internalContextTag, c), b[\"return\"] = a, b;}if (Gb(b) || Wa(b)) return b = zb(b, a.internalContextTag, c, null), b[\"return\"] = a, b;Cb(a, b);\n      }return null;\n    }function L(a, b, c, d) {\n      var e = null !== b ? b.key : null;if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);if (\"object\" === (typeof c === \"undefined\" ? \"undefined\" : _typeof(c)) && null !== c) {\n        switch (c.$$typeof) {case Db:\n            return c.key === e ? c.type === sa ? v(a, b, c.props.children, d, e) : k(a, b, c, d) : null;case Eb:\n            return c.key === e ? m(a, b, c, d) : null;case Fb:\n            return null === e ? D(a, b, c, d) : null;case Ya:\n            return c.key === e ? A(a, b, c, d) : null;}if (Gb(c) || Wa(c)) return null !== e ? null : v(a, b, c, d, null);Cb(a, c);\n      }return null;\n    }function R(a, b, c, d, e) {\n      if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);if (\"object\" === (typeof d === \"undefined\" ? \"undefined\" : _typeof(d)) && null !== d) {\n        switch (d.$$typeof) {case Db:\n            return a = a.get(null === d.key ? c : d.key) || null, d.type === sa ? v(b, a, d.props.children, e, d.key) : k(b, a, d, e);case Eb:\n            return a = a.get(null === d.key ? c : d.key) || null, m(b, a, d, e);case Fb:\n            return a = a.get(c) || null, D(b, a, d, e);case Ya:\n            return a = a.get(null === d.key ? c : d.key) || null, A(b, a, d, e);}if (Gb(d) || Wa(d)) return a = a.get(c) || null, v(b, a, d, e, null);Cb(b, d);\n      }return null;\n    }function n(e, g, h, z) {\n      for (var t = null, q = null, p = g, x = g = 0, k = null; null !== p && x < h.length; x++) {\n        p.index > x ? (k = p, p = null) : k = p.sibling;var l = L(e, p, h[x], z);if (null === l) {\n          null === p && (p = k);break;\n        }a && p && null === l.alternate && b(e, p);g = f(l, g, x);null === q ? t = l : q.sibling = l;q = l;p = k;\n      }if (x === h.length) return c(e, p), t;if (null === p) {\n        for (; x < h.length; x++) {\n          if (p = K(e, h[x], z)) g = f(p, g, x), null === q ? t = p : q.sibling = p, q = p;\n        }return t;\n      }for (p = d(e, p); x < h.length; x++) {\n        if (k = R(p, e, x, h[x], z)) {\n          if (a && null !== k.alternate) p[\"delete\"](null === k.key ? x : k.key);g = f(k, g, x);null === q ? t = k : q.sibling = k;q = k;\n        }\n      }a && p.forEach(function (a) {\n        return b(e, a);\n      });return t;\n    }function r(e, g, h, z) {\n      var t = Wa(h);\"function\" !== typeof t ? l(\"150\") : void 0;h = t.call(h);null == h ? l(\"151\") : void 0;for (var q = t = null, p = g, x = g = 0, k = null, m = h.next(); null !== p && !m.done; x++, m = h.next()) {\n        p.index > x ? (k = p, p = null) : k = p.sibling;var La = L(e, p, m.value, z);if (null === La) {\n          p || (p = k);break;\n        }a && p && null === La.alternate && b(e, p);g = f(La, g, x);null === q ? t = La : q.sibling = La;q = La;p = k;\n      }if (m.done) return c(e, p), t;if (null === p) {\n        for (; !m.done; x++, m = h.next()) {\n          m = K(e, m.value, z), null !== m && (g = f(m, g, x), null === q ? t = m : q.sibling = m, q = m);\n        }return t;\n      }for (p = d(e, p); !m.done; x++, m = h.next()) {\n        if (m = R(p, e, x, m.value, z), null !== m) {\n          if (a && null !== m.alternate) p[\"delete\"](null === m.key ? x : m.key);\n          g = f(m, g, x);null === q ? t = m : q.sibling = m;q = m;\n        }\n      }a && p.forEach(function (a) {\n        return b(e, a);\n      });return t;\n    }return function (a, d, f, h) {\n      \"object\" === (typeof f === \"undefined\" ? \"undefined\" : _typeof(f)) && null !== f && f.type === sa && null === f.key && (f = f.props.children);var k = \"object\" === (typeof f === \"undefined\" ? \"undefined\" : _typeof(f)) && null !== f;if (k) switch (f.$$typeof) {case Db:\n          a: {\n            var q = f.key;for (k = d; null !== k;) {\n              if (k.key === q) {\n                if (10 === k.tag ? f.type === sa : k.type === f.type) {\n                  c(a, k.sibling);d = e(k, f.type === sa ? f.props.children : f.props, h);d.ref = Xa(k, f);d[\"return\"] = a;a = d;break a;\n                } else {\n                  c(a, k);break;\n                }\n              } else b(a, k);k = k.sibling;\n            }f.type === sa ? (d = zb(f.props.children, a.internalContextTag, h, f.key), d[\"return\"] = a, a = d) : (h = qc(f, a.internalContextTag, h), h.ref = Xa(d, f), h[\"return\"] = a, a = h);\n          }return g(a);case Eb:\n          a: {\n            for (k = f.key; null !== d;) {\n              if (d.key === k) {\n                if (7 === d.tag) {\n                  c(a, d.sibling);d = e(d, f, h);d[\"return\"] = a;a = d;break a;\n                } else {\n                  c(a, d);break;\n                }\n              } else b(a, d);d = d.sibling;\n            }d = sc(f, a.internalContextTag, h);d[\"return\"] = a;a = d;\n          }return g(a);case Fb:\n          a: {\n            if (null !== d) if (9 === d.tag) {\n              c(a, d.sibling);d = e(d, null, h);d.type = f.value;d[\"return\"] = a;a = d;break a;\n            } else c(a, d);d = tc(f, a.internalContextTag, h);d.type = f.value;d[\"return\"] = a;a = d;\n          }return g(a);case Ya:\n          a: {\n            for (k = f.key; null !== d;) {\n              if (d.key === k) {\n                if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                  c(a, d.sibling);d = e(d, f.children || [], h);d[\"return\"] = a;a = d;break a;\n                } else {\n                  c(a, d);break;\n                }\n              } else b(a, d);d = d.sibling;\n            }d = uc(f, a.internalContextTag, h);d[\"return\"] = a;a = d;\n          }return g(a);}if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h)) : (c(a, d), d = rc(f, a.internalContextTag, h)), d[\"return\"] = a, a = d, g(a);if (Gb(f)) return n(a, d, f, h);if (Wa(f)) return r(a, d, f, h);k && Cb(a, f);if (\"undefined\" === typeof f) switch (a.tag) {case 2:case 1:\n          h = a.type, l(\"152\", h.displayName || h.name || \"Component\");}return c(a, d);\n    };\n  }function Bf(a, b, c) {\n    var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;return { $$typeof: Ya, key: null == d ? null : \"\" + d, children: a, containerInfo: b, implementation: c };\n  }function Cf(a) {\n    if (me.hasOwnProperty(a)) return !0;if (ne.hasOwnProperty(a)) return !1;if (Df.test(a)) return me[a] = !0;ne[a] = !0;return !1;\n  }function zc(a, b, c) {\n    var d = Ub(b);if (d && Xc(b, c)) {\n      var e = d.mutationMethod;e ? e(a, c) : null == c || d.hasBooleanValue && !c || d.hasNumericValue && isNaN(c) || d.hasPositiveNumericValue && 1 > c || d.hasOverloadedBooleanValue && !1 === c ? oe(a, b) : d.mustUseProperty ? a[d.propertyName] = c : (b = d.attributeName, (e = d.attributeNamespace) ? a.setAttributeNS(e, b, \"\" + c) : d.hasBooleanValue || d.hasOverloadedBooleanValue && !0 === c ? a.setAttribute(b, \"\") : a.setAttribute(b, \"\" + c));\n    } else Ac(a, b, Xc(b, c) ? c : null);\n  }function Ac(a, b, c) {\n    Cf(b) && (null == c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c));\n  }function oe(a, b) {\n    var c = Ub(b);c ? (b = c.mutationMethod) ? b(a, void 0) : c.mustUseProperty ? a[c.propertyName] = c.hasBooleanValue ? !1 : \"\" : a.removeAttribute(c.attributeName) : a.removeAttribute(b);\n  }function Bc(a, b) {\n    var c = b.value,\n        d = b.checked;return C({ type: void 0, step: void 0, min: void 0, max: void 0 }, b, { defaultChecked: void 0, defaultValue: void 0, value: null != c ? c : a._wrapperState.initialValue, checked: null != d ? d : a._wrapperState.initialChecked });\n  }function pe(a, b) {\n    var c = b.defaultValue;a._wrapperState = { initialChecked: null != b.checked ? b.checked : b.defaultChecked, initialValue: null != b.value ? b.value : c, controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value };\n  }function qe(a, b) {\n    b = b.checked;null != b && zc(a, \"checked\", b);\n  }function Cc(a, b) {\n    qe(a, b);var c = b.value;if (null != c) {\n      if (0 === c && \"\" === a.value) a.value = \"0\";else if (\"number\" === b.type) {\n        if (b = parseFloat(a.value) || 0, c != b || c == b && a.value != c) a.value = \"\" + c;\n      } else a.value !== \"\" + c && (a.value = \"\" + c);\n    } else null == b.value && null != b.defaultValue && a.defaultValue !== \"\" + b.defaultValue && (a.defaultValue = \"\" + b.defaultValue), null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n  }function re(a, b) {\n    switch (b.type) {case \"submit\":case \"reset\":\n        break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":\n        a.value = \"\";a.value = a.defaultValue;break;default:\n        a.value = a.value;}b = a.name;\"\" !== b && (a.name = \"\");a.defaultChecked = !a.defaultChecked;a.defaultChecked = !a.defaultChecked;\"\" !== b && (a.name = b);\n  }function Ef(a) {\n    var b = \"\";na.Children.forEach(a, function (a) {\n      null == a || \"string\" !== typeof a && \"number\" !== typeof a || (b += a);\n    });return b;\n  }function Dc(a, b) {\n    a = C({ children: void 0 }, b);if (b = Ef(b.children)) a.children = b;return a;\n  }function ka(a, b, c, d) {\n    a = a.options;if (b) {\n      b = {};for (var e = 0; e < c.length; e++) {\n        b[\"$\" + c[e]] = !0;\n      }for (c = 0; c < a.length; c++) {\n        e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n      }\n    } else {\n      c = \"\" + c;b = null;for (e = 0; e < a.length; e++) {\n        if (a[e].value === c) {\n          a[e].selected = !0;d && (a[e].defaultSelected = !0);return;\n        }null !== b || a[e].disabled || (b = a[e]);\n      }null !== b && (b.selected = !0);\n    }\n  }function se(a, b) {\n    var c = b.value;a._wrapperState = { initialValue: null != c ? c : b.defaultValue, wasMultiple: !!b.multiple };\n  }function Ec(a, b) {\n    null != b.dangerouslySetInnerHTML ? l(\"91\") : void 0;return C({}, b, { value: void 0, defaultValue: void 0, children: \"\" + a._wrapperState.initialValue });\n  }function te(a, b) {\n    var c = b.value;null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? l(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : l(\"93\"), b = b[0]), c = \"\" + b), null == c && (c = \"\"));a._wrapperState = { initialValue: \"\" + c };\n  }function ue(a, b) {\n    var c = b.value;null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && (a.defaultValue = c));null != b.defaultValue && (a.defaultValue = b.defaultValue);\n  }function ve(a) {\n    switch (a) {case \"svg\":\n        return \"http://www.w3.org/2000/svg\";case \"math\":\n        return \"http://www.w3.org/1998/Math/MathML\";default:\n        return \"http://www.w3.org/1999/xhtml\";}\n  }function Fc(a, b) {\n    return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ve(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n  }function we(a, b, c) {\n    a = a.style;for (var d in b) {\n      if (b.hasOwnProperty(d)) {\n        c = 0 === d.indexOf(\"--\");var e = d;var f = b[d];e = null == f || \"boolean\" === typeof f || \"\" === f ? \"\" : c || \"number\" !== typeof f || 0 === f || Za.hasOwnProperty(e) && Za[e] ? (\"\" + f).trim() : f + \"px\";\"float\" === d && (d = \"cssFloat\");c ? a.setProperty(d, e) : a[d] = e;\n      }\n    }\n  }function Gc(a, b, c) {\n    b && (Ff[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? l(\"137\", a, c()) : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? l(\"60\") : void 0, \"object\" === _typeof(b.dangerouslySetInnerHTML) && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : l(\"61\")), null != b.style && \"object\" !== _typeof(b.style) ? l(\"62\", c()) : void 0);\n  }function Hc(a, b) {\n    if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;switch (a) {case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":\n        return !1;default:\n        return !0;}\n  }function Y(a, b) {\n    a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;var c = Kd(a);b = kb[b];for (var d = 0; d < b.length; d++) {\n      var e = b[d];c.hasOwnProperty(e) && c[e] || (\"topScroll\" === e ? ha(\"topScroll\", \"scroll\", a) : \"topFocus\" === e || \"topBlur\" === e ? (ha(\"topFocus\", \"focus\", a), ha(\"topBlur\", \"blur\", a), c.topBlur = !0, c.topFocus = !0) : \"topCancel\" === e ? (gc(\"cancel\", !0) && ha(\"topCancel\", \"cancel\", a), c.topCancel = !0) : \"topClose\" === e ? (gc(\"close\", !0) && ha(\"topClose\", \"close\", a), c.topClose = !0) : xe.hasOwnProperty(e) && r(e, xe[e], a), c[e] = !0);\n    }\n  }function ye(a, b, c, d) {\n    c = 9 === c.nodeType ? c : c.ownerDocument;\"http://www.w3.org/1999/xhtml\" === d && (d = ve(a));\"http://www.w3.org/1999/xhtml\" === d ? \"script\" === a ? (a = c.createElement(\"div\"), a.innerHTML = \"\\x3cscript\\x3e\\x3c/script\\x3e\", a = a.removeChild(a.firstChild)) : a = \"string\" === typeof b.is ? c.createElement(a, { is: b.is }) : c.createElement(a) : a = c.createElementNS(d, a);return a;\n  }function ze(a, b) {\n    return (9 === b.nodeType ? b : b.ownerDocument).createTextNode(a);\n  }function Ae(a, b, c, d) {\n    var e = Hc(b, c);switch (b) {case \"iframe\":case \"object\":\n        r(\"topLoad\", \"load\", a);var f = c;break;case \"video\":case \"audio\":\n        for (f in Z) {\n          Z.hasOwnProperty(f) && r(f, Z[f], a);\n        }f = c;break;case \"source\":\n        r(\"topError\", \"error\", a);f = c;break;case \"img\":case \"image\":\n        r(\"topError\", \"error\", a);r(\"topLoad\", \"load\", a);f = c;break;case \"form\":\n        r(\"topReset\", \"reset\", a);r(\"topSubmit\", \"submit\", a);f = c;break;case \"details\":\n        r(\"topToggle\", \"toggle\", a);f = c;break;case \"input\":\n        pe(a, c);f = Bc(a, c);r(\"topInvalid\", \"invalid\", a);Y(d, \"onChange\");break;case \"option\":\n        f = Dc(a, c);break;case \"select\":\n        se(a, c);f = C({}, c, { value: void 0 });r(\"topInvalid\", \"invalid\", a);Y(d, \"onChange\");break;case \"textarea\":\n        te(a, c);f = Ec(a, c);r(\"topInvalid\", \"invalid\", a);Y(d, \"onChange\");\n        break;default:\n        f = c;}Gc(b, f, $a);var g = f,\n        h;for (h in g) {\n      if (g.hasOwnProperty(h)) {\n        var k = g[h];\"style\" === h ? we(a, k, $a) : \"dangerouslySetInnerHTML\" === h ? (k = k ? k.__html : void 0, null != k && Be(a, k)) : \"children\" === h ? \"string\" === typeof k ? (\"textarea\" !== b || \"\" !== k) && Ic(a, k) : \"number\" === typeof k && Ic(a, \"\" + k) : \"suppressContentEditableWarning\" !== h && \"suppressHydrationWarning\" !== h && \"autoFocus\" !== h && (ca.hasOwnProperty(h) ? null != k && Y(d, h) : e ? Ac(a, h, k) : null != k && zc(a, h, k));\n      }\n    }switch (b) {case \"input\":\n        nb(a);re(a, c);break;case \"textarea\":\n        nb(a);c = a.textContent;c === a._wrapperState.initialValue && (a.value = c);break;case \"option\":\n        null != c.value && a.setAttribute(\"value\", c.value);break;case \"select\":\n        a.multiple = !!c.multiple;b = c.value;null != b ? ka(a, !!c.multiple, b, !1) : null != c.defaultValue && ka(a, !!c.multiple, c.defaultValue, !0);break;default:\n        \"function\" === typeof f.onClick && (a.onclick = G);}\n  }function Ce(a, b, c, d, e) {\n    var f = null;switch (b) {case \"input\":\n        c = Bc(a, c);d = Bc(a, d);f = [];break;case \"option\":\n        c = Dc(a, c);d = Dc(a, d);f = [];break;case \"select\":\n        c = C({}, c, { value: void 0 });\n        d = C({}, d, { value: void 0 });f = [];break;case \"textarea\":\n        c = Ec(a, c);d = Ec(a, d);f = [];break;default:\n        \"function\" !== typeof c.onClick && \"function\" === typeof d.onClick && (a.onclick = G);}Gc(b, d, $a);var g, h;a = null;for (g in c) {\n      if (!d.hasOwnProperty(g) && c.hasOwnProperty(g) && null != c[g]) if (\"style\" === g) for (h in b = c[g], b) {\n        b.hasOwnProperty(h) && (a || (a = {}), a[h] = \"\");\n      } else \"dangerouslySetInnerHTML\" !== g && \"children\" !== g && \"suppressContentEditableWarning\" !== g && \"suppressHydrationWarning\" !== g && \"autoFocus\" !== g && (ca.hasOwnProperty(g) ? f || (f = []) : (f = f || []).push(g, null));\n    }for (g in d) {\n      var k = d[g];b = null != c ? c[g] : void 0;if (d.hasOwnProperty(g) && k !== b && (null != k || null != b)) if (\"style\" === g) {\n        if (b) {\n          for (h in b) {\n            !b.hasOwnProperty(h) || k && k.hasOwnProperty(h) || (a || (a = {}), a[h] = \"\");\n          }for (h in k) {\n            k.hasOwnProperty(h) && b[h] !== k[h] && (a || (a = {}), a[h] = k[h]);\n          }\n        } else a || (f || (f = []), f.push(g, a)), a = k;\n      } else \"dangerouslySetInnerHTML\" === g ? (k = k ? k.__html : void 0, b = b ? b.__html : void 0, null != k && b !== k && (f = f || []).push(g, \"\" + k)) : \"children\" === g ? b === k || \"string\" !== typeof k && \"number\" !== typeof k || (f = f || []).push(g, \"\" + k) : \"suppressContentEditableWarning\" !== g && \"suppressHydrationWarning\" !== g && (ca.hasOwnProperty(g) ? (null != k && Y(e, g), f || b === k || (f = [])) : (f = f || []).push(g, k));\n    }a && (f = f || []).push(\"style\", a);return f;\n  }function De(a, b, c, d, e) {\n    \"input\" === c && \"radio\" === e.type && null != e.name && qe(a, e);Hc(c, d);d = Hc(c, e);for (var f = 0; f < b.length; f += 2) {\n      var g = b[f],\n          h = b[f + 1];\"style\" === g ? we(a, h, $a) : \"dangerouslySetInnerHTML\" === g ? Be(a, h) : \"children\" === g ? Ic(a, h) : d ? null != h ? Ac(a, g, h) : a.removeAttribute(g) : null != h ? zc(a, g, h) : oe(a, g);\n    }switch (c) {case \"input\":\n        Cc(a, e);break;case \"textarea\":\n        ue(a, e);break;case \"select\":\n        a._wrapperState.initialValue = void 0, b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ka(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ka(a, !!e.multiple, e.defaultValue, !0) : ka(a, !!e.multiple, e.multiple ? [] : \"\", !1));}\n  }function Ee(a, b, c, d, e) {\n    switch (b) {case \"iframe\":case \"object\":\n        r(\"topLoad\", \"load\", a);break;case \"video\":case \"audio\":\n        for (var f in Z) {\n          Z.hasOwnProperty(f) && r(f, Z[f], a);\n        }break;case \"source\":\n        r(\"topError\", \"error\", a);break;case \"img\":case \"image\":\n        r(\"topError\", \"error\", a);r(\"topLoad\", \"load\", a);break;case \"form\":\n        r(\"topReset\", \"reset\", a);r(\"topSubmit\", \"submit\", a);break;case \"details\":\n        r(\"topToggle\", \"toggle\", a);break;case \"input\":\n        pe(a, c);r(\"topInvalid\", \"invalid\", a);Y(e, \"onChange\");break;case \"select\":\n        se(a, c);r(\"topInvalid\", \"invalid\", a);Y(e, \"onChange\");break;case \"textarea\":\n        te(a, c), r(\"topInvalid\", \"invalid\", a), Y(e, \"onChange\");}Gc(b, c, $a);d = null;for (var g in c) {\n      c.hasOwnProperty(g) && (f = c[g], \"children\" === g ? \"string\" === typeof f ? a.textContent !== f && (d = [\"children\", f]) : \"number\" === typeof f && a.textContent !== \"\" + f && (d = [\"children\", \"\" + f]) : ca.hasOwnProperty(g) && null != f && Y(e, g));\n    }switch (b) {case \"input\":\n        nb(a);re(a, c);break;case \"textarea\":\n        nb(a);b = a.textContent;b === a._wrapperState.initialValue && (a.value = b);break;case \"select\":case \"option\":\n        break;default:\n        \"function\" === typeof c.onClick && (a.onclick = G);}return d;\n  }function Fe(a, b) {\n    return a.nodeValue !== b;\n  }function Jc(a) {\n    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n  }function Gf(a) {\n    a = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null;return !(!a || 1 !== a.nodeType || !a.hasAttribute(\"data-reactroot\"));\n  }function Hb(a, b, c, d, e) {\n    Jc(c) ? void 0 : l(\"200\");var f = c._reactRootContainer;if (f) E.updateContainer(b, f, a, e);else {\n      d = d || Gf(c);if (!d) for (f = void 0; f = c.lastChild;) {\n        c.removeChild(f);\n      }var g = E.createContainer(c, d);f = c._reactRootContainer = g;E.unbatchedUpdates(function () {\n        E.updateContainer(b, g, a, e);\n      });\n    }return E.getPublicRootInstance(f);\n  }\n  function Ge(a, b) {\n    var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;Jc(b) ? void 0 : l(\"200\");return Bf(a, b, null, c);\n  }function He(a, b) {\n    this._reactRootContainer = E.createContainer(a, b);\n  }na ? void 0 : l(\"227\");var Yc = { children: !0, dangerouslySetInnerHTML: !0, defaultValue: !0, defaultChecked: !0, innerHTML: !0, suppressContentEditableWarning: !0, suppressHydrationWarning: !0, style: !0 },\n      Ie = { MUST_USE_PROPERTY: 1, HAS_BOOLEAN_VALUE: 4, HAS_NUMERIC_VALUE: 8, HAS_POSITIVE_NUMERIC_VALUE: 24, HAS_OVERLOADED_BOOLEAN_VALUE: 32,\n    HAS_STRING_BOOLEAN_VALUE: 64, injectDOMPropertyConfig: function injectDOMPropertyConfig(a) {\n      var b = Ie,\n          c = a.Properties || {},\n          d = a.DOMAttributeNamespaces || {},\n          e = a.DOMAttributeNames || {};a = a.DOMMutationMethods || {};for (var f in c) {\n        ib.hasOwnProperty(f) ? l(\"48\", f) : void 0;var g = f.toLowerCase(),\n            h = c[f];g = { attributeName: g, attributeNamespace: null, propertyName: f, mutationMethod: null, mustUseProperty: va(h, b.MUST_USE_PROPERTY), hasBooleanValue: va(h, b.HAS_BOOLEAN_VALUE), hasNumericValue: va(h, b.HAS_NUMERIC_VALUE), hasPositiveNumericValue: va(h, b.HAS_POSITIVE_NUMERIC_VALUE),\n          hasOverloadedBooleanValue: va(h, b.HAS_OVERLOADED_BOOLEAN_VALUE), hasStringBooleanValue: va(h, b.HAS_STRING_BOOLEAN_VALUE) };1 >= g.hasBooleanValue + g.hasNumericValue + g.hasOverloadedBooleanValue ? void 0 : l(\"50\", f);e.hasOwnProperty(f) && (g.attributeName = e[f]);d.hasOwnProperty(f) && (g.attributeNamespace = d[f]);a.hasOwnProperty(f) && (g.mutationMethod = a[f]);ib[f] = g;\n      }\n    } },\n      ib = {},\n      aa = Ie,\n      Ib = aa.MUST_USE_PROPERTY,\n      w = aa.HAS_BOOLEAN_VALUE,\n      Je = aa.HAS_NUMERIC_VALUE,\n      Jb = aa.HAS_POSITIVE_NUMERIC_VALUE,\n      Ke = aa.HAS_OVERLOADED_BOOLEAN_VALUE,\n      Kb = aa.HAS_STRING_BOOLEAN_VALUE,\n      Hf = { Properties: { allowFullScreen: w, async: w, autoFocus: w, autoPlay: w, capture: Ke, checked: Ib | w, cols: Jb, contentEditable: Kb, controls: w, \"default\": w, defer: w, disabled: w, download: Ke, draggable: Kb, formNoValidate: w, hidden: w, loop: w, multiple: Ib | w, muted: Ib | w, noValidate: w, open: w, playsInline: w, readOnly: w, required: w, reversed: w, rows: Jb, rowSpan: Je, scoped: w, seamless: w, selected: Ib | w, size: Jb, start: Je, span: Jb, spellCheck: Kb, style: 0, tabIndex: 0, itemScope: w, acceptCharset: 0, className: 0, htmlFor: 0, httpEquiv: 0,\n      value: Kb }, DOMAttributeNames: { acceptCharset: \"accept-charset\", className: \"class\", htmlFor: \"for\", httpEquiv: \"http-equiv\" }, DOMMutationMethods: { value: function value(a, b) {\n        if (null == b) return a.removeAttribute(\"value\");\"number\" !== a.type || !1 === a.hasAttribute(\"value\") ? a.setAttribute(\"value\", \"\" + b) : a.validity && !a.validity.badInput && a.ownerDocument.activeElement !== a && a.setAttribute(\"value\", \"\" + b);\n      } } },\n      Kc = aa.HAS_STRING_BOOLEAN_VALUE,\n      Lc = { Properties: { autoReverse: Kc, externalResourcesRequired: Kc, preserveAlpha: Kc }, DOMAttributeNames: { autoReverse: \"autoReverse\",\n      externalResourcesRequired: \"externalResourcesRequired\", preserveAlpha: \"preserveAlpha\" }, DOMAttributeNamespaces: { xlinkActuate: \"http://www.w3.org/1999/xlink\", xlinkArcrole: \"http://www.w3.org/1999/xlink\", xlinkHref: \"http://www.w3.org/1999/xlink\", xlinkRole: \"http://www.w3.org/1999/xlink\", xlinkShow: \"http://www.w3.org/1999/xlink\", xlinkTitle: \"http://www.w3.org/1999/xlink\", xlinkType: \"http://www.w3.org/1999/xlink\", xmlBase: \"http://www.w3.org/XML/1998/namespace\", xmlLang: \"http://www.w3.org/XML/1998/namespace\", xmlSpace: \"http://www.w3.org/XML/1998/namespace\" } },\n      If = /[\\-\\:]([a-z])/g,\n      Jf = function Jf(a) {\n    return a[1].toUpperCase();\n  };\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function (a) {\n    var b = a.replace(If, Jf);Lc.Properties[b] = 0;Lc.DOMAttributeNames[b] = a;\n  });aa.injectDOMPropertyConfig(Hf);aa.injectDOMPropertyConfig(Lc);var y = { _caughtError: null, _hasCaughtError: !1, _rethrowError: null, _hasRethrowError: !1, injection: { injectErrorUtils: function injectErrorUtils(a) {\n        \"function\" !== typeof a.invokeGuardedCallback ? l(\"197\") : void 0;Le = a.invokeGuardedCallback;\n      } }, invokeGuardedCallback: function invokeGuardedCallback(a, b, c, d, e, f, g, h, k) {\n      Le.apply(y, arguments);\n    }, invokeGuardedCallbackAndCatchFirstError: function invokeGuardedCallbackAndCatchFirstError(a, b, c, d, e, f, g, h, k) {\n      y.invokeGuardedCallback.apply(this, arguments);if (y.hasCaughtError()) {\n        var l = y.clearCaughtError();y._hasRethrowError || (y._hasRethrowError = !0, y._rethrowError = l);\n      }\n    }, rethrowCaughtError: function rethrowCaughtError() {\n      return Kf.apply(y, arguments);\n    }, hasCaughtError: function hasCaughtError() {\n      return y._hasCaughtError;\n    }, clearCaughtError: function clearCaughtError() {\n      if (y._hasCaughtError) {\n        var a = y._caughtError;y._caughtError = null;y._hasCaughtError = !1;return a;\n      }l(\"198\");\n    } },\n      Le = function Le(a, b, c, d, e, f, g, h, k) {\n    y._hasCaughtError = !1;y._caughtError = null;var l = Array.prototype.slice.call(arguments, 3);try {\n      b.apply(c, l);\n    } catch (D) {\n      y._caughtError = D, y._hasCaughtError = !0;\n    }\n  },\n      Kf = function Kf() {\n    if (y._hasRethrowError) {\n      var a = y._rethrowError;y._rethrowError = null;y._hasRethrowError = !1;throw a;\n    }\n  },\n      jb = null,\n      ba = {},\n      oa = [],\n      Vb = {},\n      ca = {},\n      kb = {},\n      Lf = Object.freeze({ plugins: oa, eventNameDispatchConfigs: Vb, registrationNameModules: ca, registrationNameDependencies: kb, possibleRegistrationNames: null, injectEventPluginOrder: ad, injectEventPluginsByName: bd }),\n      ta = function ta() {};ta.thatReturns = lb;ta.thatReturnsFalse = lb(!1);ta.thatReturnsTrue = lb(!0);ta.thatReturnsNull = lb(null);ta.thatReturnsThis = function () {\n    return this;\n  };ta.thatReturnsArgument = function (a) {\n    return a;\n  };var G = ta,\n      Xb = null,\n      vd = null,\n      dd = null,\n      pa = null,\n      Me = function Me(a, b) {\n    if (a) {\n      var c = a._dispatchListeners,\n          d = a._dispatchInstances;if (Array.isArray(c)) for (var e = 0; e < c.length && !a.isPropagationStopped(); e++) {\n        cd(a, b, c[e], d[e]);\n      } else c && cd(a, b, c, d);a._dispatchListeners = null;a._dispatchInstances = null;a.isPersistent() || a.constructor.release(a);\n    }\n  },\n      $e = function $e(a) {\n    return Me(a, !0);\n  },\n      af = function af(a) {\n    return Me(a, !1);\n  },\n      Mc = { injectEventPluginOrder: ad,\n    injectEventPluginsByName: bd },\n      Mf = Object.freeze({ injection: Mc, getListener: Wb, extractEvents: ed, enqueueEvents: Yb, processEventQueue: Zb }),\n      Ne = Math.random().toString(36).slice(2),\n      O = \"__reactInternalInstance$\" + Ne,\n      ea = \"__reactEventHandlers$\" + Ne,\n      Oe = Object.freeze({ precacheFiberNode: function precacheFiberNode(a, b) {\n      b[O] = a;\n    }, getClosestInstanceFromNode: W, getInstanceFromNode: function getInstanceFromNode(a) {\n      a = a[O];return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n    }, getNodeFromInstance: xa, getFiberCurrentPropsFromNode: fd, updateFiberProps: function updateFiberProps(a, b) {\n      a[ea] = b;\n    } }),\n      Nf = Object.freeze({ accumulateTwoPhaseDispatches: ya,\n    accumulateTwoPhaseDispatchesSkipTarget: function accumulateTwoPhaseDispatchesSkipTarget(a) {\n      da(a, cf);\n    }, accumulateEnterLeaveDispatches: id, accumulateDirectDispatches: function accumulateDirectDispatches(a) {\n      da(a, df);\n    } }),\n      Lb = !(\"undefined\" === typeof window || !window.document || !window.document.createElement),\n      P = { canUseDOM: Lb, canUseWorkers: \"undefined\" !== typeof Worker, canUseEventListeners: Lb && !(!window.addEventListener && !window.attachEvent), canUseViewport: Lb && !!window.screen, isInWorker: !Lb },\n      ac = null,\n      H = { _root: null, _startText: null, _fallbackText: null },\n      C = na.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.assign,\n      Pe = \"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),\n      Of = { type: null, target: null, currentTarget: G.thatReturnsNull, eventPhase: null, bubbles: null, cancelable: null, timeStamp: function timeStamp(a) {\n      return a.timeStamp || Date.now();\n    }, defaultPrevented: null, isTrusted: null };C(n.prototype, { preventDefault: function preventDefault() {\n      this.defaultPrevented = !0;var a = this.nativeEvent;a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = G.thatReturnsTrue);\n    }, stopPropagation: function stopPropagation() {\n      var a = this.nativeEvent;a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = G.thatReturnsTrue);\n    }, persist: function persist() {\n      this.isPersistent = G.thatReturnsTrue;\n    }, isPersistent: G.thatReturnsFalse, destructor: function destructor() {\n      var a = this.constructor.Interface,\n          b;for (b in a) {\n        this[b] = null;\n      }for (a = 0; a < Pe.length; a++) {\n        this[Pe[a]] = null;\n      }\n    } });n.Interface = Of;n.augmentClass = function (a, b) {\n    var c = function c() {};c.prototype = this.prototype;c = new c();C(c, a.prototype);a.prototype = c;a.prototype.constructor = a;a.Interface = C({}, this.Interface, b);a.augmentClass = this.augmentClass;md(a);\n  };md(n);n.augmentClass(nd, { data: null });n.augmentClass(od, { data: null });var hf = [9, 13, 27, 32],\n      bc = P.canUseDOM && \"CompositionEvent\" in window,\n      ab = null;P.canUseDOM && \"documentMode\" in document && (ab = document.documentMode);var Pf = P.canUseDOM && \"TextEvent\" in window && !ab && !gf(),\n      td = P.canUseDOM && (!bc || ab && 8 < ab && 11 >= ab),\n      sd = String.fromCharCode(32),\n      V = { beforeInput: { phasedRegistrationNames: { bubbled: \"onBeforeInput\", captured: \"onBeforeInputCapture\" }, dependencies: [\"topCompositionEnd\", \"topKeyPress\", \"topTextInput\", \"topPaste\"] }, compositionEnd: { phasedRegistrationNames: { bubbled: \"onCompositionEnd\", captured: \"onCompositionEndCapture\" }, dependencies: \"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \") }, compositionStart: { phasedRegistrationNames: { bubbled: \"onCompositionStart\", captured: \"onCompositionStartCapture\" }, dependencies: \"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \") },\n    compositionUpdate: { phasedRegistrationNames: { bubbled: \"onCompositionUpdate\", captured: \"onCompositionUpdateCapture\" }, dependencies: \"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \") } },\n      rd = !1,\n      za = !1,\n      Qf = { eventTypes: V, extractEvents: function extractEvents(a, b, c, d) {\n      var e;if (bc) b: {\n        switch (a) {case \"topCompositionStart\":\n            var f = V.compositionStart;break b;case \"topCompositionEnd\":\n            f = V.compositionEnd;break b;case \"topCompositionUpdate\":\n            f = V.compositionUpdate;break b;}f = void 0;\n      } else za ? pd(a, c) && (f = V.compositionEnd) : \"topKeyDown\" === a && 229 === c.keyCode && (f = V.compositionStart);f ? (td && (za || f !== V.compositionStart ? f === V.compositionEnd && za && (e = kd()) : (H._root = d, H._startText = ld(), za = !0)), f = nd.getPooled(f, b, c, d), e ? f.data = e : (e = qd(c), null !== e && (f.data = e)), ya(f), e = f) : e = null;(a = Pf ? jf(a, c) : kf(a, c)) ? (b = od.getPooled(V.beforeInput, b, c, d), b.data = a, ya(b)) : b = null;return [e, b];\n    } },\n      mb = null,\n      Ga = null,\n      fa = null,\n      Qe = { injectFiberControlledHostComponent: function injectFiberControlledHostComponent(a) {\n      mb = a;\n    } },\n      Rf = Object.freeze({ injection: Qe, enqueueStateRestore: wd, restoreStateIfNeeded: xd }),\n      ec = function ec(a, b) {\n    return a(b);\n  },\n      dc = !1,\n      lf = { color: !0, date: !0, datetime: !0, \"datetime-local\": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 },\n      zd;P.canUseDOM && (zd = document.implementation && document.implementation.hasFeature && !0 !== document.implementation.hasFeature(\"\", \"\"));var Dd = { change: { phasedRegistrationNames: { bubbled: \"onChange\", captured: \"onChangeCapture\" }, dependencies: \"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \") } },\n      Ha = null,\n      Oa = null,\n      Nc = !1;P.canUseDOM && (Nc = gc(\"input\") && (!document.documentMode || 9 < document.documentMode));var Sf = { eventTypes: Dd, _isInputEventSupported: Nc, extractEvents: function extractEvents(a, b, c, d) {\n      var e = b ? xa(b) : window,\n          f = e.nodeName && e.nodeName.toLowerCase();if (\"select\" === f || \"input\" === f && \"file\" === e.type) var g = of;else if (yd(e)) {\n        if (Nc) g = sf;else {\n          g = qf;var h = pf;\n        }\n      } else f = e.nodeName, !f || \"input\" !== f.toLowerCase() || \"checkbox\" !== e.type && \"radio\" !== e.type || (g = rf);if (g && (g = g(a, b))) return Cd(g, c, d);h && h(a, e, b);\"topBlur\" === a && null != b && (a = b._wrapperState || e._wrapperState) && a.controlled && \"number\" === e.type && (a = \"\" + e.value, e.getAttribute(\"value\") !== a && e.setAttribute(\"value\", a));\n    } };n.augmentClass(Aa, { view: null, detail: null });var uf = { Alt: \"altKey\", Control: \"ctrlKey\", Meta: \"metaKey\", Shift: \"shiftKey\" };Aa.augmentClass(qa, { screenX: null, screenY: null, clientX: null, clientY: null, pageX: null, pageY: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, getModifierState: hc, button: null, buttons: null, relatedTarget: function relatedTarget(a) {\n      return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n    } });var Oc = { mouseEnter: { registrationName: \"onMouseEnter\", dependencies: [\"topMouseOut\", \"topMouseOver\"] }, mouseLeave: { registrationName: \"onMouseLeave\", dependencies: [\"topMouseOut\", \"topMouseOver\"] } },\n      Tf = { eventTypes: Oc, extractEvents: function extractEvents(a, b, c, d) {\n      if (\"topMouseOver\" === a && (c.relatedTarget || c.fromElement) || \"topMouseOut\" !== a && \"topMouseOver\" !== a) return null;var e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\"topMouseOut\" === a ? (a = b, b = (b = c.relatedTarget || c.toElement) ? W(b) : null) : a = null;if (a === b) return null;var f = null == a ? e : xa(a);e = null == b ? e : xa(b);var g = qa.getPooled(Oc.mouseLeave, a, c, d);g.type = \"mouseleave\";g.target = f;g.relatedTarget = e;c = qa.getPooled(Oc.mouseEnter, b, c, d);c.type = \"mouseenter\";c.target = e;c.relatedTarget = f;id(g, c, a, b);return [g, c];\n    } },\n      bb = na.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,\n      Id = { listen: function listen(a, b, c) {\n      if (a.addEventListener) return a.addEventListener(b, c, !1), { remove: function remove() {\n          a.removeEventListener(b, c, !1);\n        } };if (a.attachEvent) return a.attachEvent(\"on\" + b, c), { remove: function remove() {\n          a.detachEvent(\"on\" + b, c);\n        } };\n    }, capture: function capture(a, b, c) {\n      return a.addEventListener ? (a.addEventListener(b, c, !0), { remove: function remove() {\n          a.removeEventListener(b, c, !0);\n        } }) : { remove: G };\n    }, registerDefault: function registerDefault() {} },\n      qb = [],\n      Ra = !0,\n      pb = void 0,\n      Uf = Object.freeze({ get _enabled() {\n      return Ra;\n    }, get _handleTopLevel() {\n      return pb;\n    }, setHandleTopLevel: function setHandleTopLevel(a) {\n      pb = a;\n    }, setEnabled: ic, isEnabled: function isEnabled() {\n      return Ra;\n    }, trapBubbledEvent: r, trapCapturedEvent: ha, dispatchEvent: jc }),\n      U = { animationend: rb(\"Animation\", \"AnimationEnd\"), animationiteration: rb(\"Animation\", \"AnimationIteration\"), animationstart: rb(\"Animation\", \"AnimationStart\"), transitionend: rb(\"Transition\", \"TransitionEnd\") },\n      kc = {},\n      Jd = {};P.canUseDOM && (Jd = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete U.animationend.animation, delete U.animationiteration.animation, delete U.animationstart.animation), \"TransitionEvent\" in window || delete U.transitionend.transition);var xe = { topAbort: \"abort\", topAnimationEnd: sb(\"animationend\") || \"animationend\", topAnimationIteration: sb(\"animationiteration\") || \"animationiteration\", topAnimationStart: sb(\"animationstart\") || \"animationstart\", topBlur: \"blur\", topCancel: \"cancel\", topCanPlay: \"canplay\", topCanPlayThrough: \"canplaythrough\", topChange: \"change\", topClick: \"click\", topClose: \"close\", topCompositionEnd: \"compositionend\", topCompositionStart: \"compositionstart\", topCompositionUpdate: \"compositionupdate\", topContextMenu: \"contextmenu\", topCopy: \"copy\", topCut: \"cut\", topDoubleClick: \"dblclick\", topDrag: \"drag\", topDragEnd: \"dragend\",\n    topDragEnter: \"dragenter\", topDragExit: \"dragexit\", topDragLeave: \"dragleave\", topDragOver: \"dragover\", topDragStart: \"dragstart\", topDrop: \"drop\", topDurationChange: \"durationchange\", topEmptied: \"emptied\", topEncrypted: \"encrypted\", topEnded: \"ended\", topError: \"error\", topFocus: \"focus\", topInput: \"input\", topKeyDown: \"keydown\", topKeyPress: \"keypress\", topKeyUp: \"keyup\", topLoadedData: \"loadeddata\", topLoad: \"load\", topLoadedMetadata: \"loadedmetadata\", topLoadStart: \"loadstart\", topMouseDown: \"mousedown\", topMouseMove: \"mousemove\", topMouseOut: \"mouseout\",\n    topMouseOver: \"mouseover\", topMouseUp: \"mouseup\", topPaste: \"paste\", topPause: \"pause\", topPlay: \"play\", topPlaying: \"playing\", topProgress: \"progress\", topRateChange: \"ratechange\", topScroll: \"scroll\", topSeeked: \"seeked\", topSeeking: \"seeking\", topSelectionChange: \"selectionchange\", topStalled: \"stalled\", topSuspend: \"suspend\", topTextInput: \"textInput\", topTimeUpdate: \"timeupdate\", topToggle: \"toggle\", topTouchCancel: \"touchcancel\", topTouchEnd: \"touchend\", topTouchMove: \"touchmove\", topTouchStart: \"touchstart\", topTransitionEnd: sb(\"transitionend\") || \"transitionend\", topVolumeChange: \"volumechange\", topWaiting: \"waiting\", topWheel: \"wheel\" },\n      Ld = {},\n      zf = 0,\n      tb = \"_reactListenersID\" + (\"\" + Math.random()).slice(2),\n      nc = function nc(a) {\n    a = a || (\"undefined\" !== typeof document ? document : void 0);if (\"undefined\" === typeof a) return null;try {\n      return a.activeElement || a.body;\n    } catch (b) {\n      return a.body;\n    }\n  },\n      Vf = Object.prototype.hasOwnProperty,\n      oc = function oc(a, b) {\n    if (Md(a, b)) return !0;if (\"object\" !== (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) || null === a || \"object\" !== (typeof b === \"undefined\" ? \"undefined\" : _typeof(b)) || null === b) return !1;var c = Object.keys(a),\n        d = Object.keys(b);if (c.length !== d.length) return !1;for (d = 0; d < c.length; d++) {\n      if (!Vf.call(b, c[d]) || !Md(a[c[d]], b[c[d]])) return !1;\n    }return !0;\n  },\n      Od = function Od(a) {\n    var b = (a ? a.ownerDocument || a : document).defaultView || window;return !!(a && (\"function\" === typeof b.Node ? a instanceof b.Node : \"object\" === (typeof a === \"undefined\" ? \"undefined\" : _typeof(a)) && \"number\" === typeof a.nodeType && \"string\" === typeof a.nodeName)) && 3 == a.nodeType;\n  },\n      Wf = P.canUseDOM && \"documentMode\" in document && 11 >= document.documentMode,\n      Sd = { select: { phasedRegistrationNames: { bubbled: \"onSelect\", captured: \"onSelectCapture\" }, dependencies: \"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \") } },\n      X = null,\n      pc = null,\n      Sa = null,\n      mc = !1,\n      Xf = { eventTypes: Sd, extractEvents: function extractEvents(a, b, c, d) {\n      var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n          f;if (!(f = !e)) {\n        a: {\n          e = Kd(e);f = kb.onSelect;for (var g = 0; g < f.length; g++) {\n            var h = f[g];if (!e.hasOwnProperty(h) || !e[h]) {\n              e = !1;break a;\n            }\n          }e = !0;\n        }f = !e;\n      }if (f) return null;e = b ? xa(b) : window;switch (a) {case \"topFocus\":\n          if (yd(e) || \"true\" === e.contentEditable) X = e, pc = b, Sa = null;break;case \"topBlur\":\n          Sa = pc = X = null;break;case \"topMouseDown\":\n          mc = !0;break;case \"topContextMenu\":case \"topMouseUp\":\n          return mc = !1, Rd(c, d);case \"topSelectionChange\":\n          if (Wf) break;case \"topKeyDown\":case \"topKeyUp\":\n          return Rd(c, d);}return null;\n    } };n.augmentClass(Td, { animationName: null, elapsedTime: null, pseudoElement: null });n.augmentClass(Ud, { clipboardData: function clipboardData(a) {\n      return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n    } });Aa.augmentClass(Vd, { relatedTarget: null });var Yf = { Esc: \"Escape\", Spacebar: \" \", Left: \"ArrowLeft\", Up: \"ArrowUp\", Right: \"ArrowRight\", Down: \"ArrowDown\", Del: \"Delete\", Win: \"OS\", Menu: \"ContextMenu\", Apps: \"ContextMenu\", Scroll: \"ScrollLock\",\n    MozPrintableKey: \"Unidentified\" },\n      Zf = { 8: \"Backspace\", 9: \"Tab\", 12: \"Clear\", 13: \"Enter\", 16: \"Shift\", 17: \"Control\", 18: \"Alt\", 19: \"Pause\", 20: \"CapsLock\", 27: \"Escape\", 32: \" \", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\", 37: \"ArrowLeft\", 38: \"ArrowUp\", 39: \"ArrowRight\", 40: \"ArrowDown\", 45: \"Insert\", 46: \"Delete\", 112: \"F1\", 113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\", 119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"NumLock\", 145: \"ScrollLock\", 224: \"Meta\" };Aa.augmentClass(Wd, { key: function key(a) {\n      if (a.key) {\n        var b = Yf[a.key] || a.key;if (\"Unidentified\" !== b) return b;\n      }return \"keypress\" === a.type ? (a = ub(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? Zf[a.keyCode] || \"Unidentified\" : \"\";\n    }, location: null, ctrlKey: null, shiftKey: null, altKey: null, metaKey: null, repeat: null, locale: null, getModifierState: hc, charCode: function charCode(a) {\n      return \"keypress\" === a.type ? ub(a) : 0;\n    }, keyCode: function keyCode(a) {\n      return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n    }, which: function which(a) {\n      return \"keypress\" === a.type ? ub(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n    } });qa.augmentClass(Xd, { dataTransfer: null });Aa.augmentClass(Yd, { touches: null, targetTouches: null, changedTouches: null, altKey: null, metaKey: null, ctrlKey: null, shiftKey: null, getModifierState: hc });n.augmentClass(Zd, { propertyName: null, elapsedTime: null, pseudoElement: null });qa.augmentClass($d, { deltaX: function deltaX(a) {\n      return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n    }, deltaY: function deltaY(a) {\n      return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n    }, deltaZ: null,\n    deltaMode: null });var Re = {},\n      Se = {};\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function (a) {\n    var b = a[0].toUpperCase() + a.slice(1),\n        c = \"on\" + b;b = \"top\" + b;c = { phasedRegistrationNames: { bubbled: c, captured: c + \"Capture\" }, dependencies: [b] };Re[a] = c;Se[b] = c;\n  });var $f = { eventTypes: Re, extractEvents: function extractEvents(a, b, c, d) {\n      var e = Se[a];if (!e) return null;switch (a) {case \"topKeyPress\":\n          if (0 === ub(c)) return null;case \"topKeyDown\":case \"topKeyUp\":\n          a = Wd;break;case \"topBlur\":case \"topFocus\":\n          a = Vd;break;case \"topClick\":\n          if (2 === c.button) return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":\n          a = qa;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":\n          a = Xd;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":\n          a = Yd;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":\n          a = Td;break;case \"topTransitionEnd\":\n          a = Zd;break;case \"topScroll\":\n          a = Aa;break;case \"topWheel\":\n          a = $d;break;case \"topCopy\":case \"topCut\":case \"topPaste\":\n          a = Ud;break;default:\n          a = n;}b = a.getPooled(e, b, c, d);ya(b);return b;\n    } };pb = function pb(a, b, c, d) {\n    a = ed(a, b, c, d);Yb(a);Zb(!1);\n  };Mc.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));(function (a) {\n    Xb = a.getFiberCurrentPropsFromNode;vd = a.getInstanceFromNode;dd = a.getNodeFromInstance;\n  })(Oe);Mc.injectEventPluginsByName({ SimpleEventPlugin: $f, EnterLeaveEventPlugin: Tf, ChangeEventPlugin: Sf, SelectEventPlugin: Xf, BeforeInputEventPlugin: Qf });\n  var ja = {},\n      vb = [],\n      ra = -1;new Set();var ia = { current: ja },\n      J = { current: !1 },\n      wb = ja,\n      vc = null,\n      wc = null,\n      ag = function ag(a, b, c, d) {\n    function e(a, b) {\n      b.updater = f;a.stateNode = b;b._reactInternalFiber = a;\n    }var f = { isMounted: vf, enqueueSetState: function enqueueSetState(c, d, e) {\n        c = c._reactInternalFiber;e = void 0 === e ? null : e;var f = b(c);Bb(c, { expirationTime: f, partialState: d, callback: e, isReplace: !1, isForced: !1, nextCallback: null, next: null });a(c, f);\n      }, enqueueReplaceState: function enqueueReplaceState(c, d, e) {\n        c = c._reactInternalFiber;e = void 0 === e ? null : e;var f = b(c);Bb(c, { expirationTime: f,\n          partialState: d, callback: e, isReplace: !0, isForced: !1, nextCallback: null, next: null });a(c, f);\n      }, enqueueForceUpdate: function enqueueForceUpdate(c, d) {\n        c = c._reactInternalFiber;d = void 0 === d ? null : d;var e = b(c);Bb(c, { expirationTime: e, partialState: null, callback: d, isReplace: !1, isForced: !0, nextCallback: null, next: null });a(c, e);\n      } };return { adoptClassInstance: e, constructClassInstance: function constructClassInstance(a, b) {\n        var c = a.type,\n            d = Ta(a),\n            f = 2 === a.tag && null != a.type.contextTypes,\n            g = f ? Va(a, d) : ja;b = new c(b, g);e(a, b);f && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = d, a.__reactInternalMemoizedMaskedChildContext = g);return b;\n      }, mountClassInstance: function mountClassInstance(a, b) {\n        var c = a.alternate,\n            d = a.stateNode,\n            e = d.state || null,\n            h = a.pendingProps;h ? void 0 : l(\"158\");var g = Ta(a);d.props = h;d.state = a.memoizedState = e;d.refs = ja;d.context = Va(a, g);null != a.type && null != a.type.prototype && !0 === a.type.prototype.unstable_isAsyncReactComponent && (a.internalContextTag |= 1);\"function\" === typeof d.componentWillMount && (e = d.state, d.componentWillMount(), e !== d.state && f.enqueueReplaceState(d, d.state, null), e = a.updateQueue, null !== e && (d.state = xc(c, a, e, d, h, b)));\"function\" === typeof d.componentDidMount && (a.effectTag |= 4);\n      }, updateClassInstance: function updateClassInstance(a, b, e) {\n        var g = b.stateNode;g.props = b.memoizedProps;g.state = b.memoizedState;var h = b.memoizedProps,\n            k = b.pendingProps;k || (k = h, null == k ? l(\"159\") : void 0);var v = g.context,\n            K = Ta(b);K = Va(b, K);\"function\" !== typeof g.componentWillReceiveProps || h === k && v === K || (v = g.state, g.componentWillReceiveProps(k, K), g.state !== v && f.enqueueReplaceState(g, g.state, null));v = b.memoizedState;e = null !== b.updateQueue ? xc(a, b, b.updateQueue, g, k, e) : v;if (!(h !== k || v !== e || J.current || null !== b.updateQueue && b.updateQueue.hasForceUpdate)) return \"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && v === a.memoizedState || (b.effectTag |= 4), !1;var L = k;if (null === h || null !== b.updateQueue && b.updateQueue.hasForceUpdate) L = !0;else {\n          var R = b.stateNode,\n              n = b.type;L = \"function\" === typeof R.shouldComponentUpdate ? R.shouldComponentUpdate(L, e, K) : n.prototype && n.prototype.isPureReactComponent ? !oc(h, L) || !oc(v, e) : !0;\n        }L ? (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(k, e, K), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && v === a.memoizedState || (b.effectTag |= 4), c(b, k), d(b, e));g.props = k;g.state = e;g.context = K;return L;\n      } };\n  },\n      cb = \"function\" === typeof Symbol && Symbol[\"for\"],\n      Db = cb ? Symbol[\"for\"](\"react.element\") : 60103,\n      Eb = cb ? Symbol[\"for\"](\"react.call\") : 60104,\n      Fb = cb ? Symbol[\"for\"](\"react.return\") : 60105,\n      Ya = cb ? Symbol[\"for\"](\"react.portal\") : 60106,\n      sa = cb ? Symbol[\"for\"](\"react.fragment\") : 60107,\n      ke = \"function\" === typeof Symbol && Symbol.iterator,\n      Gb = Array.isArray,\n      db = le(!0),\n      Mb = le(!1),\n      bg = function bg(a, b, c, d, e) {\n    function f(a, b, c) {\n      var d = b.expirationTime;b.child = null === a ? Mb(b, null, c, d) : db(b, a.child, c, d);\n    }function g(a, b) {\n      var c = b.ref;null === c || a && a.ref === c || (b.effectTag |= 128);\n    }function h(a, b, c, d) {\n      g(a, b);if (!c) return d && de(b, !1), m(a, b);c = b.stateNode;bb.current = b;var e = c.render();b.effectTag |= 1;f(a, b, e);b.memoizedState = c.state;b.memoizedProps = c.props;d && de(b, !0);return b.child;\n    }function k(a) {\n      var b = a.stateNode;\n      b.pendingContext ? be(a, b.pendingContext, b.pendingContext !== b.context) : b.context && be(a, b.context, !1);R(a, b.containerInfo);\n    }function m(a, b) {\n      null !== a && b.child !== a.child ? l(\"153\") : void 0;if (null !== b.child) {\n        a = b.child;var c = yb(a, a.pendingProps, a.expirationTime);b.child = c;for (c[\"return\"] = b; null !== a.sibling;) {\n          a = a.sibling, c = c.sibling = yb(a, a.pendingProps, a.expirationTime), c[\"return\"] = b;\n        }c.sibling = null;\n      }return b.child;\n    }function D(a, b) {\n      switch (b.tag) {case 3:\n          k(b);break;case 2:\n          xb(b);break;case 4:\n          R(b, b.stateNode.containerInfo);}return null;\n    }\n    var A = a.shouldSetTextContent,\n        v = a.useSyncScheduling,\n        n = a.shouldDeprioritizeSubtree,\n        L = b.pushHostContext,\n        R = b.pushHostContainer,\n        r = c.enterHydrationState,\n        w = c.resetHydrationState,\n        y = c.tryToClaimNextHydratableInstance;a = ag(d, e, function (a, b) {\n      a.memoizedProps = b;\n    }, function (a, b) {\n      a.memoizedState = b;\n    });var x = a.adoptClassInstance,\n        t = a.constructClassInstance,\n        z = a.mountClassInstance,\n        yc = a.updateClassInstance;return { beginWork: function beginWork(a, b, c) {\n        if (0 === b.expirationTime || b.expirationTime > c) return D(a, b);switch (b.tag) {case 0:\n            null !== a ? l(\"155\") : void 0;var d = b.type,\n                e = b.pendingProps,\n                q = Ta(b);q = Va(b, q);d = d(e, q);b.effectTag |= 1;\"object\" === (typeof d === \"undefined\" ? \"undefined\" : _typeof(d)) && null !== d && \"function\" === typeof d.render ? (b.tag = 2, e = xb(b), x(b, d), z(b, c), b = h(a, b, !0, e)) : (b.tag = 1, f(a, b, d), b.memoizedProps = e, b = b.child);return b;case 1:\n            a: {\n              e = b.type;c = b.pendingProps;d = b.memoizedProps;if (J.current) null === c && (c = d);else if (null === c || d === c) {\n                b = m(a, b);break a;\n              }d = Ta(b);d = Va(b, d);e = e(c, d);b.effectTag |= 1;f(a, b, e);b.memoizedProps = c;b = b.child;\n            }return b;case 2:\n            return e = xb(b), d = void 0, null === a ? b.stateNode ? l(\"153\") : (t(b, b.pendingProps), z(b, c), d = !0) : d = yc(a, b, c), h(a, b, d, e);case 3:\n            return k(b), e = b.updateQueue, null !== e ? (d = b.memoizedState, e = xc(a, b, e, null, null, c), d === e ? (w(), b = m(a, b)) : (d = e.element, q = b.stateNode, (null === a || null === a.child) && q.hydrate && r(b) ? (b.effectTag |= 2, b.child = Mb(b, null, d, c)) : (w(), f(a, b, d)), b.memoizedState = e, b = b.child)) : (w(), b = m(a, b)), b;case 5:\n            L(b);null === a && y(b);e = b.type;var p = b.memoizedProps;d = b.pendingProps;null === d && (d = p, null === d ? l(\"154\") : void 0);q = null !== a ? a.memoizedProps : null;J.current || null !== d && p !== d ? (p = d.children, A(e, d) ? p = null : q && A(e, q) && (b.effectTag |= 16), g(a, b), 2147483647 !== c && !v && n(e, d) ? (b.expirationTime = 2147483647, b = null) : (f(a, b, p), b.memoizedProps = d, b = b.child)) : b = m(a, b);return b;case 6:\n            return null === a && y(b), a = b.pendingProps, null === a && (a = b.memoizedProps), b.memoizedProps = a, null;case 8:\n            b.tag = 7;case 7:\n            e = b.pendingProps;if (J.current) null === e && (e = a && a.memoizedProps, null === e ? l(\"154\") : void 0);else if (null === e || b.memoizedProps === e) e = b.memoizedProps;d = e.children;b.stateNode = null === a ? Mb(b, b.stateNode, d, c) : db(b, b.stateNode, d, c);b.memoizedProps = e;return b.stateNode;case 9:\n            return null;case 4:\n            a: {\n              R(b, b.stateNode.containerInfo);e = b.pendingProps;if (J.current) null === e && (e = a && a.memoizedProps, null == e ? l(\"154\") : void 0);else if (null === e || b.memoizedProps === e) {\n                b = m(a, b);break a;\n              }null === a ? b.child = db(b, null, e, c) : f(a, b, e);b.memoizedProps = e;b = b.child;\n            }return b;case 10:\n            a: {\n              c = b.pendingProps;if (J.current) null === c && (c = b.memoizedProps);else if (null === c || b.memoizedProps === c) {\n                b = m(a, b);break a;\n              }f(a, b, c);b.memoizedProps = c;b = b.child;\n            }return b;default:\n            l(\"156\");}\n      }, beginFailedWork: function beginFailedWork(a, b, c) {\n        switch (b.tag) {case 2:\n            xb(b);break;case 3:\n            k(b);break;default:\n            l(\"157\");}b.effectTag |= 64;null === a ? b.child = null : b.child !== a.child && (b.child = a.child);if (0 === b.expirationTime || b.expirationTime > c) return D(a, b);b.firstEffect = null;b.lastEffect = null;b.child = null === a ? Mb(b, null, null, c) : db(b, a.child, null, c);2 === b.tag && (a = b.stateNode, b.memoizedProps = a.props, b.memoizedState = a.state);return b.child;\n      } };\n  },\n      cg = function cg(a, b, c) {\n    function d(a) {\n      a.effectTag |= 4;\n    }var e = a.createInstance,\n        f = a.createTextInstance,\n        g = a.appendInitialChild,\n        h = a.finalizeInitialChildren,\n        k = a.prepareUpdate,\n        m = a.persistence,\n        D = b.getRootHostContainer,\n        A = b.popHostContext,\n        v = b.getHostContext,\n        n = b.popHostContainer,\n        L = c.prepareToHydrateHostInstance,\n        R = c.prepareToHydrateHostTextInstance,\n        r = c.popHydrationState,\n        w = void 0,\n        y = void 0,\n        x = void 0;a.mutation ? (w = function w(a) {}, y = function y(a, b, c, e, f, g, h) {\n      (b.updateQueue = c) && d(b);\n    }, x = function x(a, b, c, e) {\n      c !== e && d(b);\n    }) : m ? l(\"235\") : l(\"236\");return { completeWork: function completeWork(a, b, c) {\n        var t = b.pendingProps;if (null === t) t = b.memoizedProps;else if (2147483647 !== b.expirationTime || 2147483647 === c) b.pendingProps = null;switch (b.tag) {case 1:\n            return null;case 2:\n            return ae(b), null;case 3:\n            n(b);I(J, b);I(ia, b);t = b.stateNode;t.pendingContext && (t.context = t.pendingContext, t.pendingContext = null);if (null === a || null === a.child) r(b), b.effectTag &= -3;w(b);return null;case 5:\n            A(b);c = D();var z = b.type;if (null !== a && null != b.stateNode) {\n              var m = a.memoizedProps,\n                  K = b.stateNode,\n                  yc = v();K = k(K, z, m, t, c, yc);y(a, b, K, z, m, t, c);\n              a.ref !== b.ref && (b.effectTag |= 128);\n            } else {\n              if (!t) return null === b.stateNode ? l(\"166\") : void 0, null;a = v();if (r(b)) L(b, c, a) && d(b);else {\n                a = e(z, t, c, a, b);a: for (m = b.child; null !== m;) {\n                  if (5 === m.tag || 6 === m.tag) g(a, m.stateNode);else if (4 !== m.tag && null !== m.child) {\n                    m.child[\"return\"] = m;m = m.child;continue;\n                  }if (m === b) break;for (; null === m.sibling;) {\n                    if (null === m[\"return\"] || m[\"return\"] === b) break a;m = m[\"return\"];\n                  }m.sibling[\"return\"] = m[\"return\"];m = m.sibling;\n                }h(a, z, t, c) && d(b);b.stateNode = a;\n              }null !== b.ref && (b.effectTag |= 128);\n            }return null;\n          case 6:\n            if (a && null != b.stateNode) x(a, b, a.memoizedProps, t);else {\n              if (\"string\" !== typeof t) return null === b.stateNode ? l(\"166\") : void 0, null;a = D();c = v();r(b) ? R(b) && d(b) : b.stateNode = f(t, a, c, b);\n            }return null;case 7:\n            (t = b.memoizedProps) ? void 0 : l(\"165\");b.tag = 8;z = [];a: for ((m = b.stateNode) && (m[\"return\"] = b); null !== m;) {\n              if (5 === m.tag || 6 === m.tag || 4 === m.tag) l(\"247\");else if (9 === m.tag) z.push(m.type);else if (null !== m.child) {\n                m.child[\"return\"] = m;m = m.child;continue;\n              }for (; null === m.sibling;) {\n                if (null === m[\"return\"] || m[\"return\"] === b) break a;m = m[\"return\"];\n              }m.sibling[\"return\"] = m[\"return\"];m = m.sibling;\n            }m = t.handler;t = m(t.props, z);b.child = db(b, null !== a ? a.child : null, t, c);return b.child;case 8:\n            return b.tag = 7, null;case 9:\n            return null;case 10:\n            return null;case 4:\n            return n(b), w(b), null;case 0:\n            l(\"167\");default:\n            l(\"156\");}\n      } };\n  },\n      dg = function dg(a, b) {\n    function c(a) {\n      var c = a.ref;if (null !== c) try {\n        c(null);\n      } catch (z) {\n        b(a, z);\n      }\n    }function d(a) {\n      \"function\" === typeof ge && ge(a);switch (a.tag) {case 2:\n          c(a);var d = a.stateNode;if (\"function\" === typeof d.componentWillUnmount) try {\n            d.props = a.memoizedProps, d.state = a.memoizedState, d.componentWillUnmount();\n          } catch (z) {\n            b(a, z);\n          }break;case 5:\n          c(a);break;case 7:\n          e(a.stateNode);break;case 4:\n          k && g(a);}\n    }function e(a) {\n      for (var b = a;;) {\n        if (d(b), null === b.child || k && 4 === b.tag) {\n          if (b === a) break;for (; null === b.sibling;) {\n            if (null === b[\"return\"] || b[\"return\"] === a) return;b = b[\"return\"];\n          }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\n        } else b.child[\"return\"] = b, b = b.child;\n      }\n    }function f(a) {\n      return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n    }function g(a) {\n      for (var b = a, c = !1, f = void 0, g = void 0;;) {\n        if (!c) {\n          c = b[\"return\"];a: for (;;) {\n            null === c ? l(\"160\") : void 0;switch (c.tag) {case 5:\n                f = c.stateNode;g = !1;break a;case 3:\n                f = c.stateNode.containerInfo;g = !0;break a;case 4:\n                f = c.stateNode.containerInfo;g = !0;break a;}c = c[\"return\"];\n          }c = !0;\n        }if (5 === b.tag || 6 === b.tag) e(b), g ? y(f, b.stateNode) : w(f, b.stateNode);else if (4 === b.tag ? f = b.stateNode.containerInfo : d(b), null !== b.child) {\n          b.child[\"return\"] = b;b = b.child;continue;\n        }if (b === a) break;for (; null === b.sibling;) {\n          if (null === b[\"return\"] || b[\"return\"] === a) return;b = b[\"return\"];4 === b.tag && (c = !1);\n        }b.sibling[\"return\"] = b[\"return\"];b = b.sibling;\n      }\n    }var h = a.getPublicInstance,\n        k = a.mutation;a = a.persistence;k || (a ? l(\"235\") : l(\"236\"));var m = k.commitMount,\n        D = k.commitUpdate,\n        A = k.resetTextContent,\n        v = k.commitTextUpdate,\n        n = k.appendChild,\n        L = k.appendChildToContainer,\n        R = k.insertBefore,\n        r = k.insertInContainerBefore,\n        w = k.removeChild,\n        y = k.removeChildFromContainer;return { commitResetTextContent: function commitResetTextContent(a) {\n        A(a.stateNode);\n      }, commitPlacement: function commitPlacement(a) {\n        a: {\n          for (var b = a[\"return\"]; null !== b;) {\n            if (f(b)) {\n              var c = b;break a;\n            }b = b[\"return\"];\n          }l(\"160\");c = void 0;\n        }var d = b = void 0;switch (c.tag) {case 5:\n            b = c.stateNode;d = !1;break;case 3:\n            b = c.stateNode.containerInfo;d = !0;break;case 4:\n            b = c.stateNode.containerInfo;d = !0;break;default:\n            l(\"161\");}c.effectTag & 16 && (A(b), c.effectTag &= -17);a: b: for (c = a;;) {\n          for (; null === c.sibling;) {\n            if (null === c[\"return\"] || f(c[\"return\"])) {\n              c = null;break a;\n            }c = c[\"return\"];\n          }c.sibling[\"return\"] = c[\"return\"];for (c = c.sibling; 5 !== c.tag && 6 !== c.tag;) {\n            if (c.effectTag & 2) continue b;if (null === c.child || 4 === c.tag) continue b;else c.child[\"return\"] = c, c = c.child;\n          }if (!(c.effectTag & 2)) {\n            c = c.stateNode;break a;\n          }\n        }for (var e = a;;) {\n          if (5 === e.tag || 6 === e.tag) c ? d ? r(b, e.stateNode, c) : R(b, e.stateNode, c) : d ? L(b, e.stateNode) : n(b, e.stateNode);else if (4 !== e.tag && null !== e.child) {\n            e.child[\"return\"] = e;e = e.child;continue;\n          }if (e === a) break;for (; null === e.sibling;) {\n            if (null === e[\"return\"] || e[\"return\"] === a) return;e = e[\"return\"];\n          }e.sibling[\"return\"] = e[\"return\"];e = e.sibling;\n        }\n      }, commitDeletion: function commitDeletion(a) {\n        g(a);a[\"return\"] = null;a.child = null;a.alternate && (a.alternate.child = null, a.alternate[\"return\"] = null);\n      }, commitWork: function commitWork(a, b) {\n        switch (b.tag) {case 2:\n            break;case 5:\n            var c = b.stateNode;if (null != c) {\n              var d = b.memoizedProps;a = null !== a ? a.memoizedProps : d;var e = b.type,\n                  f = b.updateQueue;b.updateQueue = null;null !== f && D(c, f, e, a, d, b);\n            }break;case 6:\n            null === b.stateNode ? l(\"162\") : void 0;c = b.memoizedProps;v(b.stateNode, null !== a ? a.memoizedProps : c, c);break;case 3:\n            break;default:\n            l(\"163\");}\n      }, commitLifeCycles: function commitLifeCycles(a, b) {\n        switch (b.tag) {case 2:\n            var c = b.stateNode;if (b.effectTag & 4) if (null === a) c.props = b.memoizedProps, c.state = b.memoizedState, c.componentDidMount();else {\n              var d = a.memoizedProps;a = a.memoizedState;c.props = b.memoizedProps;c.state = b.memoizedState;c.componentDidUpdate(d, a);\n            }b = b.updateQueue;null !== b && je(b, c);break;case 3:\n            c = b.updateQueue;null !== c && je(c, null !== b.child ? b.child.stateNode : null);break;case 5:\n            c = b.stateNode;null === a && b.effectTag & 4 && m(c, b.type, b.memoizedProps, b);break;case 6:\n            break;case 4:\n            break;default:\n            l(\"163\");}\n      }, commitAttachRef: function commitAttachRef(a) {\n        var b = a.ref;if (null !== b) {\n          var c = a.stateNode;switch (a.tag) {case 5:\n              b(h(c));break;default:\n              b(c);}\n        }\n      }, commitDetachRef: function commitDetachRef(a) {\n        a = a.ref;null !== a && a(null);\n      } };\n  },\n      la = {},\n      eg = function eg(a) {\n    function b(a) {\n      a === la ? l(\"174\") : void 0;return a;\n    }var c = a.getChildHostContext,\n        d = a.getRootHostContext,\n        e = { current: la },\n        f = { current: la },\n        g = { current: la };return { getHostContext: function getHostContext() {\n        return b(e.current);\n      }, getRootHostContainer: function getRootHostContainer() {\n        return b(g.current);\n      }, popHostContainer: function popHostContainer(a) {\n        I(e, a);I(f, a);I(g, a);\n      }, popHostContext: function popHostContext(a) {\n        f.current === a && (I(e, a), I(f, a));\n      }, pushHostContainer: function pushHostContainer(a, b) {\n        M(g, b, a);b = d(b);M(f, a, a);M(e, b, a);\n      }, pushHostContext: function pushHostContext(a) {\n        var d = b(g.current),\n            h = b(e.current);d = c(h, a.type, d);h !== d && (M(f, a, a), M(e, d, a));\n      }, resetHostContainer: function resetHostContainer() {\n        e.current = la;g.current = la;\n      } };\n  },\n      fg = function fg(a) {\n    function b(a, b) {\n      var c = new Q(5, null, 0);c.type = \"DELETED\";c.stateNode = b;c[\"return\"] = a;c.effectTag = 8;null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n    }function c(a, b) {\n      switch (a.tag) {case 5:\n          return b = f(b, a.type, a.pendingProps), null !== b ? (a.stateNode = b, !0) : !1;case 6:\n          return b = g(b, a.pendingProps), null !== b ? (a.stateNode = b, !0) : !1;default:\n          return !1;}\n    }function d(a) {\n      for (a = a[\"return\"]; null !== a && 5 !== a.tag && 3 !== a.tag;) {\n        a = a[\"return\"];\n      }A = a;\n    }var e = a.shouldSetTextContent;a = a.hydration;if (!a) return { enterHydrationState: function enterHydrationState() {\n        return !1;\n      }, resetHydrationState: function resetHydrationState() {}, tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance() {}, prepareToHydrateHostInstance: function prepareToHydrateHostInstance() {\n        l(\"175\");\n      }, prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance() {\n        l(\"176\");\n      }, popHydrationState: function popHydrationState(a) {\n        return !1;\n      } };var f = a.canHydrateInstance,\n        g = a.canHydrateTextInstance,\n        h = a.getNextHydratableSibling,\n        k = a.getFirstHydratableChild,\n        m = a.hydrateInstance,\n        D = a.hydrateTextInstance,\n        A = null,\n        v = null,\n        n = !1;return { enterHydrationState: function enterHydrationState(a) {\n        v = k(a.stateNode.containerInfo);A = a;return n = !0;\n      }, resetHydrationState: function resetHydrationState() {\n        v = A = null;n = !1;\n      }, tryToClaimNextHydratableInstance: function tryToClaimNextHydratableInstance(a) {\n        if (n) {\n          var d = v;if (d) {\n            if (!c(a, d)) {\n              d = h(d);if (!d || !c(a, d)) {\n                a.effectTag |= 2;n = !1;A = a;return;\n              }b(A, v);\n            }A = a;v = k(d);\n          } else a.effectTag |= 2, n = !1, A = a;\n        }\n      }, prepareToHydrateHostInstance: function prepareToHydrateHostInstance(a, b, c) {\n        b = m(a.stateNode, a.type, a.memoizedProps, b, c, a);a.updateQueue = b;return null !== b ? !0 : !1;\n      }, prepareToHydrateHostTextInstance: function prepareToHydrateHostTextInstance(a) {\n        return D(a.stateNode, a.memoizedProps, a);\n      }, popHydrationState: function popHydrationState(a) {\n        if (a !== A) return !1;if (!n) return d(a), n = !0, !1;var c = a.type;if (5 !== a.tag || \"head\" !== c && \"body\" !== c && !e(c, a.memoizedProps)) for (c = v; c;) {\n          b(a, c), c = h(c);\n        }d(a);v = A ? h(a.stateNode) : null;return !0;\n      } };\n  },\n      gg = function gg(a) {\n    function b(a) {\n      X = Ba = !0;var b = a.stateNode;b.current === a ? l(\"177\") : void 0;b.isReadyForCommit = !1;bb.current = null;if (1 < a.effectTag) {\n        if (null !== a.lastEffect) {\n          a.lastEffect.nextEffect = a;var c = a.firstEffect;\n        } else c = a;\n      } else c = a.firstEffect;za();for (u = c; null !== u;) {\n        var d = !1,\n            e = void 0;try {\n          for (; null !== u;) {\n            var f = u.effectTag;f & 16 && aa(u);if (f & 128) {\n              var g = u.alternate;null !== g && va(g);\n            }switch (f & -242) {case 2:\n                V(u);u.effectTag &= -3;break;case 6:\n                V(u);u.effectTag &= -3;ca(u.alternate, u);break;case 4:\n                ca(u.alternate, u);break;case 8:\n                ka = !0, na(u), ka = !1;}u = u.nextEffect;\n          }\n        } catch (Qc) {\n          d = !0, e = Qc;\n        }d && (null === u ? l(\"178\") : void 0, h(u, e), null !== u && (u = u.nextEffect));\n      }Aa();b.current = a;for (u = c; null !== u;) {\n        c = !1;d = void 0;try {\n          for (; null !== u;) {\n            var k = u.effectTag;k & 36 && sa(u.alternate, u);k & 128 && ta(u);if (k & 64) switch (e = u, f = void 0, null !== S && (f = S.get(e), S[\"delete\"](e), null == f && null !== e.alternate && (e = e.alternate, f = S.get(e), S[\"delete\"](e))), null == f ? l(\"184\") : void 0, e.tag) {case 2:\n                e.stateNode.componentDidCatch(f.error, { componentStack: f.componentStack });break;case 3:\n                null === ma && (ma = f.error);break;default:\n                l(\"157\");}var Ma = u.nextEffect;u.nextEffect = null;u = Ma;\n          }\n        } catch (Qc) {\n          c = !0, d = Qc;\n        }c && (null === u ? l(\"178\") : void 0, h(u, d), null !== u && (u = u.nextEffect));\n      }Ba = X = !1;\n      \"function\" === typeof fe && fe(a.stateNode);ua && (ua.forEach(w), ua = null);null !== ma && (a = ma, ma = null, G(a));b = b.current.expirationTime;0 === b && (Ia = S = null);return b;\n    }function c(a) {\n      for (;;) {\n        var b = Y(a.alternate, a, F),\n            c = a[\"return\"],\n            d = a.sibling;var e = a;if (2147483647 === F || 2147483647 !== e.expirationTime) {\n          if (2 !== e.tag && 3 !== e.tag) var f = 0;else f = e.updateQueue, f = null === f ? 0 : f.expirationTime;for (var g = e.child; null !== g;) {\n            0 !== g.expirationTime && (0 === f || f > g.expirationTime) && (f = g.expirationTime), g = g.sibling;\n          }e.expirationTime = f;\n        }if (null !== b) return b;null !== c && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));if (null !== d) return d;if (null !== c) a = c;else {\n          a.stateNode.isReadyForCommit = !0;break;\n        }\n      }return null;\n    }function d(a) {\n      var b = Q(a.alternate, a, F);null === b && (b = c(a));bb.current = null;return b;\n    }function e(a) {\n      var b = T(a.alternate, a, F);null === b && (b = c(a));bb.current = null;return b;\n    }function f(a) {\n      if (null !== S) {\n        if (!(0 === F || F > a)) if (F <= ha) for (; null !== B;) {\n          B = k(B) ? e(B) : d(B);\n        } else for (; null !== B && !z();) {\n          B = k(B) ? e(B) : d(B);\n        }\n      } else if (!(0 === F || F > a)) if (F <= ha) for (; null !== B;) {\n        B = d(B);\n      } else for (; null !== B && !z();) {\n        B = d(B);\n      }\n    }function g(a, b) {\n      Ba ? l(\"243\") : void 0;Ba = !0;a.isReadyForCommit = !1;if (a !== Ja || b !== F || null === B) {\n        for (; -1 < ra;) {\n          vb[ra] = null, ra--;\n        }wb = ja;ia.current = ja;J.current = !1;P();Ja = a;F = b;B = yb(Ja.current, null, b);\n      }var c = !1,\n          d = null;try {\n        f(b);\n      } catch (Pc) {\n        c = !0, d = Pc;\n      }for (; c;) {\n        if (U) {\n          ma = d;break;\n        }var g = B;if (null === g) U = !0;else {\n          var k = h(g, d);null === k ? l(\"183\") : void 0;if (!U) {\n            try {\n              c = k;d = b;for (k = c; null !== g;) {\n                switch (g.tag) {case 2:\n                    ae(g);break;case 5:\n                    O(g);break;case 3:\n                    I(g);break;case 4:\n                    I(g);}if (g === k || g.alternate === k) break;g = g[\"return\"];\n              }B = e(c);f(d);\n            } catch (Pc) {\n              c = !0;d = Pc;continue;\n            }break;\n          }\n        }\n      }b = ma;U = Ba = !1;ma = null;null !== b && G(b);return a.isReadyForCommit ? a.current.alternate : null;\n    }function h(a, b) {\n      var c = bb.current = null,\n          d = !1,\n          e = !1,\n          f = null;if (3 === a.tag) c = a, m(a) && (U = !0);else for (var g = a[\"return\"]; null !== g && null === c;) {\n        2 === g.tag ? \"function\" === typeof g.stateNode.componentDidCatch && (d = !0, f = Pa(g), c = g, e = !0) : 3 === g.tag && (c = g);if (m(g)) {\n          if (ka || null !== ua && (ua.has(g) || null !== g.alternate && ua.has(g.alternate))) return null;c = null;e = !1;\n        }g = g[\"return\"];\n      }if (null !== c) {\n        null === Ia && (Ia = new Set());Ia.add(c);var h = \"\";g = a;do {\n          a: switch (g.tag) {case 0:case 1:case 2:case 5:\n              var k = g._debugOwner,\n                  l = g._debugSource;var Ma = Pa(g);var p = null;k && (p = Pa(k));k = l;Ma = \"\\n    in \" + (Ma || \"Unknown\") + (k ? \" (at \" + k.fileName.replace(/^.*[\\\\\\/]/, \"\") + \":\" + k.lineNumber + \")\" : p ? \" (created by \" + p + \")\" : \"\");break a;default:\n              Ma = \"\";}h += Ma;g = g[\"return\"];\n        } while (g);g = h;a = Pa(a);null === S && (S = new Map());b = { componentName: a, componentStack: g, error: b, errorBoundary: d ? c.stateNode : null, errorBoundaryFound: d, errorBoundaryName: f, willRetry: e };S.set(c, b);try {\n          var n = b.error;n && n.suppressReactErrorLogging || console.error(n);\n        } catch (Rc) {\n          Rc && Rc.suppressReactErrorLogging || console.error(Rc);\n        }X ? (null === ua && (ua = new Set()), ua.add(c)) : w(c);return c;\n      }null === ma && (ma = b);return null;\n    }function k(a) {\n      return null !== S && (S.has(a) || null !== a.alternate && S.has(a.alternate));\n    }function m(a) {\n      return null !== Ia && (Ia.has(a) || null !== a.alternate && Ia.has(a.alternate));\n    }function n() {\n      return 20 * (((y() + 100) / 20 | 0) + 1);\n    }function A(a) {\n      return 0 !== Ca ? Ca : Ba ? X ? 1 : F : !ya || a.internalContextTag & 1 ? n() : 1;\n    }function v(a, b) {\n      return r(a, b, !1);\n    }function r(a, b, c) {\n      for (; null !== a;) {\n        if (0 === a.expirationTime || a.expirationTime > b) a.expirationTime = b;null !== a.alternate && (0 === a.alternate.expirationTime || a.alternate.expirationTime > b) && (a.alternate.expirationTime = b);if (null === a[\"return\"]) if (3 === a.tag) {\n          c = a.stateNode;!Ba && c === Ja && b < F && (B = Ja = null, F = 0);var d = c,\n              e = b;fa > Ga && l(\"185\");if (null === d.nextScheduledRoot) d.remainingExpirationTime = e, null === N ? (Ka = N = d, d.nextScheduledRoot = d) : (N = N.nextScheduledRoot = d, N.nextScheduledRoot = Ka);else {\n            var f = d.remainingExpirationTime;if (0 === f || e < f) d.remainingExpirationTime = e;\n          }Na || (Da ? ea && (Ea = d, Fa = 1, t(Ea, Fa)) : 1 === e ? x(1, null) : C(e));!Ba && c === Ja && b < F && (B = Ja = null, F = 0);\n        } else break;a = a[\"return\"];\n      }\n    }function w(a) {\n      r(a, 1, !0);\n    }function y() {\n      return ha = ((ba() - qa) / 10 | 0) + 2;\n    }function C(a) {\n      if (0 !== Z) {\n        if (a > Z) return;xa(la);\n      }var b = ba() - qa;Z = a;la = wa(H, { timeout: 10 * (a - 2) - b });\n    }function E() {\n      var a = 0,\n          b = null;if (null !== N) for (var c = N, d = Ka; null !== d;) {\n        var e = d.remainingExpirationTime;if (0 === e) {\n          null === c || null === N ? l(\"244\") : void 0;if (d === d.nextScheduledRoot) {\n            Ka = N = d.nextScheduledRoot = null;break;\n          } else if (d === Ka) Ka = e = d.nextScheduledRoot, N.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === N) {\n            N = c;N.nextScheduledRoot = Ka;d.nextScheduledRoot = null;break;\n          } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;d = c.nextScheduledRoot;\n        } else {\n          if (0 === a || e < a) a = e, b = d;if (d === N) break;c = d;d = d.nextScheduledRoot;\n        }\n      }c = Ea;null !== c && c === b ? fa++ : fa = 0;Ea = b;Fa = a;\n    }function H(a) {\n      x(0, a);\n    }function x(a, b) {\n      W = b;for (E(); null !== Ea && 0 !== Fa && (0 === a || Fa <= a) && !oa;) {\n        t(Ea, Fa), E();\n      }null !== W && (Z = 0, la = -1);0 !== Fa && C(Fa);W = null;oa = !1;fa = 0;if (da) throw a = pa, pa = null, da = !1, a;\n    }function t(a, c) {\n      Na ? l(\"245\") : void 0;Na = !0;if (c <= y()) {\n        var d = a.finishedWork;null !== d ? (a.finishedWork = null, a.remainingExpirationTime = b(d)) : (a.finishedWork = null, d = g(a, c), null !== d && (a.remainingExpirationTime = b(d)));\n      } else d = a.finishedWork, null !== d ? (a.finishedWork = null, a.remainingExpirationTime = b(d)) : (a.finishedWork = null, d = g(a, c), null !== d && (z() ? a.finishedWork = d : a.remainingExpirationTime = b(d)));Na = !1;\n    }function z() {\n      return null === W || W.timeRemaining() > Ha ? !1 : oa = !0;\n    }function G(a) {\n      null === Ea ? l(\"246\") : void 0;Ea.remainingExpirationTime = 0;da || (da = !0, pa = a);\n    }var q = eg(a),\n        p = fg(a),\n        I = q.popHostContainer,\n        O = q.popHostContext,\n        P = q.resetHostContainer,\n        M = bg(a, q, p, v, A),\n        Q = M.beginWork,\n        T = M.beginFailedWork,\n        Y = cg(a, q, p).completeWork;q = dg(a, h);var aa = q.commitResetTextContent,\n        V = q.commitPlacement,\n        na = q.commitDeletion,\n        ca = q.commitWork,\n        sa = q.commitLifeCycles,\n        ta = q.commitAttachRef,\n        va = q.commitDetachRef,\n        ba = a.now,\n        wa = a.scheduleDeferredCallback,\n        xa = a.cancelDeferredCallback,\n        ya = a.useSyncScheduling,\n        za = a.prepareForCommit,\n        Aa = a.resetAfterCommit,\n        qa = ba(),\n        ha = 2,\n        Ca = 0,\n        Ba = !1,\n        B = null,\n        Ja = null,\n        F = 0,\n        u = null,\n        S = null,\n        Ia = null,\n        ua = null,\n        ma = null,\n        U = !1,\n        X = !1,\n        ka = !1,\n        Ka = null,\n        N = null,\n        Z = 0,\n        la = -1,\n        Na = !1,\n        Ea = null,\n        Fa = 0,\n        oa = !1,\n        da = !1,\n        pa = null,\n        W = null,\n        Da = !1,\n        ea = !1,\n        Ga = 1E3,\n        fa = 0,\n        Ha = 1;return { computeAsyncExpiration: n, computeExpirationForFiber: A, scheduleWork: v, batchedUpdates: function batchedUpdates(a, b) {\n        var c = Da;Da = !0;try {\n          return a(b);\n        } finally {\n          (Da = c) || Na || x(1, null);\n        }\n      }, unbatchedUpdates: function unbatchedUpdates(a) {\n        if (Da && !ea) {\n          ea = !0;try {\n            return a();\n          } finally {\n            ea = !1;\n          }\n        }return a();\n      }, flushSync: function flushSync(a) {\n        var b = Da;Da = !0;try {\n          a: {\n            var c = Ca;Ca = 1;try {\n              var d = a();break a;\n            } finally {\n              Ca = c;\n            }d = void 0;\n          }return d;\n        } finally {\n          Da = b, Na ? l(\"187\") : void 0, x(1, null);\n        }\n      }, deferredUpdates: function deferredUpdates(a) {\n        var b = Ca;Ca = n();try {\n          return a();\n        } finally {\n          Ca = b;\n        }\n      } };\n  },\n      Te = function Te(a) {\n    function b(a) {\n      a = wf(a);return null === a ? null : a.stateNode;\n    }var c = a.getPublicInstance;a = gg(a);var d = a.computeAsyncExpiration,\n        e = a.computeExpirationForFiber,\n        f = a.scheduleWork;return { createContainer: function createContainer(a, b) {\n        var c = new Q(3, null, 0);a = { current: c, containerInfo: a, pendingChildren: null, remainingExpirationTime: 0, isReadyForCommit: !1, finishedWork: null, context: null, pendingContext: null, hydrate: b, nextScheduledRoot: null };return c.stateNode = a;\n      }, updateContainer: function updateContainer(a, b, c, m) {\n        var g = b.current;if (c) {\n          c = c._reactInternalFiber;var h;b: {\n            2 === Qa(c) && 2 === c.tag ? void 0 : l(\"170\");for (h = c; 3 !== h.tag;) {\n              if (Ua(h)) {\n                h = h.stateNode.__reactInternalMemoizedMergedChildContext;break b;\n              }(h = h[\"return\"]) ? void 0 : l(\"171\");\n            }h = h.stateNode.context;\n          }c = Ua(c) ? ce(c, h) : h;\n        } else c = ja;null === b.context ? b.context = c : b.pendingContext = c;b = m;b = void 0 === b ? null : b;m = null != a && null != a.type && null != a.type.prototype && !0 === a.type.prototype.unstable_isAsyncReactComponent ? d() : e(g);Bb(g, { expirationTime: m, partialState: { element: a }, callback: b, isReplace: !1, isForced: !1,\n          nextCallback: null, next: null });f(g, m);\n      }, batchedUpdates: a.batchedUpdates, unbatchedUpdates: a.unbatchedUpdates, deferredUpdates: a.deferredUpdates, flushSync: a.flushSync, getPublicRootInstance: function getPublicRootInstance(a) {\n        a = a.current;if (!a.child) return null;switch (a.child.tag) {case 5:\n            return c(a.child.stateNode);default:\n            return a.child.stateNode;}\n      }, findHostInstance: b, findHostInstanceWithNoPortals: function findHostInstanceWithNoPortals(a) {\n        a = xf(a);return null === a ? null : a.stateNode;\n      }, injectIntoDevTools: function injectIntoDevTools(a) {\n        var c = a.findFiberByHostInstance;return Af(C({}, a, { findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n            return b(a);\n          }, findFiberByHostInstance: function findFiberByHostInstance(a) {\n            return c ? c(a) : null;\n          } }));\n      } };\n  },\n      Ue = Object.freeze({ default: Te }),\n      Sc = Ue && Te || Ue,\n      hg = Sc[\"default\"] ? Sc[\"default\"] : Sc,\n      Ve = \"object\" === (typeof performance === \"undefined\" ? \"undefined\" : _typeof(performance)) && \"function\" === typeof performance.now,\n      Nb = void 0;Nb = Ve ? function () {\n    return performance.now();\n  } : function () {\n    return Date.now();\n  };var Ob = void 0,\n      Pb = void 0;if (P.canUseDOM) {\n    if (\"function\" !== typeof requestIdleCallback || \"function\" !== typeof cancelIdleCallback) {\n      var Qb = null,\n          Rb = !1,\n          eb = -1,\n          fb = !1,\n          gb = 0,\n          Sb = 33,\n          hb = 33;var Tc = Ve ? { didTimeout: !1, timeRemaining: function timeRemaining() {\n          var a = gb - performance.now();return 0 < a ? a : 0;\n        } } : { didTimeout: !1, timeRemaining: function timeRemaining() {\n          var a = gb - Date.now();return 0 < a ? a : 0;\n        } };var We = \"__reactIdleCallback$\" + Math.random().toString(36).slice(2);window.addEventListener(\"message\", function (a) {\n        if (a.source === window && a.data === We) {\n          Rb = !1;a = Nb();if (0 >= gb - a) {\n            if (-1 !== eb && eb <= a) Tc.didTimeout = !0;else {\n              fb || (fb = !0, requestAnimationFrame(Xe));return;\n            }\n          } else Tc.didTimeout = !1;eb = -1;a = Qb;Qb = null;null !== a && a(Tc);\n        }\n      }, !1);\n      var Xe = function Xe(a) {\n        fb = !1;var b = a - gb + hb;b < hb && Sb < hb ? (8 > b && (b = 8), hb = b < Sb ? Sb : b) : Sb = b;gb = a + hb;Rb || (Rb = !0, window.postMessage(We, \"*\"));\n      };Ob = function Ob(a, b) {\n        Qb = a;null != b && \"number\" === typeof b.timeout && (eb = Nb() + b.timeout);fb || (fb = !0, requestAnimationFrame(Xe));return 0;\n      };Pb = function Pb() {\n        Qb = null;Rb = !1;eb = -1;\n      };\n    } else Ob = window.requestIdleCallback, Pb = window.cancelIdleCallback;\n  } else Ob = function Ob(a) {\n    return setTimeout(function () {\n      a({ timeRemaining: function timeRemaining() {\n          return Infinity;\n        } });\n    });\n  }, Pb = function Pb(a) {\n    clearTimeout(a);\n  };var Df = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n      ne = {},\n      me = {},\n      Tb = void 0,\n      Be = function (a) {\n    return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n      MSApp.execUnsafeLocalFunction(function () {\n        return a(b, c, d, e);\n      });\n    } : a;\n  }(function (a, b) {\n    if (\"http://www.w3.org/2000/svg\" !== a.namespaceURI || \"innerHTML\" in a) a.innerHTML = b;else {\n      Tb = Tb || document.createElement(\"div\");Tb.innerHTML = \"\\x3csvg\\x3e\" + b + \"\\x3c/svg\\x3e\";for (b = Tb.firstChild; a.firstChild;) {\n        a.removeChild(a.firstChild);\n      }for (; b.firstChild;) {\n        a.appendChild(b.firstChild);\n      }\n    }\n  }),\n      Ic = function Ic(a, b) {\n    if (b) {\n      var c = a.firstChild;if (c && c === a.lastChild && 3 === c.nodeType) {\n        c.nodeValue = b;return;\n      }\n    }a.textContent = b;\n  },\n      Za = { animationIterationCount: !0, borderImageOutset: !0, borderImageSlice: !0, borderImageWidth: !0, boxFlex: !0, boxFlexGroup: !0, boxOrdinalGroup: !0, columnCount: !0, columns: !0, flex: !0, flexGrow: !0, flexPositive: !0, flexShrink: !0, flexNegative: !0, flexOrder: !0, gridRow: !0, gridRowEnd: !0, gridRowSpan: !0, gridRowStart: !0, gridColumn: !0, gridColumnEnd: !0, gridColumnSpan: !0, gridColumnStart: !0, fontWeight: !0, lineClamp: !0, lineHeight: !0, opacity: !0,\n    order: !0, orphans: !0, tabSize: !0, widows: !0, zIndex: !0, zoom: !0, fillOpacity: !0, floodOpacity: !0, stopOpacity: !0, strokeDasharray: !0, strokeDashoffset: !0, strokeMiterlimit: !0, strokeOpacity: !0, strokeWidth: !0 },\n      ig = [\"Webkit\", \"ms\", \"Moz\", \"O\"];Object.keys(Za).forEach(function (a) {\n    ig.forEach(function (b) {\n      b = b + a.charAt(0).toUpperCase() + a.substring(1);Za[b] = Za[a];\n    });\n  });var Ff = C({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 }),\n      $a = G.thatReturns(\"\"),\n      Z = { topAbort: \"abort\", topCanPlay: \"canplay\", topCanPlayThrough: \"canplaythrough\", topDurationChange: \"durationchange\", topEmptied: \"emptied\", topEncrypted: \"encrypted\", topEnded: \"ended\", topError: \"error\", topLoadedData: \"loadeddata\", topLoadedMetadata: \"loadedmetadata\", topLoadStart: \"loadstart\", topPause: \"pause\", topPlay: \"play\", topPlaying: \"playing\", topProgress: \"progress\", topRateChange: \"ratechange\", topSeeked: \"seeked\", topSeeking: \"seeking\", topStalled: \"stalled\", topSuspend: \"suspend\", topTimeUpdate: \"timeupdate\", topVolumeChange: \"volumechange\",\n    topWaiting: \"waiting\" },\n      jg = Object.freeze({ createElement: ye, createTextNode: ze, setInitialProperties: Ae, diffProperties: Ce, updateProperties: De, diffHydratedProperties: Ee, diffHydratedText: Fe, warnForUnmatchedText: function warnForUnmatchedText(a, b) {}, warnForDeletedHydratableElement: function warnForDeletedHydratableElement(a, b) {}, warnForDeletedHydratableText: function warnForDeletedHydratableText(a, b) {}, warnForInsertedHydratedElement: function warnForInsertedHydratedElement(a, b, c) {}, warnForInsertedHydratedText: function warnForInsertedHydratedText(a, b) {}, restoreControlledState: function restoreControlledState(a, b, c) {\n      switch (b) {case \"input\":\n          Cc(a, c);b = c.name;if (\"radio\" === c.type && null != b) {\n            for (c = a; c.parentNode;) {\n              c = c.parentNode;\n            }c = c.querySelectorAll(\"input[name\\x3d\" + JSON.stringify(\"\" + b) + '][type\\x3d\"radio\"]');for (b = 0; b < c.length; b++) {\n              var d = c[b];if (d !== a && d.form === a.form) {\n                var e = fd(d);e ? void 0 : l(\"90\");Bd(d);Cc(d, e);\n              }\n            }\n          }break;case \"textarea\":\n          ue(a, c);break;case \"select\":\n          b = c.value, null != b && ka(a, !!c.multiple, b, !1);}\n    } });Qe.injectFiberControlledHostComponent(jg);var Uc = null,\n      Vc = null,\n      E = hg({ getRootHostContext: function getRootHostContext(a) {\n      var b = a.nodeType;switch (b) {case 9:case 11:\n          a = (a = a.documentElement) ? a.namespaceURI : Fc(null, \"\");break;default:\n          b = 8 === b ? a.parentNode : a, a = b.namespaceURI || null, b = b.tagName, a = Fc(a, b);}return a;\n    }, getChildHostContext: function getChildHostContext(a, b) {\n      return Fc(a, b);\n    }, getPublicInstance: function getPublicInstance(a) {\n      return a;\n    }, prepareForCommit: function prepareForCommit() {\n      Uc = Ra;var a = nc();if (lc(a)) {\n        if (\"selectionStart\" in a) var b = { start: a.selectionStart, end: a.selectionEnd };else a: {\n          var c = window.getSelection && window.getSelection();if (c && 0 !== c.rangeCount) {\n            b = c.anchorNode;var d = c.anchorOffset,\n                e = c.focusNode;c = c.focusOffset;try {\n              b.nodeType, e.nodeType;\n            } catch (K) {\n              b = null;break a;\n            }var f = 0,\n                g = -1,\n                h = -1,\n                k = 0,\n                l = 0,\n                n = a,\n                r = null;b: for (;;) {\n              for (var v;;) {\n                n !== b || 0 !== d && 3 !== n.nodeType || (g = f + d);n !== e || 0 !== c && 3 !== n.nodeType || (h = f + c);3 === n.nodeType && (f += n.nodeValue.length);if (null === (v = n.firstChild)) break;r = n;n = v;\n              }for (;;) {\n                if (n === a) break b;r === b && ++k === d && (g = f);r === e && ++l === c && (h = f);if (null !== (v = n.nextSibling)) break;n = r;r = n.parentNode;\n              }n = v;\n            }b = -1 === g || -1 === h ? null : { start: g, end: h };\n          } else b = null;\n        }b = b || { start: 0, end: 0 };\n      } else b = null;Vc = { focusedElem: a, selectionRange: b };ic(!1);\n    }, resetAfterCommit: function resetAfterCommit() {\n      var a = Vc,\n          b = nc(),\n          c = a.focusedElem,\n          d = a.selectionRange;if (b !== c && Nd(document.documentElement, c)) {\n        if (lc(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (window.getSelection) {\n          b = window.getSelection();var e = c[jd()].length;a = Math.min(d.start, e);d = void 0 === d.end ? a : Math.min(d.end, e);!b.extend && a > d && (e = d, d = a, a = e);e = Qd(c, a);var f = Qd(c, d);if (e && f && (1 !== b.rangeCount || b.anchorNode !== e.node || b.anchorOffset !== e.offset || b.focusNode !== f.node || b.focusOffset !== f.offset)) {\n            var g = document.createRange();g.setStart(e.node, e.offset);b.removeAllRanges();a > d ? (b.addRange(g), b.extend(f.node, f.offset)) : (g.setEnd(f.node, f.offset), b.addRange(g));\n          }\n        }b = [];for (a = c; a = a.parentNode;) {\n          1 === a.nodeType && b.push({ element: a, left: a.scrollLeft, top: a.scrollTop });\n        }try {\n          c.focus();\n        } catch (h) {}for (c = 0; c < b.length; c++) {\n          a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n        }\n      }Vc = null;ic(Uc);Uc = null;\n    }, createInstance: function createInstance(a, b, c, d, e) {\n      a = ye(a, b, c, d);a[O] = e;a[ea] = b;return a;\n    }, appendInitialChild: function appendInitialChild(a, b) {\n      a.appendChild(b);\n    }, finalizeInitialChildren: function finalizeInitialChildren(a, b, c, d) {\n      Ae(a, b, c, d);a: {\n        switch (b) {case \"button\":case \"input\":case \"select\":case \"textarea\":\n            a = !!c.autoFocus;break a;}a = !1;\n      }return a;\n    }, prepareUpdate: function prepareUpdate(a, b, c, d, e, f) {\n      return Ce(a, b, c, d, e);\n    }, shouldSetTextContent: function shouldSetTextContent(a, b) {\n      return \"textarea\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === _typeof(b.dangerouslySetInnerHTML) && null !== b.dangerouslySetInnerHTML && \"string\" === typeof b.dangerouslySetInnerHTML.__html;\n    }, shouldDeprioritizeSubtree: function shouldDeprioritizeSubtree(a, b) {\n      return !!b.hidden;\n    }, createTextInstance: function createTextInstance(a, b, c, d) {\n      a = ze(a, b);a[O] = d;return a;\n    }, now: Nb, mutation: { commitMount: function commitMount(a, b, c, d) {\n        a.focus();\n      }, commitUpdate: function commitUpdate(a, b, c, d, e, f) {\n        a[ea] = e;De(a, b, c, d, e);\n      }, resetTextContent: function resetTextContent(a) {\n        a.textContent = \"\";\n      }, commitTextUpdate: function commitTextUpdate(a, b, c) {\n        a.nodeValue = c;\n      }, appendChild: function appendChild(a, b) {\n        a.appendChild(b);\n      }, appendChildToContainer: function appendChildToContainer(a, b) {\n        8 === a.nodeType ? a.parentNode.insertBefore(b, a) : a.appendChild(b);\n      }, insertBefore: function insertBefore(a, b, c) {\n        a.insertBefore(b, c);\n      }, insertInContainerBefore: function insertInContainerBefore(a, b, c) {\n        8 === a.nodeType ? a.parentNode.insertBefore(b, c) : a.insertBefore(b, c);\n      }, removeChild: function removeChild(a, b) {\n        a.removeChild(b);\n      }, removeChildFromContainer: function removeChildFromContainer(a, b) {\n        8 === a.nodeType ? a.parentNode.removeChild(b) : a.removeChild(b);\n      } }, hydration: { canHydrateInstance: function canHydrateInstance(a, b, c) {\n        return 1 !== a.nodeType || b.toLowerCase() !== a.nodeName.toLowerCase() ? null : a;\n      }, canHydrateTextInstance: function canHydrateTextInstance(a, b) {\n        return \"\" === b || 3 !== a.nodeType ? null : a;\n      }, getNextHydratableSibling: function getNextHydratableSibling(a) {\n        for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n          a = a.nextSibling;\n        }return a;\n      }, getFirstHydratableChild: function getFirstHydratableChild(a) {\n        for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n          a = a.nextSibling;\n        }return a;\n      }, hydrateInstance: function hydrateInstance(a, b, c, d, e, f) {\n        a[O] = f;a[ea] = c;return Ee(a, b, c, e, d);\n      }, hydrateTextInstance: function hydrateTextInstance(a, b, c) {\n        a[O] = c;return Fe(a, b);\n      }, didNotMatchHydratedContainerTextInstance: function didNotMatchHydratedContainerTextInstance(a, b, c) {}, didNotMatchHydratedTextInstance: function didNotMatchHydratedTextInstance(a, b, c, d, e) {}, didNotHydrateContainerInstance: function didNotHydrateContainerInstance(a, b) {}, didNotHydrateInstance: function didNotHydrateInstance(a, b, c, d) {}, didNotFindHydratableContainerInstance: function didNotFindHydratableContainerInstance(a, b, c) {}, didNotFindHydratableContainerTextInstance: function didNotFindHydratableContainerTextInstance(a, b) {}, didNotFindHydratableInstance: function didNotFindHydratableInstance(a, b, c, d, e) {}, didNotFindHydratableTextInstance: function didNotFindHydratableTextInstance(a, b, c, d) {} }, scheduleDeferredCallback: Ob, cancelDeferredCallback: Pb, useSyncScheduling: !0 });ec = E.batchedUpdates;He.prototype.render = function (a, b) {\n    E.updateContainer(a, this._reactRootContainer, null, b);\n  };He.prototype.unmount = function (a) {\n    E.updateContainer(null, this._reactRootContainer, null, a);\n  };var Ye = { createPortal: Ge, findDOMNode: function findDOMNode(a) {\n      if (null == a) return null;if (1 === a.nodeType) return a;var b = a._reactInternalFiber;if (b) return E.findHostInstance(b);\"function\" === typeof a.render ? l(\"188\") : l(\"213\", Object.keys(a));\n    }, hydrate: function hydrate(a, b, c) {\n      return Hb(null, a, b, !0, c);\n    }, render: function render(a, b, c) {\n      return Hb(null, a, b, !1, c);\n    }, unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n      null == a || void 0 === a._reactInternalFiber ? l(\"38\") : void 0;return Hb(a, b, c, !1, d);\n    }, unmountComponentAtNode: function unmountComponentAtNode(a) {\n      Jc(a) ? void 0 : l(\"40\");return a._reactRootContainer ? (E.unbatchedUpdates(function () {\n        Hb(null, null, a, !1, function () {\n          a._reactRootContainer = null;\n        });\n      }), !0) : !1;\n    }, unstable_createPortal: Ge, unstable_batchedUpdates: cc, unstable_deferredUpdates: E.deferredUpdates, flushSync: E.flushSync, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: { EventPluginHub: Mf, EventPluginRegistry: Lf, EventPropagators: Nf, ReactControlledComponent: Rf, ReactDOMComponentTree: Oe, ReactDOMEventListener: Uf } };E.injectIntoDevTools({ findFiberByHostInstance: W, bundleType: 0, version: \"16.2.0\", rendererPackageName: \"react-dom\" });var Ze = Object.freeze({ default: Ye }),\n      Wc = Ze && Ye || Ze;return Wc[\"default\"] ? Wc[\"default\"] : Wc;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\aside.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\aside.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Aside = function (_React$PureComponent) {\n  _inherits(Aside, _React$PureComponent);\n\n  function Aside() {\n    _classCallCheck(this, Aside);\n\n    return _possibleConstructorReturn(this, (Aside.__proto__ || Object.getPrototypeOf(Aside)).apply(this, arguments));\n  }\n\n  _createClass(Aside, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        { className: 'aside-container' },\n        _react2.default.createElement(\n          'div',\n          { className: 'aside' },\n          this.props.children\n        )\n      );\n    }\n  }]);\n\n  return Aside;\n}(_react2.default.PureComponent);\n\nexports.default = Aside;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzaWRlLmpzIl0sIm5hbWVzIjpbIkFzaWRlIiwicHJvcHMiLCJjaGlsZHJlbiIsIlB1cmVDb21wb25lbnQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7OztJQUVNQSxLOzs7Ozs7Ozs7Ozs2QkFDSztBQUNQLGFBQ0U7QUFBQTtBQUFBLFVBQUssV0FBVyxpQkFBaEI7QUFDRTtBQUFBO0FBQUEsWUFBSyxXQUFXLE9BQWhCO0FBQ0csZUFBS0MsS0FBTCxDQUFXQztBQURkO0FBREYsT0FERjtBQU9EOzs7O0VBVGlCLGdCQUFNQyxhOztrQkFZWEgsSyIsImZpbGUiOiJhc2lkZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNsYXNzIEFzaWRlIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9eydhc2lkZS1jb250YWluZXInfT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9eydhc2lkZSd9PlxuICAgICAgICAgIHt0aGlzLnByb3BzLmNoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXNpZGU7XG4iXX0=","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\header.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\header.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Header = function (_React$PureComponent) {\n  _inherits(Header, _React$PureComponent);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));\n  }\n\n  _createClass(Header, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        { className: 'article-header' },\n        _react2.default.createElement(\n          'h1',\n          { className: 'hed' },\n          this.props.title\n        ),\n        this.props.subtitle && _react2.default.createElement(\n          'h2',\n          { className: 'dek' },\n          this.props.subtitle\n        ),\n        this.props.author && _react2.default.createElement(\n          'div',\n          { className: 'byline' },\n          'By: ',\n          _react2.default.createElement(\n            'a',\n            { href: this.props.authorLink },\n            this.props.author\n          )\n        )\n      );\n    }\n  }]);\n\n  return Header;\n}(_react2.default.PureComponent);\n\nexports.default = Header;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci5qcyJdLCJuYW1lcyI6WyJIZWFkZXIiLCJwcm9wcyIsInRpdGxlIiwic3VidGl0bGUiLCJhdXRob3IiLCJhdXRob3JMaW5rIiwiUHVyZUNvbXBvbmVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7O0lBRU1BLE07Ozs7Ozs7Ozs7OzZCQUNLO0FBQ1AsYUFDRTtBQUFBO0FBQUEsVUFBSyxXQUFXLGdCQUFoQjtBQUNFO0FBQUE7QUFBQSxZQUFJLFdBQVcsS0FBZjtBQUNHLGVBQUtDLEtBQUwsQ0FBV0M7QUFEZCxTQURGO0FBS0ksYUFBS0QsS0FBTCxDQUFXRSxRQUFYLElBQ0U7QUFBQTtBQUFBLFlBQUksV0FBVyxLQUFmO0FBQ0csZUFBS0YsS0FBTCxDQUFXRTtBQURkLFNBTk47QUFZSSxhQUFLRixLQUFMLENBQVdHLE1BQVgsSUFDRTtBQUFBO0FBQUEsWUFBSyxXQUFXLFFBQWhCO0FBQUE7QUFDTTtBQUFBO0FBQUEsY0FBRyxNQUFNLEtBQUtILEtBQUwsQ0FBV0ksVUFBcEI7QUFBaUMsaUJBQUtKLEtBQUwsQ0FBV0c7QUFBNUM7QUFETjtBQWJOLE9BREY7QUFzQkQ7Ozs7RUF4QmtCLGdCQUFNRSxhOztrQkEyQlpOLE0iLCJmaWxlIjoiaGVhZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY2xhc3MgSGVhZGVyIGV4dGVuZHMgUmVhY3QuUHVyZUNvbXBvbmVudCB7XG4gIHJlbmRlcigpIHtcbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9eydhcnRpY2xlLWhlYWRlcid9PlxuICAgICAgICA8aDEgY2xhc3NOYW1lPXsnaGVkJ30+XG4gICAgICAgICAge3RoaXMucHJvcHMudGl0bGV9XG4gICAgICAgIDwvaDE+XG4gICAgICAgIHtcbiAgICAgICAgICB0aGlzLnByb3BzLnN1YnRpdGxlICYmIChcbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9eydkZWsnfT5cbiAgICAgICAgICAgICAge3RoaXMucHJvcHMuc3VidGl0bGV9XG4gICAgICAgICAgICA8L2gyPlxuICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICB7XG4gICAgICAgICAgdGhpcy5wcm9wcy5hdXRob3IgJiYgKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9eydieWxpbmUnfT5cbiAgICAgICAgICAgICAgQnk6IDxhIGhyZWY9e3RoaXMucHJvcHMuYXV0aG9yTGlua30+e3RoaXMucHJvcHMuYXV0aG9yfTwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlcjtcbiJdfQ==","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\lifecycle.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\lifecycle.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nexports.default = function (Base) {\n  return function (_Base) {\n    _inherits(_class, _Base);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        this.setStateWithData(this.getDataModel(this.getResolvedState()));\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        this.fireFetchData();\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps, nextState) {\n        var oldState = this.getResolvedState();\n        var newState = this.getResolvedState(nextProps, nextState);\n\n        // Do a deep compare of new and old `defaultOption` and\n        // if they are different reset `option = defaultOption`\n        var defaultableOptions = ['sorted', 'filtered', 'resized', 'expanded'];\n        defaultableOptions.forEach(function (x) {\n          var defaultName = 'default' + (x.charAt(0).toUpperCase() + x.slice(1));\n          if (JSON.stringify(oldState[defaultName]) !== JSON.stringify(newState[defaultName])) {\n            newState[x] = newState[defaultName];\n          }\n        });\n\n        // If they change these table options, we need to reset defaults\n        // or else we could get into a state where the user has changed the UI\n        // and then disabled the ability to change it back.\n        // e.g. If `filterable` has changed, set `filtered = defaultFiltered`\n        var resettableOptions = ['sortable', 'filterable', 'resizable'];\n        resettableOptions.forEach(function (x) {\n          if (oldState[x] !== newState[x]) {\n            var baseName = x.replace('able', '');\n            var optionName = baseName + 'ed';\n            var defaultName = 'default' + (optionName.charAt(0).toUpperCase() + optionName.slice(1));\n            newState[optionName] = newState[defaultName];\n          }\n        });\n\n        // Props that trigger a data update\n        if (oldState.data !== newState.data || oldState.columns !== newState.columns || oldState.pivotBy !== newState.pivotBy || oldState.sorted !== newState.sorted || oldState.filtered !== newState.filtered) {\n          this.setStateWithData(this.getDataModel(newState));\n        }\n      }\n    }, {\n      key: 'setStateWithData',\n      value: function setStateWithData(newState, cb) {\n        var _this2 = this;\n\n        var oldState = this.getResolvedState();\n        var newResolvedState = this.getResolvedState({}, newState);\n        var freezeWhenExpanded = newResolvedState.freezeWhenExpanded;\n\n        // Default to unfrozen state\n\n        newResolvedState.frozen = false;\n\n        // If freezeWhenExpanded is set, check for frozen conditions\n        if (freezeWhenExpanded) {\n          // if any rows are expanded, freeze the existing data and sorting\n          var keys = Object.keys(newResolvedState.expanded);\n          for (var i = 0; i < keys.length; i += 1) {\n            if (newResolvedState.expanded[keys[i]]) {\n              newResolvedState.frozen = true;\n              break;\n            }\n          }\n        }\n\n        // If the data isn't frozen and either the data or\n        // sorting model has changed, update the data\n        if (oldState.frozen && !newResolvedState.frozen || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData) {\n          // Handle collapseOnsortedChange & collapseOnDataChange\n          if (oldState.sorted !== newResolvedState.sorted && this.props.collapseOnSortingChange || oldState.filtered !== newResolvedState.filtered || oldState.showFilters !== newResolvedState.showFilters || oldState.sortedData && !newResolvedState.frozen && oldState.resolvedData !== newResolvedState.resolvedData && this.props.collapseOnDataChange) {\n            newResolvedState.expanded = {};\n          }\n\n          Object.assign(newResolvedState, this.getSortedData(newResolvedState));\n        }\n\n        // Set page to 0 if filters change\n        if (oldState.filtered !== newResolvedState.filtered) {\n          newResolvedState.page = 0;\n        }\n\n        // Calculate pageSize all the time\n        if (newResolvedState.sortedData) {\n          newResolvedState.pages = newResolvedState.manual ? newResolvedState.pages : Math.ceil(newResolvedState.sortedData.length / newResolvedState.pageSize);\n          newResolvedState.page = Math.max(newResolvedState.page >= newResolvedState.pages ? newResolvedState.pages - 1 : newResolvedState.page, 0);\n        }\n\n        return this.setState(newResolvedState, function () {\n          if (cb) {\n            cb();\n          }\n          if (oldState.page !== newResolvedState.page || oldState.pageSize !== newResolvedState.pageSize || oldState.sorted !== newResolvedState.sorted || oldState.filtered !== newResolvedState.filtered) {\n            _this2.fireFetchData();\n          }\n        });\n      }\n    }]);\n\n    return _class;\n  }(Base);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\methods.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\methods.js","source":"'use strict';\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;_e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }return _arr;\n  }return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n  return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n  } else {\n    obj[key] = value;\n  }return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nexports.default = function (Base) {\n  return function (_Base) {\n    _inherits(_class, _Base);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).apply(this, arguments));\n    }\n\n    _createClass(_class, [{\n      key: 'getResolvedState',\n      value: function getResolvedState(props, state) {\n        var resolvedState = _extends({}, _utils2.default.compactObject(this.state), _utils2.default.compactObject(this.props), _utils2.default.compactObject(state), _utils2.default.compactObject(props));\n        return resolvedState;\n      }\n    }, {\n      key: 'getDataModel',\n      value: function getDataModel(newState) {\n        var _this2 = this;\n\n        var columns = newState.columns,\n            _newState$pivotBy = newState.pivotBy,\n            pivotBy = _newState$pivotBy === undefined ? [] : _newState$pivotBy,\n            data = newState.data,\n            pivotIDKey = newState.pivotIDKey,\n            pivotValKey = newState.pivotValKey,\n            subRowsKey = newState.subRowsKey,\n            aggregatedKey = newState.aggregatedKey,\n            nestingLevelKey = newState.nestingLevelKey,\n            originalKey = newState.originalKey,\n            indexKey = newState.indexKey,\n            groupedByPivotKey = newState.groupedByPivotKey,\n            SubComponent = newState.SubComponent;\n\n        // Determine Header Groups\n\n        var hasHeaderGroups = false;\n        columns.forEach(function (column) {\n          if (column.columns) {\n            hasHeaderGroups = true;\n          }\n        });\n\n        var columnsWithExpander = [].concat(_toConsumableArray(columns));\n\n        var expanderColumn = columns.find(function (col) {\n          return col.expander || col.columns && col.columns.some(function (col2) {\n            return col2.expander;\n          });\n        });\n        // The actual expander might be in the columns field of a group column\n        if (expanderColumn && !expanderColumn.expander) {\n          expanderColumn = expanderColumn.columns.find(function (col) {\n            return col.expander;\n          });\n        }\n\n        // If we have SubComponent's we need to make sure we have an expander column\n        if (SubComponent && !expanderColumn) {\n          expanderColumn = { expander: true };\n          columnsWithExpander = [expanderColumn].concat(_toConsumableArray(columnsWithExpander));\n        }\n\n        var makeDecoratedColumn = function makeDecoratedColumn(column, parentColumn) {\n          var dcol = void 0;\n          if (column.expander) {\n            dcol = _extends({}, _this2.props.column, _this2.props.expanderDefaults, column);\n          } else {\n            dcol = _extends({}, _this2.props.column, column);\n          }\n\n          // Ensure minWidth is not greater than maxWidth if set\n          if (dcol.maxWidth < dcol.minWidth) {\n            dcol.minWidth = dcol.maxWidth;\n          }\n\n          if (parentColumn) {\n            dcol.parentColumn = parentColumn;\n          }\n\n          // First check for string accessor\n          if (typeof dcol.accessor === 'string') {\n            var _ret = function () {\n              dcol.id = dcol.id || dcol.accessor;\n              var accessorString = dcol.accessor;\n              dcol.accessor = function (row) {\n                return _utils2.default.get(row, accessorString);\n              };\n              return {\n                v: dcol\n              };\n            }();\n\n            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n          }\n\n          // Fall back to functional accessor (but require an ID)\n          if (dcol.accessor && !dcol.id) {\n            console.warn(dcol);\n            throw new Error('A column id is required if using a non-string accessor for column above.');\n          }\n\n          // Fall back to an undefined accessor\n          if (!dcol.accessor) {\n            dcol.accessor = function () {\n              return undefined;\n            };\n          }\n\n          return dcol;\n        };\n\n        var allDecoratedColumns = [];\n\n        // Decorate the columns\n        var decorateAndAddToAll = function decorateAndAddToAll(column, parentColumn) {\n          var decoratedColumn = makeDecoratedColumn(column, parentColumn);\n          allDecoratedColumns.push(decoratedColumn);\n          return decoratedColumn;\n        };\n\n        var decoratedColumns = columnsWithExpander.map(function (column) {\n          if (column.columns) {\n            return _extends({}, column, {\n              columns: column.columns.map(function (d) {\n                return decorateAndAddToAll(d, column);\n              })\n            });\n          }\n          return decorateAndAddToAll(column);\n        });\n\n        // Build the visible columns, headers and flat column list\n        var visibleColumns = decoratedColumns.slice();\n        var allVisibleColumns = [];\n\n        visibleColumns = visibleColumns.map(function (column) {\n          if (column.columns) {\n            var visibleSubColumns = column.columns.filter(function (d) {\n              return pivotBy.indexOf(d.id) > -1 ? false : _utils2.default.getFirstDefined(d.show, true);\n            });\n            return _extends({}, column, {\n              columns: visibleSubColumns\n            });\n          }\n          return column;\n        });\n\n        visibleColumns = visibleColumns.filter(function (column) {\n          return column.columns ? column.columns.length : pivotBy.indexOf(column.id) > -1 ? false : _utils2.default.getFirstDefined(column.show, true);\n        });\n\n        // Find any custom pivot location\n        var pivotIndex = visibleColumns.findIndex(function (col) {\n          return col.pivot;\n        });\n\n        // Handle Pivot Columns\n        if (pivotBy.length) {\n          (function () {\n            // Retrieve the pivot columns in the correct pivot order\n            var pivotColumns = [];\n            pivotBy.forEach(function (pivotID) {\n              var found = allDecoratedColumns.find(function (d) {\n                return d.id === pivotID;\n              });\n              if (found) {\n                pivotColumns.push(found);\n              }\n            });\n\n            var PivotParentColumn = pivotColumns.reduce(function (prev, current) {\n              return prev && prev === current.parentColumn && current.parentColumn;\n            }, pivotColumns[0].parentColumn);\n\n            var PivotGroupHeader = hasHeaderGroups && PivotParentColumn.Header;\n            PivotGroupHeader = PivotGroupHeader || function () {\n              return _react2.default.createElement('strong', null, 'Pivoted');\n            };\n\n            var pivotColumnGroup = {\n              Header: PivotGroupHeader,\n              columns: pivotColumns.map(function (col) {\n                return _extends({}, _this2.props.pivotDefaults, col, {\n                  pivoted: true\n                });\n              })\n            };\n\n            // Place the pivotColumns back into the visibleColumns\n            if (pivotIndex >= 0) {\n              pivotColumnGroup = _extends({}, visibleColumns[pivotIndex], pivotColumnGroup);\n              visibleColumns.splice(pivotIndex, 1, pivotColumnGroup);\n            } else {\n              visibleColumns.unshift(pivotColumnGroup);\n            }\n          })();\n        }\n\n        // Build Header Groups\n        var headerGroups = [];\n        var currentSpan = [];\n\n        // A convenience function to add a header and reset the currentSpan\n        var addHeader = function addHeader(columns, column) {\n          headerGroups.push(_extends({}, _this2.props.column, column, {\n            columns: columns\n          }));\n          currentSpan = [];\n        };\n\n        // Build flast list of allVisibleColumns and HeaderGroups\n        visibleColumns.forEach(function (column) {\n          if (column.columns) {\n            allVisibleColumns = allVisibleColumns.concat(column.columns);\n            if (currentSpan.length > 0) {\n              addHeader(currentSpan);\n            }\n            addHeader(column.columns, column);\n            return;\n          }\n          allVisibleColumns.push(column);\n          currentSpan.push(column);\n        });\n        if (hasHeaderGroups && currentSpan.length > 0) {\n          addHeader(currentSpan);\n        }\n\n        // Access the data\n        var accessRow = function accessRow(d, i) {\n          var _row;\n\n          var level = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n          var row = (_row = {}, _defineProperty(_row, originalKey, d), _defineProperty(_row, indexKey, i), _defineProperty(_row, subRowsKey, d[subRowsKey]), _defineProperty(_row, nestingLevelKey, level), _row);\n          allDecoratedColumns.forEach(function (column) {\n            if (column.expander) return;\n            row[column.id] = column.accessor(d);\n          });\n          if (row[subRowsKey]) {\n            row[subRowsKey] = row[subRowsKey].map(function (d, i) {\n              return accessRow(d, i, level + 1);\n            });\n          }\n          return row;\n        };\n        var resolvedData = data.map(function (d, i) {\n          return accessRow(d, i);\n        });\n\n        // TODO: Make it possible to fabricate nested rows without pivoting\n        var aggregatingColumns = allVisibleColumns.filter(function (d) {\n          return !d.expander && d.aggregate;\n        });\n\n        // If pivoting, recursively group the data\n        var aggregate = function aggregate(rows) {\n          var aggregationValues = {};\n          aggregatingColumns.forEach(function (column) {\n            var values = rows.map(function (d) {\n              return d[column.id];\n            });\n            aggregationValues[column.id] = column.aggregate(values, rows);\n          });\n          return aggregationValues;\n        };\n        if (pivotBy.length) {\n          (function () {\n            var groupRecursively = function groupRecursively(rows, keys) {\n              var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n              // This is the last level, just return the rows\n              if (i === keys.length) {\n                return rows;\n              }\n              // Group the rows together for this level\n              var groupedRows = Object.entries(_utils2.default.groupBy(rows, keys[i])).map(function (_ref) {\n                var _ref3;\n\n                var _ref2 = _slicedToArray(_ref, 2),\n                    key = _ref2[0],\n                    value = _ref2[1];\n\n                return _ref3 = {}, _defineProperty(_ref3, pivotIDKey, keys[i]), _defineProperty(_ref3, pivotValKey, key), _defineProperty(_ref3, keys[i], key), _defineProperty(_ref3, subRowsKey, value), _defineProperty(_ref3, nestingLevelKey, i), _defineProperty(_ref3, groupedByPivotKey, true), _ref3;\n              });\n              // Recurse into the subRows\n              groupedRows = groupedRows.map(function (rowGroup) {\n                var _extends2;\n\n                var subRows = groupRecursively(rowGroup[subRowsKey], keys, i + 1);\n                return _extends({}, rowGroup, (_extends2 = {}, _defineProperty(_extends2, subRowsKey, subRows), _defineProperty(_extends2, aggregatedKey, true), _extends2), aggregate(subRows));\n              });\n              return groupedRows;\n            };\n            resolvedData = groupRecursively(resolvedData, pivotBy);\n          })();\n        }\n\n        return _extends({}, newState, {\n          resolvedData: resolvedData,\n          allVisibleColumns: allVisibleColumns,\n          headerGroups: headerGroups,\n          allDecoratedColumns: allDecoratedColumns,\n          hasHeaderGroups: hasHeaderGroups\n        });\n      }\n    }, {\n      key: 'getSortedData',\n      value: function getSortedData(resolvedState) {\n        var manual = resolvedState.manual,\n            sorted = resolvedState.sorted,\n            filtered = resolvedState.filtered,\n            defaultFilterMethod = resolvedState.defaultFilterMethod,\n            resolvedData = resolvedState.resolvedData,\n            allVisibleColumns = resolvedState.allVisibleColumns,\n            allDecoratedColumns = resolvedState.allDecoratedColumns;\n\n        var sortMethodsByColumnID = {};\n\n        allDecoratedColumns.filter(function (col) {\n          return col.sortMethod;\n        }).forEach(function (col) {\n          sortMethodsByColumnID[col.id] = col.sortMethod;\n        });\n\n        // Resolve the data from either manual data or sorted data\n        return {\n          sortedData: manual ? resolvedData : this.sortData(this.filterData(resolvedData, filtered, defaultFilterMethod, allVisibleColumns), sorted, sortMethodsByColumnID)\n        };\n      }\n    }, {\n      key: 'fireFetchData',\n      value: function fireFetchData() {\n        this.props.onFetchData(this.getResolvedState(), this);\n      }\n    }, {\n      key: 'getPropOrState',\n      value: function getPropOrState(key) {\n        return _utils2.default.getFirstDefined(this.props[key], this.state[key]);\n      }\n    }, {\n      key: 'getStateOrProp',\n      value: function getStateOrProp(key) {\n        return _utils2.default.getFirstDefined(this.state[key], this.props[key]);\n      }\n    }, {\n      key: 'filterData',\n      value: function filterData(data, filtered, defaultFilterMethod, allVisibleColumns) {\n        var _this3 = this;\n\n        var filteredData = data;\n\n        if (filtered.length) {\n          filteredData = filtered.reduce(function (filteredSoFar, nextFilter) {\n            var column = allVisibleColumns.find(function (x) {\n              return x.id === nextFilter.id;\n            });\n\n            // Don't filter hidden columns or columns that have had their filters disabled\n            if (!column || column.filterable === false) {\n              return filteredSoFar;\n            }\n\n            var filterMethod = column.filterMethod || defaultFilterMethod;\n\n            // If 'filterAll' is set to true, pass the entire dataset to the filter method\n            if (column.filterAll) {\n              return filterMethod(nextFilter, filteredSoFar, column);\n            }\n            return filteredSoFar.filter(function (row) {\n              return filterMethod(nextFilter, row, column);\n            });\n          }, filteredData);\n\n          // Apply the filter to the subrows if we are pivoting, and then\n          // filter any rows without subcolumns because it would be strange to show\n          filteredData = filteredData.map(function (row) {\n            if (!row[_this3.props.subRowsKey]) {\n              return row;\n            }\n            return _extends({}, row, _defineProperty({}, _this3.props.subRowsKey, _this3.filterData(row[_this3.props.subRowsKey], filtered, defaultFilterMethod, allVisibleColumns)));\n          }).filter(function (row) {\n            if (!row[_this3.props.subRowsKey]) {\n              return true;\n            }\n            return row[_this3.props.subRowsKey].length > 0;\n          });\n        }\n\n        return filteredData;\n      }\n    }, {\n      key: 'sortData',\n      value: function sortData(data, sorted) {\n        var _this4 = this;\n\n        var sortMethodsByColumnID = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        if (!sorted.length) {\n          return data;\n        }\n\n        var sortedData = (this.props.orderByMethod || _utils2.default.orderBy)(data, sorted.map(function (sort) {\n          // Support custom sorting methods for each column\n          if (sortMethodsByColumnID[sort.id]) {\n            return function (a, b) {\n              return sortMethodsByColumnID[sort.id](a[sort.id], b[sort.id], sort.desc);\n            };\n          }\n          return function (a, b) {\n            return _this4.props.defaultSortMethod(a[sort.id], b[sort.id], sort.desc);\n          };\n        }), sorted.map(function (d) {\n          return !d.desc;\n        }), this.props.indexKey);\n\n        sortedData.forEach(function (row) {\n          if (!row[_this4.props.subRowsKey]) {\n            return;\n          }\n          row[_this4.props.subRowsKey] = _this4.sortData(row[_this4.props.subRowsKey], sorted, sortMethodsByColumnID);\n        });\n\n        return sortedData;\n      }\n    }, {\n      key: 'getMinRows',\n      value: function getMinRows() {\n        return _utils2.default.getFirstDefined(this.props.minRows, this.getStateOrProp('pageSize'));\n      }\n\n      // User actions\n\n    }, {\n      key: 'onPageChange',\n      value: function onPageChange(page) {\n        var _props = this.props,\n            onPageChange = _props.onPageChange,\n            collapseOnPageChange = _props.collapseOnPageChange;\n\n        var newState = { page: page };\n        if (collapseOnPageChange) {\n          newState.expanded = {};\n        }\n        this.setStateWithData(newState, function () {\n          return onPageChange && onPageChange(page);\n        });\n      }\n    }, {\n      key: 'onPageSizeChange',\n      value: function onPageSizeChange(newPageSize) {\n        var onPageSizeChange = this.props.onPageSizeChange;\n\n        var _getResolvedState = this.getResolvedState(),\n            pageSize = _getResolvedState.pageSize,\n            page = _getResolvedState.page;\n\n        // Normalize the page to display\n\n\n        var currentRow = pageSize * page;\n        var newPage = Math.floor(currentRow / newPageSize);\n\n        this.setStateWithData({\n          pageSize: newPageSize,\n          page: newPage\n        }, function () {\n          return onPageSizeChange && onPageSizeChange(newPageSize, newPage);\n        });\n      }\n    }, {\n      key: 'sortColumn',\n      value: function sortColumn(column, additive) {\n        var _getResolvedState2 = this.getResolvedState(),\n            sorted = _getResolvedState2.sorted,\n            skipNextSort = _getResolvedState2.skipNextSort,\n            defaultSortDesc = _getResolvedState2.defaultSortDesc;\n\n        var firstSortDirection = Object.prototype.hasOwnProperty.call(column, 'defaultSortDesc') ? column.defaultSortDesc : defaultSortDesc;\n        var secondSortDirection = !firstSortDirection;\n\n        // we can't stop event propagation from the column resize move handlers\n        // attached to the document because of react's synthetic events\n        // so we have to prevent the sort function from actually sorting\n        // if we click on the column resize element within a header.\n        if (skipNextSort) {\n          this.setStateWithData({\n            skipNextSort: false\n          });\n          return;\n        }\n\n        var onSortedChange = this.props.onSortedChange;\n\n        var newSorted = _utils2.default.clone(sorted || []).map(function (d) {\n          d.desc = _utils2.default.isSortingDesc(d);\n          return d;\n        });\n        if (!_utils2.default.isArray(column)) {\n          // Single-Sort\n          var existingIndex = newSorted.findIndex(function (d) {\n            return d.id === column.id;\n          });\n          if (existingIndex > -1) {\n            var existing = newSorted[existingIndex];\n            if (existing.desc === secondSortDirection) {\n              if (additive) {\n                newSorted.splice(existingIndex, 1);\n              } else {\n                existing.desc = firstSortDirection;\n                newSorted = [existing];\n              }\n            } else {\n              existing.desc = secondSortDirection;\n              if (!additive) {\n                newSorted = [existing];\n              }\n            }\n          } else if (additive) {\n            newSorted.push({\n              id: column.id,\n              desc: firstSortDirection\n            });\n          } else {\n            newSorted = [{\n              id: column.id,\n              desc: firstSortDirection\n            }];\n          }\n        } else {\n          (function () {\n            // Multi-Sort\n            var existingIndex = newSorted.findIndex(function (d) {\n              return d.id === column[0].id;\n            });\n            // Existing Sorted Column\n            if (existingIndex > -1) {\n              var _existing = newSorted[existingIndex];\n              if (_existing.desc === secondSortDirection) {\n                if (additive) {\n                  newSorted.splice(existingIndex, column.length);\n                } else {\n                  column.forEach(function (d, i) {\n                    newSorted[existingIndex + i].desc = firstSortDirection;\n                  });\n                }\n              } else {\n                column.forEach(function (d, i) {\n                  newSorted[existingIndex + i].desc = secondSortDirection;\n                });\n              }\n              if (!additive) {\n                newSorted = newSorted.slice(existingIndex, column.length);\n              }\n              // New Sort Column\n            } else if (additive) {\n              newSorted = newSorted.concat(column.map(function (d) {\n                return {\n                  id: d.id,\n                  desc: firstSortDirection\n                };\n              }));\n            } else {\n              newSorted = column.map(function (d) {\n                return {\n                  id: d.id,\n                  desc: firstSortDirection\n                };\n              });\n            }\n          })();\n        }\n\n        this.setStateWithData({\n          page: !sorted.length && newSorted.length || !additive ? 0 : this.state.page,\n          sorted: newSorted\n        }, function () {\n          return onSortedChange && onSortedChange(newSorted, column, additive);\n        });\n      }\n    }, {\n      key: 'filterColumn',\n      value: function filterColumn(column, value) {\n        var _getResolvedState3 = this.getResolvedState(),\n            filtered = _getResolvedState3.filtered;\n\n        var onFilteredChange = this.props.onFilteredChange;\n\n        // Remove old filter first if it exists\n\n        var newFiltering = (filtered || []).filter(function (x) {\n          return x.id !== column.id;\n        });\n\n        if (value !== '') {\n          newFiltering.push({\n            id: column.id,\n            value: value\n          });\n        }\n\n        this.setStateWithData({\n          filtered: newFiltering\n        }, function () {\n          return onFilteredChange && onFilteredChange(newFiltering, column, value);\n        });\n      }\n    }, {\n      key: 'resizeColumnStart',\n      value: function resizeColumnStart(event, column, isTouch) {\n        var _this5 = this;\n\n        event.stopPropagation();\n        var parentWidth = event.target.parentElement.getBoundingClientRect().width;\n\n        var pageX = void 0;\n        if (isTouch) {\n          pageX = event.changedTouches[0].pageX;\n        } else {\n          pageX = event.pageX;\n        }\n\n        this.trapEvents = true;\n        this.setStateWithData({\n          currentlyResizing: {\n            id: column.id,\n            startX: pageX,\n            parentWidth: parentWidth\n          }\n        }, function () {\n          if (isTouch) {\n            document.addEventListener('touchmove', _this5.resizeColumnMoving);\n            document.addEventListener('touchcancel', _this5.resizeColumnEnd);\n            document.addEventListener('touchend', _this5.resizeColumnEnd);\n          } else {\n            document.addEventListener('mousemove', _this5.resizeColumnMoving);\n            document.addEventListener('mouseup', _this5.resizeColumnEnd);\n            document.addEventListener('mouseleave', _this5.resizeColumnEnd);\n          }\n        });\n      }\n    }, {\n      key: 'resizeColumnMoving',\n      value: function resizeColumnMoving(event) {\n        event.stopPropagation();\n        var onResizedChange = this.props.onResizedChange;\n\n        var _getResolvedState4 = this.getResolvedState(),\n            resized = _getResolvedState4.resized,\n            currentlyResizing = _getResolvedState4.currentlyResizing;\n\n        // Delete old value\n\n\n        var newResized = resized.filter(function (x) {\n          return x.id !== currentlyResizing.id;\n        });\n\n        var pageX = void 0;\n\n        if (event.type === 'touchmove') {\n          pageX = event.changedTouches[0].pageX;\n        } else if (event.type === 'mousemove') {\n          pageX = event.pageX;\n        }\n\n        // Set the min size to 10 to account for margin and border or else the\n        // group headers don't line up correctly\n        var newWidth = Math.max(currentlyResizing.parentWidth + pageX - currentlyResizing.startX, 11);\n\n        newResized.push({\n          id: currentlyResizing.id,\n          value: newWidth\n        });\n\n        this.setStateWithData({\n          resized: newResized\n        }, function () {\n          return onResizedChange && onResizedChange(newResized, event);\n        });\n      }\n    }, {\n      key: 'resizeColumnEnd',\n      value: function resizeColumnEnd(event) {\n        event.stopPropagation();\n        var isTouch = event.type === 'touchend' || event.type === 'touchcancel';\n\n        if (isTouch) {\n          document.removeEventListener('touchmove', this.resizeColumnMoving);\n          document.removeEventListener('touchcancel', this.resizeColumnEnd);\n          document.removeEventListener('touchend', this.resizeColumnEnd);\n        }\n\n        // If its a touch event clear the mouse one's as well because sometimes\n        // the mouseDown event gets called as well, but the mouseUp event doesn't\n        document.removeEventListener('mousemove', this.resizeColumnMoving);\n        document.removeEventListener('mouseup', this.resizeColumnEnd);\n        document.removeEventListener('mouseleave', this.resizeColumnEnd);\n\n        // The touch events don't propagate up to the sorting's onMouseDown event so\n        // no need to prevent it from happening or else the first click after a touch\n        // event resize will not sort the column.\n        if (!isTouch) {\n          this.setStateWithData({\n            skipNextSort: true,\n            currentlyResizing: false\n          });\n        }\n      }\n    }]);\n\n    return _class;\n  }(Base);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","./utils":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\utils.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollparent\\scrollparent.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollparent\\scrollparent.js","source":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if ((typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n})(undefined, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function parents(node, ps) {\n    if (node.parentNode === null) {\n      return ps;\n    }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function style(node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function overflow(node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function scroll(node) {\n    return regex.test(overflow(node));\n  };\n\n  var scrollParent = function scrollParent(node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcm9sbHBhcmVudC5qcyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJTY3JvbGxwYXJlbnQiLCJyZWdleCIsInBhcmVudHMiLCJub2RlIiwicHMiLCJwYXJlbnROb2RlIiwiY29uY2F0Iiwic3R5bGUiLCJwcm9wIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImdldFByb3BlcnR5VmFsdWUiLCJvdmVyZmxvdyIsInNjcm9sbCIsInRlc3QiLCJzY3JvbGxQYXJlbnQiLCJIVE1MRWxlbWVudCIsIlNWR0VsZW1lbnQiLCJpIiwibGVuZ3RoIiwiZG9jdW1lbnQiLCJzY3JvbGxpbmdFbGVtZW50IiwiZG9jdW1lbnRFbGVtZW50Il0sIm1hcHBpbmdzIjoiOzs7O0FBQUMsV0FBVUEsSUFBVixFQUFnQkMsT0FBaEIsRUFBeUI7QUFDeEIsTUFBSSxPQUFPQyxNQUFQLEtBQWtCLFVBQWxCLElBQWdDQSxPQUFPQyxHQUEzQyxFQUFnRDtBQUM5Q0QsV0FBTyxFQUFQLEVBQVdELE9BQVg7QUFDRCxHQUZELE1BRU8sSUFBSSxRQUFPRyxNQUFQLHlDQUFPQSxNQUFQLE9BQWtCLFFBQWxCLElBQThCQSxPQUFPQyxPQUF6QyxFQUFrRDtBQUN2REQsV0FBT0MsT0FBUCxHQUFpQkosU0FBakI7QUFDRCxHQUZNLE1BRUE7QUFDTEQsU0FBS00sWUFBTCxHQUFvQkwsU0FBcEI7QUFDRDtBQUNGLENBUkEsYUFRTyxZQUFZO0FBQ2xCLE1BQUlNLFFBQVEsZUFBWjs7QUFFQSxNQUFJQyxVQUFVLFNBQVZBLE9BQVUsQ0FBVUMsSUFBVixFQUFnQkMsRUFBaEIsRUFBb0I7QUFDaEMsUUFBSUQsS0FBS0UsVUFBTCxLQUFvQixJQUF4QixFQUE4QjtBQUFFLGFBQU9ELEVBQVA7QUFBWTs7QUFFNUMsV0FBT0YsUUFBUUMsS0FBS0UsVUFBYixFQUF5QkQsR0FBR0UsTUFBSCxDQUFVLENBQUNILElBQUQsQ0FBVixDQUF6QixDQUFQO0FBQ0QsR0FKRDs7QUFNQSxNQUFJSSxRQUFRLFNBQVJBLEtBQVEsQ0FBVUosSUFBVixFQUFnQkssSUFBaEIsRUFBc0I7QUFDaEMsV0FBT0MsaUJBQWlCTixJQUFqQixFQUF1QixJQUF2QixFQUE2Qk8sZ0JBQTdCLENBQThDRixJQUE5QyxDQUFQO0FBQ0QsR0FGRDs7QUFJQSxNQUFJRyxXQUFXLFNBQVhBLFFBQVcsQ0FBVVIsSUFBVixFQUFnQjtBQUM3QixXQUFPSSxNQUFNSixJQUFOLEVBQVksVUFBWixJQUEwQkksTUFBTUosSUFBTixFQUFZLFlBQVosQ0FBMUIsR0FBc0RJLE1BQU1KLElBQU4sRUFBWSxZQUFaLENBQTdEO0FBQ0QsR0FGRDs7QUFJQSxNQUFJUyxTQUFTLFNBQVRBLE1BQVMsQ0FBVVQsSUFBVixFQUFnQjtBQUM1QixXQUFPRixNQUFNWSxJQUFOLENBQVdGLFNBQVNSLElBQVQsQ0FBWCxDQUFQO0FBQ0EsR0FGRDs7QUFJQSxNQUFJVyxlQUFlLFNBQWZBLFlBQWUsQ0FBVVgsSUFBVixFQUFnQjtBQUNqQyxRQUFJLEVBQUVBLGdCQUFnQlksV0FBaEIsSUFBK0JaLGdCQUFnQmEsVUFBakQsQ0FBSixFQUFrRTtBQUNoRTtBQUNEOztBQUVELFFBQUlaLEtBQUtGLFFBQVFDLEtBQUtFLFVBQWIsRUFBeUIsRUFBekIsQ0FBVDs7QUFFQSxTQUFLLElBQUlZLElBQUksQ0FBYixFQUFnQkEsSUFBSWIsR0FBR2MsTUFBdkIsRUFBK0JELEtBQUssQ0FBcEMsRUFBdUM7QUFDckMsVUFBSUwsT0FBT1IsR0FBR2EsQ0FBSCxDQUFQLENBQUosRUFBbUI7QUFDakIsZUFBT2IsR0FBR2EsQ0FBSCxDQUFQO0FBQ0Q7QUFDRjs7QUFFRCxXQUFPRSxTQUFTQyxnQkFBVCxJQUE2QkQsU0FBU0UsZUFBN0M7QUFDRCxHQWREOztBQWdCQSxTQUFPUCxZQUFQO0FBQ0QsQ0E5Q0EsQ0FBRCIsImZpbGUiOiJzY3JvbGxwYXJlbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gKHJvb3QsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSBcIm9iamVjdFwiICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG4gIH0gZWxzZSB7XG4gICAgcm9vdC5TY3JvbGxwYXJlbnQgPSBmYWN0b3J5KCk7XG4gIH1cbn0odGhpcywgZnVuY3Rpb24gKCkge1xuICB2YXIgcmVnZXggPSAvKGF1dG98c2Nyb2xsKS87XG5cbiAgdmFyIHBhcmVudHMgPSBmdW5jdGlvbiAobm9kZSwgcHMpIHtcbiAgICBpZiAobm9kZS5wYXJlbnROb2RlID09PSBudWxsKSB7IHJldHVybiBwczsgfVxuXG4gICAgcmV0dXJuIHBhcmVudHMobm9kZS5wYXJlbnROb2RlLCBwcy5jb25jYXQoW25vZGVdKSk7XG4gIH07XG5cbiAgdmFyIHN0eWxlID0gZnVuY3Rpb24gKG5vZGUsIHByb3ApIHtcbiAgICByZXR1cm4gZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKHByb3ApO1xuICB9O1xuXG4gIHZhciBvdmVyZmxvdyA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgcmV0dXJuIHN0eWxlKG5vZGUsIFwib3ZlcmZsb3dcIikgKyBzdHlsZShub2RlLCBcIm92ZXJmbG93LXlcIikgKyBzdHlsZShub2RlLCBcIm92ZXJmbG93LXhcIik7XG4gIH07XG5cbiAgdmFyIHNjcm9sbCA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICByZXR1cm4gcmVnZXgudGVzdChvdmVyZmxvdyhub2RlKSk7XG4gIH07XG5cbiAgdmFyIHNjcm9sbFBhcmVudCA9IGZ1bmN0aW9uIChub2RlKSB7XG4gICAgaWYgKCEobm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50IHx8IG5vZGUgaW5zdGFuY2VvZiBTVkdFbGVtZW50KSkge1xuICAgICAgcmV0dXJuIDtcbiAgICB9XG5cbiAgICB2YXIgcHMgPSBwYXJlbnRzKG5vZGUucGFyZW50Tm9kZSwgW10pO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgaWYgKHNjcm9sbChwc1tpXSkpIHtcbiAgICAgICAgcmV0dXJuIHBzW2ldO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBkb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiAgfTtcblxuICByZXR1cm4gc2Nyb2xsUGFyZW50O1xufSkpO1xuIl19","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollmonitor\\scrollMonitor.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollmonitor\\scrollMonitor.js","source":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n!function (t, e) {\n  \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && \"object\" == (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) ? module.exports = e() : \"function\" == typeof define && define.amd ? define(\"scrollMonitor\", [], e) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) ? exports.scrollMonitor = e() : t.scrollMonitor = e();\n}(undefined, function () {\n  return function (t) {\n    function e(o) {\n      if (i[o]) return i[o].exports;var s = i[o] = { exports: {}, id: o, loaded: !1 };return t[o].call(s.exports, s, s.exports, e), s.loaded = !0, s.exports;\n    }var i = {};return e.m = t, e.c = i, e.p = \"\", e(0);\n  }([function (t, e, i) {\n    \"use strict\";\n    var o = i(1),\n        s = o.isInBrowser,\n        n = i(2),\n        r = new n(s ? document.body : null);r.setStateFromDOM(null), r.listenToDOM(), s && (window.scrollMonitor = r), t.exports = r;\n  }, function (t, e) {\n    \"use strict\";\n    e.VISIBILITYCHANGE = \"visibilityChange\", e.ENTERVIEWPORT = \"enterViewport\", e.FULLYENTERVIEWPORT = \"fullyEnterViewport\", e.EXITVIEWPORT = \"exitViewport\", e.PARTIALLYEXITVIEWPORT = \"partiallyExitViewport\", e.LOCATIONCHANGE = \"locationChange\", e.STATECHANGE = \"stateChange\", e.eventTypes = [e.VISIBILITYCHANGE, e.ENTERVIEWPORT, e.FULLYENTERVIEWPORT, e.EXITVIEWPORT, e.PARTIALLYEXITVIEWPORT, e.LOCATIONCHANGE, e.STATECHANGE], e.isOnServer = \"undefined\" == typeof window, e.isInBrowser = !e.isOnServer, e.defaultOffsets = { top: 0, bottom: 0 };\n  }, function (t, e, i) {\n    \"use strict\";\n    function o(t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }function s(t) {\n      return c ? 0 : t === document.body ? window.innerHeight || document.documentElement.clientHeight : t.clientHeight;\n    }function n(t) {\n      return c ? 0 : t === document.body ? Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.documentElement.clientHeight) : t.scrollHeight;\n    }function r(t) {\n      return c ? 0 : t === document.body ? window.pageYOffset || document.documentElement && document.documentElement.scrollTop || document.body.scrollTop : t.scrollTop;\n    }var h = i(1),\n        c = h.isOnServer,\n        a = h.isInBrowser,\n        l = h.eventTypes,\n        p = i(3),\n        u = !1;if (a) try {\n      var w = Object.defineProperty({}, \"passive\", { get: function get() {\n          u = !0;\n        } });window.addEventListener(\"test\", null, w);\n    } catch (t) {}var d = !!u && { capture: !1, passive: !0 },\n        f = function () {\n      function t(e, i) {\n        function h() {\n          if (a.viewportTop = r(e), a.viewportBottom = a.viewportTop + a.viewportHeight, a.documentHeight = n(e), a.documentHeight !== p) {\n            for (u = a.watchers.length; u--;) {\n              a.watchers[u].recalculateLocation();\n            }p = a.documentHeight;\n          }\n        }function c() {\n          for (w = a.watchers.length; w--;) {\n            a.watchers[w].update();\n          }for (w = a.watchers.length; w--;) {\n            a.watchers[w].triggerCallbacks();\n          }\n        }o(this, t);var a = this;this.item = e, this.watchers = [], this.viewportTop = null, this.viewportBottom = null, this.documentHeight = n(e), this.viewportHeight = s(e), this.DOMListener = function () {\n          t.prototype.DOMListener.apply(a, arguments);\n        }, this.eventTypes = l, i && (this.containerWatcher = i.create(e));var p, u, w;this.update = function () {\n          h(), c();\n        }, this.recalculateLocations = function () {\n          this.documentHeight = 0, this.update();\n        };\n      }return t.prototype.listenToDOM = function () {\n        a && (window.addEventListener ? (this.item === document.body ? window.addEventListener(\"scroll\", this.DOMListener, d) : this.item.addEventListener(\"scroll\", this.DOMListener, d), window.addEventListener(\"resize\", this.DOMListener)) : (this.item === document.body ? window.attachEvent(\"onscroll\", this.DOMListener) : this.item.attachEvent(\"onscroll\", this.DOMListener), window.attachEvent(\"onresize\", this.DOMListener)), this.destroy = function () {\n          window.addEventListener ? (this.item === document.body ? (window.removeEventListener(\"scroll\", this.DOMListener, d), this.containerWatcher.destroy()) : this.item.removeEventListener(\"scroll\", this.DOMListener, d), window.removeEventListener(\"resize\", this.DOMListener)) : (this.item === document.body ? (window.detachEvent(\"onscroll\", this.DOMListener), this.containerWatcher.destroy()) : this.item.detachEvent(\"onscroll\", this.DOMListener), window.detachEvent(\"onresize\", this.DOMListener));\n        });\n      }, t.prototype.destroy = function () {}, t.prototype.DOMListener = function (t) {\n        this.setStateFromDOM(t);\n      }, t.prototype.setStateFromDOM = function (t) {\n        var e = r(this.item),\n            i = s(this.item),\n            o = n(this.item);this.setState(e, i, o, t);\n      }, t.prototype.setState = function (t, e, i, o) {\n        var s = e !== this.viewportHeight || i !== this.contentHeight;if (this.latestEvent = o, this.viewportTop = t, this.viewportHeight = e, this.viewportBottom = t + e, this.contentHeight = i, s) for (var n = this.watchers.length; n--;) {\n          this.watchers[n].recalculateLocation();\n        }this.updateAndTriggerWatchers(o);\n      }, t.prototype.updateAndTriggerWatchers = function (t) {\n        for (var e = this.watchers.length; e--;) {\n          this.watchers[e].update();\n        }for (e = this.watchers.length; e--;) {\n          this.watchers[e].triggerCallbacks(t);\n        }\n      }, t.prototype.createCustomContainer = function () {\n        return new t();\n      }, t.prototype.createContainer = function (e) {\n        \"string\" == typeof e ? e = document.querySelector(e) : e && e.length > 0 && (e = e[0]);var i = new t(e, this);return i.setStateFromDOM(), i.listenToDOM(), i;\n      }, t.prototype.create = function (t, e) {\n        \"string\" == typeof t ? t = document.querySelector(t) : t && t.length > 0 && (t = t[0]);var i = new p(this, t, e);return this.watchers.push(i), i;\n      }, t.prototype.beget = function (t, e) {\n        return this.create(t, e);\n      }, t;\n    }();t.exports = f;\n  }, function (t, e, i) {\n    \"use strict\";\n    function o(t, e, i) {\n      function o(t, e) {\n        if (0 !== t.length) for (E = t.length; E--;) {\n          y = t[E], y.callback.call(s, e, s), y.isOne && t.splice(E, 1);\n        }\n      }var s = this;this.watchItem = e, this.container = t, i ? i === +i ? this.offsets = { top: i, bottom: i } : this.offsets = { top: i.top || w.top, bottom: i.bottom || w.bottom } : this.offsets = w, this.callbacks = {};for (var d = 0, f = u.length; d < f; d++) {\n        s.callbacks[u[d]] = [];\n      }this.locked = !1;var m, v, b, I, E, y;this.triggerCallbacks = function (t) {\n        switch (this.isInViewport && !m && o(this.callbacks[r], t), this.isFullyInViewport && !v && o(this.callbacks[h], t), this.isAboveViewport !== b && this.isBelowViewport !== I && (o(this.callbacks[n], t), v || this.isFullyInViewport || (o(this.callbacks[h], t), o(this.callbacks[a], t)), m || this.isInViewport || (o(this.callbacks[r], t), o(this.callbacks[c], t))), !this.isFullyInViewport && v && o(this.callbacks[a], t), !this.isInViewport && m && o(this.callbacks[c], t), this.isInViewport !== m && o(this.callbacks[n], t), !0) {case m !== this.isInViewport:case v !== this.isFullyInViewport:case b !== this.isAboveViewport:case I !== this.isBelowViewport:\n            o(this.callbacks[p], t);}m = this.isInViewport, v = this.isFullyInViewport, b = this.isAboveViewport, I = this.isBelowViewport;\n      }, this.recalculateLocation = function () {\n        if (!this.locked) {\n          var t = this.top,\n              e = this.bottom;if (this.watchItem.nodeName) {\n            var i = this.watchItem.style.display;\"none\" === i && (this.watchItem.style.display = \"\");for (var s = 0, n = this.container; n.containerWatcher;) {\n              s += n.containerWatcher.top - n.containerWatcher.container.viewportTop, n = n.containerWatcher.container;\n            }var r = this.watchItem.getBoundingClientRect();this.top = r.top + this.container.viewportTop - s, this.bottom = r.bottom + this.container.viewportTop - s, \"none\" === i && (this.watchItem.style.display = i);\n          } else this.watchItem === +this.watchItem ? this.watchItem > 0 ? this.top = this.bottom = this.watchItem : this.top = this.bottom = this.container.documentHeight - this.watchItem : (this.top = this.watchItem.top, this.bottom = this.watchItem.bottom);this.top -= this.offsets.top, this.bottom += this.offsets.bottom, this.height = this.bottom - this.top, void 0 === t && void 0 === e || this.top === t && this.bottom === e || o(this.callbacks[l], null);\n        }\n      }, this.recalculateLocation(), this.update(), m = this.isInViewport, v = this.isFullyInViewport, b = this.isAboveViewport, I = this.isBelowViewport;\n    }var s = i(1),\n        n = s.VISIBILITYCHANGE,\n        r = s.ENTERVIEWPORT,\n        h = s.FULLYENTERVIEWPORT,\n        c = s.EXITVIEWPORT,\n        a = s.PARTIALLYEXITVIEWPORT,\n        l = s.LOCATIONCHANGE,\n        p = s.STATECHANGE,\n        u = s.eventTypes,\n        w = s.defaultOffsets;o.prototype = { on: function on(t, e, i) {\n        switch (!0) {case t === n && !this.isInViewport && this.isAboveViewport:case t === r && this.isInViewport:case t === h && this.isFullyInViewport:case t === c && this.isAboveViewport && !this.isInViewport:case t === a && this.isInViewport && this.isAboveViewport:\n            if (e.call(this, this.container.latestEvent, this), i) return;}if (!this.callbacks[t]) throw new Error(\"Tried to add a scroll monitor listener of type \" + t + \". Your options are: \" + u.join(\", \"));this.callbacks[t].push({ callback: e, isOne: i || !1 });\n      }, off: function off(t, e) {\n        if (!this.callbacks[t]) throw new Error(\"Tried to remove a scroll monitor listener of type \" + t + \". Your options are: \" + u.join(\", \"));for (var i, o = 0; i = this.callbacks[t][o]; o++) {\n          if (i.callback === e) {\n            this.callbacks[t].splice(o, 1);break;\n          }\n        }\n      }, one: function one(t, e) {\n        this.on(t, e, !0);\n      }, recalculateSize: function recalculateSize() {\n        this.height = this.watchItem.offsetHeight + this.offsets.top + this.offsets.bottom, this.bottom = this.top + this.height;\n      }, update: function update() {\n        this.isAboveViewport = this.top < this.container.viewportTop, this.isBelowViewport = this.bottom > this.container.viewportBottom, this.isInViewport = this.top < this.container.viewportBottom && this.bottom > this.container.viewportTop, this.isFullyInViewport = this.top >= this.container.viewportTop && this.bottom <= this.container.viewportBottom || this.isAboveViewport && this.isBelowViewport;\n      }, destroy: function destroy() {\n        var t = this.container.watchers.indexOf(this),\n            e = this;this.container.watchers.splice(t, 1);for (var i = 0, o = u.length; i < o; i++) {\n          e.callbacks[u[i]].length = 0;\n        }\n      }, lock: function lock() {\n        this.locked = !0;\n      }, unlock: function unlock() {\n        this.locked = !1;\n      } };for (var d = function d(t) {\n      return function (e, i) {\n        this.on.call(this, t, e, i);\n      };\n    }, f = 0, m = u.length; f < m; f++) {\n      var v = u[f];o.prototype[v] = d(v);\n    }t.exports = o;\n  }]);\n});\n//# sourceMappingURL=scrollMonitor.js.map\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\classnames\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\classnames\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg === 'undefined' ? 'undefined' : _typeof(arg);\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && _typeof(define.amd) === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImhhc093biIsImhhc093blByb3BlcnR5IiwiY2xhc3NOYW1lcyIsImNsYXNzZXMiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiYXJnIiwiYXJnVHlwZSIsInB1c2giLCJBcnJheSIsImlzQXJyYXkiLCJhcHBseSIsImtleSIsImNhbGwiLCJqb2luIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlZmluZSIsImFtZCIsIndpbmRvdyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztBQUtBOztBQUVDLGFBQVk7QUFDWjs7QUFFQSxLQUFJQSxTQUFTLEdBQUdDLGNBQWhCOztBQUVBLFVBQVNDLFVBQVQsR0FBdUI7QUFDdEIsTUFBSUMsVUFBVSxFQUFkOztBQUVBLE9BQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJQyxVQUFVQyxNQUE5QixFQUFzQ0YsR0FBdEMsRUFBMkM7QUFDMUMsT0FBSUcsTUFBTUYsVUFBVUQsQ0FBVixDQUFWO0FBQ0EsT0FBSSxDQUFDRyxHQUFMLEVBQVU7O0FBRVYsT0FBSUMsaUJBQWlCRCxHQUFqQix5Q0FBaUJBLEdBQWpCLENBQUo7O0FBRUEsT0FBSUMsWUFBWSxRQUFaLElBQXdCQSxZQUFZLFFBQXhDLEVBQWtEO0FBQ2pETCxZQUFRTSxJQUFSLENBQWFGLEdBQWI7QUFDQSxJQUZELE1BRU8sSUFBSUcsTUFBTUMsT0FBTixDQUFjSixHQUFkLENBQUosRUFBd0I7QUFDOUJKLFlBQVFNLElBQVIsQ0FBYVAsV0FBV1UsS0FBWCxDQUFpQixJQUFqQixFQUF1QkwsR0FBdkIsQ0FBYjtBQUNBLElBRk0sTUFFQSxJQUFJQyxZQUFZLFFBQWhCLEVBQTBCO0FBQ2hDLFNBQUssSUFBSUssR0FBVCxJQUFnQk4sR0FBaEIsRUFBcUI7QUFDcEIsU0FBSVAsT0FBT2MsSUFBUCxDQUFZUCxHQUFaLEVBQWlCTSxHQUFqQixLQUF5Qk4sSUFBSU0sR0FBSixDQUE3QixFQUF1QztBQUN0Q1YsY0FBUU0sSUFBUixDQUFhSSxHQUFiO0FBQ0E7QUFDRDtBQUNEO0FBQ0Q7O0FBRUQsU0FBT1YsUUFBUVksSUFBUixDQUFhLEdBQWIsQ0FBUDtBQUNBOztBQUVELEtBQUksT0FBT0MsTUFBUCxLQUFrQixXQUFsQixJQUFpQ0EsT0FBT0MsT0FBNUMsRUFBcUQ7QUFDcERELFNBQU9DLE9BQVAsR0FBaUJmLFVBQWpCO0FBQ0EsRUFGRCxNQUVPLElBQUksT0FBT2dCLE1BQVAsS0FBa0IsVUFBbEIsSUFBZ0MsUUFBT0EsT0FBT0MsR0FBZCxNQUFzQixRQUF0RCxJQUFrRUQsT0FBT0MsR0FBN0UsRUFBa0Y7QUFDeEY7QUFDQUQsU0FBTyxZQUFQLEVBQXFCLEVBQXJCLEVBQXlCLFlBQVk7QUFDcEMsVUFBT2hCLFVBQVA7QUFDQSxHQUZEO0FBR0EsRUFMTSxNQUtBO0FBQ05rQixTQUFPbEIsVUFBUCxHQUFvQkEsVUFBcEI7QUFDQTtBQUNELENBeENBLEdBQUQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAgQ29weXJpZ2h0IChjKSAyMDE2IEplZCBXYXRzb24uXG4gIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXG4gIGh0dHA6Ly9qZWR3YXRzb24uZ2l0aHViLmlvL2NsYXNzbmFtZXNcbiovXG4vKiBnbG9iYWwgZGVmaW5lICovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgaGFzT3duID0ge30uaGFzT3duUHJvcGVydHk7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcyAoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpKSB7XG5cdFx0XHRcdGNsYXNzZXMucHVzaChjbGFzc05hbWVzLmFwcGx5KG51bGwsIGFyZykpO1xuXHRcdFx0fSBlbHNlIGlmIChhcmdUeXBlID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRmb3IgKHZhciBrZXkgaW4gYXJnKSB7XG5cdFx0XHRcdFx0aWYgKGhhc093bi5jYWxsKGFyZywga2V5KSAmJiBhcmdba2V5XSkge1xuXHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNsYXNzZXMuam9pbignICcpO1xuXHR9XG5cblx0aWYgKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\utils.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\utils.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n\n//\nexports.default = {\n  get: get,\n  set: set,\n  takeRight: takeRight,\n  last: last,\n  orderBy: orderBy,\n  range: range,\n  remove: remove,\n  clone: clone,\n  getFirstDefined: getFirstDefined,\n  sum: sum,\n  makeTemplateComponent: makeTemplateComponent,\n  groupBy: groupBy,\n  isArray: isArray,\n  splitProps: splitProps,\n  compactObject: compactObject,\n  isSortingDesc: isSortingDesc,\n  normalizeComponent: normalizeComponent,\n  asPx: asPx\n};\n\nfunction get(obj, path, def) {\n  if (!path) {\n    return obj;\n  }\n  var pathObj = makePathArray(path);\n  var val = void 0;\n  try {\n    val = pathObj.reduce(function (current, pathPart) {\n      return current[pathPart];\n    }, obj);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def;\n}\n\nfunction set() {\n  var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var path = arguments[1];\n  var value = arguments[2];\n\n  var keys = makePathArray(path);\n  var keyPart = void 0;\n  var cursor = obj;\n  while ((keyPart = keys.shift()) && keys.length) {\n    if (!cursor[keyPart]) {\n      cursor[keyPart] = {};\n    }\n    cursor = cursor[keyPart];\n  }\n  cursor[keyPart] = value;\n  return obj;\n}\n\nfunction takeRight(arr, n) {\n  var start = n > arr.length ? 0 : arr.length - n;\n  return arr.slice(start);\n}\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\n\nfunction range(n) {\n  var arr = [];\n  for (var i = 0; i < n; i += 1) {\n    arr.push(n);\n  }\n  return arr;\n}\n\nfunction orderBy(arr, funcs, dirs, indexKey) {\n  return arr.sort(function (rowA, rowB) {\n    for (var i = 0; i < funcs.length; i += 1) {\n      var comp = funcs[i];\n      var desc = dirs[i] === false || dirs[i] === 'desc';\n      var sortInt = comp(rowA, rowB);\n      if (sortInt) {\n        return desc ? -sortInt : sortInt;\n      }\n    }\n    // Use the row index for tie breakers\n    return dirs[0] ? rowA[indexKey] - rowB[indexKey] : rowB[indexKey] - rowA[indexKey];\n  });\n}\n\nfunction remove(a, b) {\n  return a.filter(function (o, i) {\n    var r = b(o);\n    if (r) {\n      a.splice(i, 1);\n      return true;\n    }\n    return false;\n  });\n}\n\nfunction clone(a) {\n  try {\n    return JSON.parse(JSON.stringify(a, function (key, value) {\n      if (typeof value === 'function') {\n        return value.toString();\n      }\n      return value;\n    }));\n  } catch (e) {\n    return a;\n  }\n}\n\nfunction getFirstDefined() {\n  for (var i = 0; i < arguments.length; i += 1) {\n    if (typeof (arguments.length <= i ? undefined : arguments[i]) !== 'undefined') {\n      return arguments.length <= i ? undefined : arguments[i];\n    }\n  }\n}\n\nfunction sum(arr) {\n  return arr.reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}\n\nfunction makeTemplateComponent(compClass, displayName) {\n  if (!displayName) {\n    throw new Error('No displayName found for template component:', compClass);\n  }\n  var cmp = function cmp(_ref) {\n    var children = _ref.children,\n        className = _ref.className,\n        rest = _objectWithoutProperties(_ref, ['children', 'className']);\n\n    return _react2.default.createElement('div', _extends({ className: (0, _classnames2.default)(compClass, className) }, rest), children);\n  };\n  cmp.displayName = displayName;\n  return cmp;\n}\n\nfunction groupBy(xs, key) {\n  return xs.reduce(function (rv, x, i) {\n    var resKey = typeof key === 'function' ? key(x, i) : x[key];\n    rv[resKey] = isArray(rv[resKey]) ? rv[resKey] : [];\n    rv[resKey].push(x);\n    return rv;\n  }, {});\n}\n\nfunction asPx(value) {\n  value = Number(value);\n  return Number.isNaN(value) ? null : value + 'px';\n}\n\nfunction isArray(a) {\n  return Array.isArray(a);\n}\n\n// ########################################################################\n// Non-exported Helpers\n// ########################################################################\n\nfunction makePathArray(obj) {\n  return flattenDeep(obj).join('.').replace(/\\[/g, '.').replace(/\\]/g, '').split('.');\n}\n\nfunction flattenDeep(arr) {\n  var newArr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!isArray(arr)) {\n    newArr.push(arr);\n  } else {\n    for (var i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr);\n    }\n  }\n  return newArr;\n}\n\nfunction splitProps(_ref2) {\n  var className = _ref2.className,\n      style = _ref2.style,\n      rest = _objectWithoutProperties(_ref2, ['className', 'style']);\n\n  return {\n    className: className,\n    style: style,\n    rest: rest || {}\n  };\n}\n\nfunction compactObject(obj) {\n  var newObj = {};\n  if (obj) {\n    Object.keys(obj).map(function (key) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) && obj[key] !== undefined && typeof obj[key] !== 'undefined') {\n        newObj[key] = obj[key];\n      }\n      return true;\n    });\n  }\n  return newObj;\n}\n\nfunction isSortingDesc(d) {\n  return !!(d.sort === 'desc' || d.desc === true || d.asc === false);\n}\n\nfunction normalizeComponent(Comp) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Comp;\n\n  return typeof Comp === 'function' ? Object.getPrototypeOf(Comp).isReactComponent ? _react2.default.createElement(Comp, params) : Comp(params) : fallback;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","classnames":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\classnames\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\polyfill.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\polyfill.js","source":"'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.values === 'function' ? Object.values : implementation;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbHlmaWxsLmpzIl0sIm5hbWVzIjpbImltcGxlbWVudGF0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRQb2x5ZmlsbCIsIk9iamVjdCIsInZhbHVlcyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsaUJBQWlCQyxRQUFRLGtCQUFSLENBQXJCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFdBQVQsR0FBdUI7QUFDdkMsUUFBTyxPQUFPQyxPQUFPQyxNQUFkLEtBQXlCLFVBQXpCLEdBQXNDRCxPQUFPQyxNQUE3QyxHQUFzRE4sY0FBN0Q7QUFDQSxDQUZEIiwiZmlsZSI6InBvbHlmaWxsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZ2V0UG9seWZpbGwoKSB7XG5cdHJldHVybiB0eXBlb2YgT2JqZWN0LnZhbHVlcyA9PT0gJ2Z1bmN0aW9uJyA/IE9iamVjdC52YWx1ZXMgOiBpbXBsZW1lbnRhdGlvbjtcbn07XG4iXX0=","deps":{"./implementation":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\implementation.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\polyfill.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\polyfill.js","source":"'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.entries === 'function' ? Object.entries : implementation;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbHlmaWxsLmpzIl0sIm5hbWVzIjpbImltcGxlbWVudGF0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZXRQb2x5ZmlsbCIsIk9iamVjdCIsImVudHJpZXMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLGlCQUFpQkMsUUFBUSxrQkFBUixDQUFyQjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULEdBQXVCO0FBQ3ZDLFFBQU8sT0FBT0MsT0FBT0MsT0FBZCxLQUEwQixVQUExQixHQUF1Q0QsT0FBT0MsT0FBOUMsR0FBd0ROLGNBQS9EO0FBQ0EsQ0FGRCIsImZpbGUiOiJwb2x5ZmlsbC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldFBvbHlmaWxsKCkge1xuXHRyZXR1cm4gdHlwZW9mIE9iamVjdC5lbnRyaWVzID09PSAnZnVuY3Rpb24nID8gT2JqZWN0LmVudHJpZXMgOiBpbXBsZW1lbnRhdGlvbjtcbn07XG4iXX0=","deps":{"./implementation":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\implementation.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\index.js","source":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _scrollMonitorEvents;\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n\nvar values = require('object.values');\nvar entries = require('object.entries');\n\nvar evalExpression = exports.evalExpression = function evalExpression(acc, expr, key, context) {\n  var e = void 0;\n  if (key && (key.match(/on[A-Z].*/) || key.match(/handle[A-Z].*/))) {\n    var setState = setState;\n    e = '\\n      (() => {\\n          ' + Object.keys(acc).filter(function (key) {\n      return expr.includes(key);\n    }).map(function (key) {\n      if (key === 'refs') {\n        // delete each ref's domNode property\n        // because it can't be serialized\n        values(acc[key]).forEach(function (v) {\n          delete v.domNode;\n        });\n        // add `refs` const object graph to function scope\n        return 'var ' + key + ' = JSON.parse(\\'' + JSON.stringify(acc[key]) + '\\')';\n      }\n      return 'var ' + key + ' = ' + JSON.stringify(acc[key]) + ';';\n    }).join('\\n') + '\\n          ' + expr + ';\\n          context.update({ ' + Object.keys(acc).filter(function (key) {\n      return expr.includes(key) && key !== 'refs';\n    }).map(function (key) {\n      return key + ': ' + key;\n    }).join(', ') + '});\\n      })()\\n    ';\n\n    return function () {\n      eval(e);\n    }.bind(context || {});\n  } else {\n    e = '\\n      (() => {\\n        ' + Object.keys(acc).filter(function (key) {\n      return expr.includes(key);\n    }).map(function (key) {\n      if (key === 'refs') {\n        // delete each ref's domNode property\n        // because it can't be serialized\n        values(acc[key]).forEach(function (v) {\n          delete v.domNode;\n        });\n        // add `refs` const object graph to function scope\n        return 'var ' + key + ' = JSON.parse(\\'' + JSON.stringify(acc[key]) + '\\')';\n      }\n      return 'var ' + key + ' = ' + JSON.stringify(acc[key]) + ';';\n    }).join('\\n') + '\\n        return ' + expr + ';\\n      })()\\n    ';\n  }\n\n  try {\n    return eval(e);\n  } catch (err) {}\n};\n\nvar getVars = exports.getVars = function getVars(arr) {\n  var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var evalContext = arguments[2];\n\n  var pluck = function pluck(acc, val) {\n    var variableType = val[0],\n        _val$ = val[1],\n        attrs = _val$ === undefined ? [] : _val$;\n    var nameArr = attrs[0],\n        valueArr = attrs[1];\n\n    if (!nameArr || !valueArr) return acc;\n\n    var _nameArr$ = nameArr[1],\n        nameValue = _nameArr$[1];\n    var _valueArr$ = valueArr[1],\n        valueType = _valueArr$[0],\n        valueValue = _valueArr$[1];\n\n    switch (valueType) {\n      case 'value':\n        acc[nameValue] = valueValue;\n        break;\n      case 'variable':\n        if (context.hasOwnProperty(valueValue)) {\n          acc[nameValue] = context[valueValue];\n        } else {\n          acc[nameValue] = evalExpression(context, expr);\n        }\n        break;\n      case 'expression':\n        var expr = valueValue;\n        if (variableType === 'var') {\n          acc[nameValue] = evalExpression(context, expr);\n        } else {\n          acc[nameValue] = {\n            value: evalExpression(context, expr),\n            update: function update(newState, oldState) {\n              return evalExpression(Object.assign({}, oldState, newState), expr);\n            }\n          };\n        }\n    }\n\n    return acc;\n  };\n\n  return arr.reduce(pluck, {});\n};\n\nvar getData = exports.getData = function getData(arr) {\n  var datasets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var pluck = function pluck(acc, val) {\n    var attrs = val[1];\n    var nameArr = attrs[0];\n    var _nameArr$2 = nameArr[1],\n        nameValue = _nameArr$2[1];\n\n    acc[nameValue] = datasets[nameValue];\n\n    return acc;\n  };\n\n  return arr.reduce(pluck, {});\n};\n\nvar splitAST = exports.splitAST = function splitAST(ast) {\n  var state = {\n    vars: [],\n    derived: [],\n    data: [],\n    elements: []\n  };\n\n  var handleNode = function handleNode(storeElements) {\n    return function (node) {\n      var name = node[0],\n          props = node[1],\n          children = node[2];\n\n      if (name === 'var') {\n        state.vars.push(node);\n      } else if (state[name]) {\n        state[name].push(node);\n      } else if (storeElements) {\n        state.elements.push(node);\n      }\n      if (!children || typeof children === 'string') {\n        return;\n      }\n      children.forEach(handleNode(false));\n    };\n  };\n\n  ast.forEach(handleNode(true));\n  return state;\n};\n\nvar hooks = exports.hooks = ['onEnterView', 'onEnterViewFully', 'onExitView', 'onExitViewFully'];\n\nvar scrollMonitorEvents = exports.scrollMonitorEvents = (_scrollMonitorEvents = {\n  'onEnterView': 'enterViewport',\n  'onExitViewFully': 'fullyEnterViewport',\n  'onExitView': 'partiallyExitViewport'\n}, _scrollMonitorEvents['onExitViewFully'] = 'exitViewport', _scrollMonitorEvents);\n\nvar translate = exports.translate = function translate(arr) {\n  var attrConvert = function attrConvert(list) {\n    return list.reduce(function (acc, _ref) {\n      var name = _ref[0],\n          _ref$ = _ref[1],\n          type = _ref$[0],\n          val = _ref$[1];\n\n      if (type === 'variable') {\n        acc.__vars__ = acc.__vars__ || {};\n        acc.__vars__[name] = val;\n      }\n      // each node keeps a list of props that are expressions\n      if (type === 'expression') {\n        acc.__expr__ = acc.__expr__ || {};\n        acc.__expr__[name] = val;\n      }\n      // flag nodes that define a hook function\n      if (hooks.includes(name)) {\n        acc.hasHook = true;\n      };\n\n      acc[name] = val;\n      return acc;\n    }, {});\n  };\n\n  var tNode = function tNode(node) {\n    if (typeof node === 'string') return node;\n\n    if (node.length === 3) {\n      var name = node[0],\n          attrs = node[1],\n          children = node[2];\n\n      return _extends({\n        component: name\n      }, attrConvert(attrs), {\n        children: children.map(tNode)\n      });\n    }\n  };\n\n  return splitAST(arr).elements.map(tNode);\n};\n\nvar mapTree = exports.mapTree = function mapTree(tree, mapFn) {\n  var filterFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return true;\n  };\n\n  var walkFn = function walkFn(acc, node) {\n    if (typeof node !== 'string') {\n      if (node.children) {\n        // translated schema\n        node.children = node.children.reduce(walkFn, []);\n      } else {\n        // compiler AST\n        node[2] = node[2].reduce(walkFn, []);\n      }\n    }\n\n    if (filterFn(node)) acc.push(mapFn(node));\n    return acc;\n  };\n\n  return tree.reduce(walkFn, []);\n};\n\nvar filterASTForDocument = exports.filterASTForDocument = function filterASTForDocument(ast) {\n  return mapTree(ast, function (n) {\n    return n;\n  }, function (_ref2) {\n    var name = _ref2[0];\n    return name !== 'meta';\n  });\n};\n\nvar findWrapTargets = function findWrapTargets(schema, state) {\n  var targets = [];\n  var stateKeys = Object.keys(state);\n\n  // always return node so we can walk the whole tree\n  // but collect and ultimately return just the nodes\n  // we are interested in wrapping\n  mapTree(schema, function (node) {\n    if (typeof node === 'string') return node;\n\n    if (node.hasHook) {\n      targets.push(node);\n      return node;\n    }\n\n    // wrap all custom components\n    var startsWith = node.component.charAt(0);\n    if (startsWith === startsWith.toUpperCase()) {\n      targets.push(node);\n      return node;\n    }\n\n    // pull off the props we don't need to check\n\n    var component = node.component,\n        children = node.children,\n        __vars__ = node.__vars__,\n        __expr__ = node.__expr__,\n        props = _objectWithoutProperties(node, ['component', 'children', '__vars__', '__expr__']);\n\n    var expressions = Object.keys(__expr__ || {});\n    var variables = Object.keys(__vars__ || {});\n\n    // iterate over the node's prop values\n    entries(props).forEach(function (_ref3) {\n      var key = _ref3[0],\n          val = _ref3[1];\n\n      // avoid checking more props if we know it's a match\n      if (targets.includes(node)) return;\n\n      // Include nodes that reference a variable or expression.\n      if (variables.includes(key) || expressions.includes(key)) {\n        targets.push(node);\n      }\n    });\n\n    return node;\n  });\n\n  return targets;\n};\nexports.findWrapTargets = findWrapTargets;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"object.values":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\index.js","object.entries":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\pagination.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\pagination.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\n//\n// import _ from './utils'\n\nvar defaultButton = function defaultButton(props) {\n  return _react2.default.createElement('button', _extends({ type: 'button' }, props, { className: '-btn' }), props.children);\n};\n\nvar ReactTablePagination = function (_Component) {\n  _inherits(ReactTablePagination, _Component);\n\n  function ReactTablePagination(props) {\n    _classCallCheck(this, ReactTablePagination);\n\n    var _this = _possibleConstructorReturn(this, (ReactTablePagination.__proto__ || Object.getPrototypeOf(ReactTablePagination)).call(this));\n\n    _this.getSafePage = _this.getSafePage.bind(_this);\n    _this.changePage = _this.changePage.bind(_this);\n    _this.applyPage = _this.applyPage.bind(_this);\n\n    _this.state = {\n      page: props.page\n    };\n    return _this;\n  }\n\n  _createClass(ReactTablePagination, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({ page: nextProps.page });\n    }\n  }, {\n    key: 'getSafePage',\n    value: function getSafePage(page) {\n      if (isNaN(page)) {\n        page = this.props.page;\n      }\n      return Math.min(Math.max(page, 0), this.props.pages - 1);\n    }\n  }, {\n    key: 'changePage',\n    value: function changePage(page) {\n      page = this.getSafePage(page);\n      this.setState({ page: page });\n      if (this.props.page !== page) {\n        this.props.onPageChange(page);\n      }\n    }\n  }, {\n    key: 'applyPage',\n    value: function applyPage(e) {\n      if (e) {\n        e.preventDefault();\n      }\n      var page = this.state.page;\n      this.changePage(page === '' ? this.props.page : page);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          pages = _props.pages,\n          page = _props.page,\n          showPageSizeOptions = _props.showPageSizeOptions,\n          pageSizeOptions = _props.pageSizeOptions,\n          pageSize = _props.pageSize,\n          showPageJump = _props.showPageJump,\n          canPrevious = _props.canPrevious,\n          canNext = _props.canNext,\n          onPageSizeChange = _props.onPageSizeChange,\n          className = _props.className,\n          _props$PreviousCompon = _props.PreviousComponent,\n          PreviousComponent = _props$PreviousCompon === undefined ? defaultButton : _props$PreviousCompon,\n          _props$NextComponent = _props.NextComponent,\n          NextComponent = _props$NextComponent === undefined ? defaultButton : _props$NextComponent;\n\n      return _react2.default.createElement('div', {\n        className: (0, _classnames2.default)(className, '-pagination'),\n        style: this.props.paginationStyle\n      }, _react2.default.createElement('div', { className: '-previous' }, _react2.default.createElement(PreviousComponent, {\n        onClick: function onClick() {\n          if (!canPrevious) return;\n          _this2.changePage(page - 1);\n        },\n        disabled: !canPrevious\n      }, this.props.previousText)), _react2.default.createElement('div', { className: '-center' }, _react2.default.createElement('span', { className: '-pageInfo' }, this.props.pageText, ' ', showPageJump ? _react2.default.createElement('div', { className: '-pageJump' }, _react2.default.createElement('input', {\n        type: this.state.page === '' ? 'text' : 'number',\n        onChange: function onChange(e) {\n          var val = e.target.value;\n          var page = val - 1;\n          if (val === '') {\n            return _this2.setState({ page: val });\n          }\n          _this2.setState({ page: _this2.getSafePage(page) });\n        },\n        value: this.state.page === '' ? '' : this.state.page + 1,\n        onBlur: this.applyPage,\n        onKeyPress: function onKeyPress(e) {\n          if (e.which === 13 || e.keyCode === 13) {\n            _this2.applyPage();\n          }\n        }\n      })) : _react2.default.createElement('span', { className: '-currentPage' }, page + 1), ' ', this.props.ofText, ' ', _react2.default.createElement('span', { className: '-totalPages' }, pages || 1)), showPageSizeOptions && _react2.default.createElement('span', { className: 'select-wrap -pageSizeOptions' }, _react2.default.createElement('select', {\n        onChange: function onChange(e) {\n          return onPageSizeChange(Number(e.target.value));\n        },\n        value: pageSize\n      }, pageSizeOptions.map(function (option, i) {\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          _react2.default.createElement('option', { key: i, value: option }, option, ' ', _this2.props.rowsText)\n        );\n      })))), _react2.default.createElement('div', { className: '-next' }, _react2.default.createElement(NextComponent, {\n        onClick: function onClick() {\n          if (!canNext) return;\n          _this2.changePage(page + 1);\n        },\n        disabled: !canNext\n      }, this.props.nextText)));\n    }\n  }]);\n\n  return ReactTablePagination;\n}(_react.Component);\n\nexports.default = ReactTablePagination;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","classnames":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\classnames\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\defaultProps.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\defaultProps.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _pagination = require('./pagination');\n\nvar _pagination2 = _interopRequireDefault(_pagination);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n//\n\n\nvar emptyObj = function emptyObj() {\n  return {};\n};\n\nexports.default = {\n  // General\n  data: [],\n  loading: false,\n  showPagination: true,\n  showPaginationTop: false,\n  showPaginationBottom: true,\n  showPageSizeOptions: true,\n  pageSizeOptions: [5, 10, 20, 25, 50, 100],\n  defaultPageSize: 20,\n  showPageJump: true,\n  collapseOnSortingChange: true,\n  collapseOnPageChange: true,\n  collapseOnDataChange: true,\n  freezeWhenExpanded: false,\n  sortable: true,\n  multiSort: true,\n  resizable: true,\n  filterable: false,\n  defaultSortDesc: false,\n  defaultSorted: [],\n  defaultFiltered: [],\n  defaultResized: [],\n  defaultExpanded: {},\n  // eslint-disable-next-line no-unused-vars\n  defaultFilterMethod: function defaultFilterMethod(filter, row, column) {\n    var id = filter.pivotId || filter.id;\n    return row[id] !== undefined ? String(row[id]).startsWith(filter.value) : true;\n  },\n  // eslint-disable-next-line no-unused-vars\n  defaultSortMethod: function defaultSortMethod(a, b, desc) {\n    // force null and undefined to the bottom\n    a = a === null || a === undefined ? '' : a;\n    b = b === null || b === undefined ? '' : b;\n    // force any string values to lowercase\n    a = typeof a === 'string' ? a.toLowerCase() : a;\n    b = typeof b === 'string' ? b.toLowerCase() : b;\n    // Return either 1 or -1 to indicate a sort priority\n    if (a > b) {\n      return 1;\n    }\n    if (a < b) {\n      return -1;\n    }\n    // returning 0, undefined or any falsey value will use subsequent sorts or\n    // the index as a tiebreaker\n    return 0;\n  },\n\n  // Controlled State Props\n  // page: undefined,\n  // pageSize: undefined,\n  // sorted: [],\n  // filtered: [],\n  // resized: [],\n  // expanded: {},\n\n  // Controlled State Callbacks\n  onPageChange: undefined,\n  onPageSizeChange: undefined,\n  onSortedChange: undefined,\n  onFilteredChange: undefined,\n  onResizedChange: undefined,\n  onExpandedChange: undefined,\n\n  // Pivoting\n  pivotBy: undefined,\n\n  // Key Constants\n  pivotValKey: '_pivotVal',\n  pivotIDKey: '_pivotID',\n  subRowsKey: '_subRows',\n  aggregatedKey: '_aggregated',\n  nestingLevelKey: '_nestingLevel',\n  originalKey: '_original',\n  indexKey: '_index',\n  groupedByPivotKey: '_groupedByPivot',\n\n  // Server-side Callbacks\n  onFetchData: function onFetchData() {\n    return null;\n  },\n\n  // Classes\n  className: '',\n  style: {},\n\n  // Component decorators\n  getProps: emptyObj,\n  getTableProps: emptyObj,\n  getTheadGroupProps: emptyObj,\n  getTheadGroupTrProps: emptyObj,\n  getTheadGroupThProps: emptyObj,\n  getTheadProps: emptyObj,\n  getTheadTrProps: emptyObj,\n  getTheadThProps: emptyObj,\n  getTheadFilterProps: emptyObj,\n  getTheadFilterTrProps: emptyObj,\n  getTheadFilterThProps: emptyObj,\n  getTbodyProps: emptyObj,\n  getTrGroupProps: emptyObj,\n  getTrProps: emptyObj,\n  getTdProps: emptyObj,\n  getTfootProps: emptyObj,\n  getTfootTrProps: emptyObj,\n  getTfootTdProps: emptyObj,\n  getPaginationProps: emptyObj,\n  getLoadingProps: emptyObj,\n  getNoDataProps: emptyObj,\n  getResizerProps: emptyObj,\n\n  // Global Column Defaults\n  column: {\n    // Renderers\n    Cell: undefined,\n    Header: undefined,\n    Footer: undefined,\n    Aggregated: undefined,\n    Pivot: undefined,\n    PivotValue: undefined,\n    Expander: undefined,\n    Filter: undefined,\n    // All Columns\n    sortable: undefined, // use table default\n    resizable: undefined, // use table default\n    filterable: undefined, // use table default\n    show: true,\n    minWidth: 100,\n    // Cells only\n    className: '',\n    style: {},\n    getProps: emptyObj,\n    // Pivot only\n    aggregate: undefined,\n    // Headers only\n    headerClassName: '',\n    headerStyle: {},\n    getHeaderProps: emptyObj,\n    // Footers only\n    footerClassName: '',\n    footerStyle: {},\n    getFooterProps: emptyObj,\n    filterMethod: undefined,\n    filterAll: false,\n    sortMethod: undefined\n  },\n\n  // Global Expander Column Defaults\n  expanderDefaults: {\n    sortable: false,\n    resizable: false,\n    filterable: false,\n    width: 35\n  },\n\n  pivotDefaults: {\n    // extend the defaults for pivoted columns here\n  },\n\n  // Text\n  previousText: 'Previous',\n  nextText: 'Next',\n  loadingText: 'Loading...',\n  noDataText: 'No rows found',\n  pageText: 'Page',\n  ofText: 'of',\n  rowsText: 'rows',\n\n  // Components\n  TableComponent: _utils2.default.makeTemplateComponent('rt-table', 'Table'),\n  TheadComponent: _utils2.default.makeTemplateComponent('rt-thead', 'Thead'),\n  TbodyComponent: _utils2.default.makeTemplateComponent('rt-tbody', 'Tbody'),\n  TrGroupComponent: _utils2.default.makeTemplateComponent('rt-tr-group', 'TrGroup'),\n  TrComponent: _utils2.default.makeTemplateComponent('rt-tr', 'Tr'),\n  ThComponent: function ThComponent(_ref) {\n    var toggleSort = _ref.toggleSort,\n        className = _ref.className,\n        children = _ref.children,\n        rest = _objectWithoutProperties(_ref, ['toggleSort', 'className', 'children']);\n\n    return _react2.default.createElement('div', _extends({\n      className: (0, _classnames2.default)('rt-th', className),\n      onClick: function onClick(e) {\n        return toggleSort && toggleSort(e);\n      },\n      role: 'heading'\n    }, rest), children);\n  },\n  TdComponent: _utils2.default.makeTemplateComponent('rt-td', 'Td'),\n  TfootComponent: _utils2.default.makeTemplateComponent('rt-tfoot', 'Tfoot'),\n  FilterComponent: function FilterComponent(_ref2) {\n    var filter = _ref2.filter,\n        _onChange = _ref2.onChange;\n    return _react2.default.createElement('input', {\n      type: 'text',\n      style: {\n        width: '100%'\n      },\n      value: filter ? filter.value : '',\n      onChange: function onChange(event) {\n        return _onChange(event.target.value);\n      }\n    });\n  },\n  ExpanderComponent: function ExpanderComponent(_ref3) {\n    var isExpanded = _ref3.isExpanded;\n    return _react2.default.createElement('div', { className: (0, _classnames2.default)('rt-expander', isExpanded && '-open') }, '\\u2022');\n  },\n  PivotValueComponent: function PivotValueComponent(_ref4) {\n    var subRows = _ref4.subRows,\n        value = _ref4.value;\n    return _react2.default.createElement('span', null, value, ' ', subRows && '(' + subRows.length + ')');\n  },\n  AggregatedComponent: function AggregatedComponent(_ref5) {\n    var subRows = _ref5.subRows,\n        column = _ref5.column;\n\n    var previewValues = subRows.filter(function (d) {\n      return typeof d[column.id] !== 'undefined';\n    }).map(function (row, i) {\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        _react2.default.createElement('span', { key: i }, row[column.id], i < subRows.length - 1 ? ', ' : '')\n      );\n    });\n    return _react2.default.createElement('span', null, previewValues);\n  },\n  PivotComponent: undefined, // this is a computed default generated using\n  // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n  PaginationComponent: _pagination2.default,\n  PreviousComponent: undefined,\n  NextComponent: undefined,\n  LoadingComponent: function LoadingComponent(_ref6) {\n    var className = _ref6.className,\n        loading = _ref6.loading,\n        loadingText = _ref6.loadingText,\n        rest = _objectWithoutProperties(_ref6, ['className', 'loading', 'loadingText']);\n\n    return _react2.default.createElement('div', _extends({\n      className: (0, _classnames2.default)('-loading', { '-active': loading }, className)\n    }, rest), _react2.default.createElement('div', { className: '-loading-inner' }, loadingText));\n  },\n  NoDataComponent: _utils2.default.makeTemplateComponent('rt-noData', 'NoData'),\n  ResizerComponent: _utils2.default.makeTemplateComponent('rt-resizer', 'Resizer'),\n  PadRowComponent: function PadRowComponent() {\n    return _react2.default.createElement('span', null, '\\xA0');\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","./utils":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\utils.js","classnames":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\classnames\\index.js","./pagination":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\pagination.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom-factories\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom-factories\\index.js","source":"(function (global){\n'use strict';\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (f) {\n  if ((typeof exports === 'undefined' ? 'undefined' : _typeof(exports)) === 'object' && typeof module !== 'undefined') {\n    module.exports = f(require('react'));\n    /* global define */\n  } else if (typeof define === 'function' && define.amd) {\n    define(['react'], f);\n  } else {\n    var g;\n    if (typeof window !== 'undefined') {\n      g = window;\n    } else if (typeof global !== 'undefined') {\n      g = global;\n    } else if (typeof self !== 'undefined') {\n      g = self;\n    } else {\n      g = this;\n    }\n\n    if (typeof g.React === 'undefined') {\n      throw Error('React module should be required before ReactDOMFactories');\n    }\n\n    g.ReactDOMFactories = f(g.React);\n  }\n})(function (React) {\n  /**\n   * Create a factory that creates HTML tag elements.\n   */\n  function createDOMFactory(type) {\n    var factory = React.createElement.bind(null, type);\n    // Expose the type on the factory and the prototype so that it can be\n    // easily accessed on elements. E.g. `<Foo />.type === Foo`.\n    // This should not be named `constructor` since this may not be the function\n    // that created the element, and it may not even be a constructor.\n    factory.type = type;\n    return factory;\n  };\n\n  /**\n   * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.\n   */\n  var ReactDOMFactories = {\n    a: createDOMFactory('a'),\n    abbr: createDOMFactory('abbr'),\n    address: createDOMFactory('address'),\n    area: createDOMFactory('area'),\n    article: createDOMFactory('article'),\n    aside: createDOMFactory('aside'),\n    audio: createDOMFactory('audio'),\n    b: createDOMFactory('b'),\n    base: createDOMFactory('base'),\n    bdi: createDOMFactory('bdi'),\n    bdo: createDOMFactory('bdo'),\n    big: createDOMFactory('big'),\n    blockquote: createDOMFactory('blockquote'),\n    body: createDOMFactory('body'),\n    br: createDOMFactory('br'),\n    button: createDOMFactory('button'),\n    canvas: createDOMFactory('canvas'),\n    caption: createDOMFactory('caption'),\n    cite: createDOMFactory('cite'),\n    code: createDOMFactory('code'),\n    col: createDOMFactory('col'),\n    colgroup: createDOMFactory('colgroup'),\n    data: createDOMFactory('data'),\n    datalist: createDOMFactory('datalist'),\n    dd: createDOMFactory('dd'),\n    del: createDOMFactory('del'),\n    details: createDOMFactory('details'),\n    dfn: createDOMFactory('dfn'),\n    dialog: createDOMFactory('dialog'),\n    div: createDOMFactory('div'),\n    dl: createDOMFactory('dl'),\n    dt: createDOMFactory('dt'),\n    em: createDOMFactory('em'),\n    embed: createDOMFactory('embed'),\n    fieldset: createDOMFactory('fieldset'),\n    figcaption: createDOMFactory('figcaption'),\n    figure: createDOMFactory('figure'),\n    footer: createDOMFactory('footer'),\n    form: createDOMFactory('form'),\n    h1: createDOMFactory('h1'),\n    h2: createDOMFactory('h2'),\n    h3: createDOMFactory('h3'),\n    h4: createDOMFactory('h4'),\n    h5: createDOMFactory('h5'),\n    h6: createDOMFactory('h6'),\n    head: createDOMFactory('head'),\n    header: createDOMFactory('header'),\n    hgroup: createDOMFactory('hgroup'),\n    hr: createDOMFactory('hr'),\n    html: createDOMFactory('html'),\n    i: createDOMFactory('i'),\n    iframe: createDOMFactory('iframe'),\n    img: createDOMFactory('img'),\n    input: createDOMFactory('input'),\n    ins: createDOMFactory('ins'),\n    kbd: createDOMFactory('kbd'),\n    keygen: createDOMFactory('keygen'),\n    label: createDOMFactory('label'),\n    legend: createDOMFactory('legend'),\n    li: createDOMFactory('li'),\n    link: createDOMFactory('link'),\n    main: createDOMFactory('main'),\n    map: createDOMFactory('map'),\n    mark: createDOMFactory('mark'),\n    menu: createDOMFactory('menu'),\n    menuitem: createDOMFactory('menuitem'),\n    meta: createDOMFactory('meta'),\n    meter: createDOMFactory('meter'),\n    nav: createDOMFactory('nav'),\n    noscript: createDOMFactory('noscript'),\n    object: createDOMFactory('object'),\n    ol: createDOMFactory('ol'),\n    optgroup: createDOMFactory('optgroup'),\n    option: createDOMFactory('option'),\n    output: createDOMFactory('output'),\n    p: createDOMFactory('p'),\n    param: createDOMFactory('param'),\n    picture: createDOMFactory('picture'),\n    pre: createDOMFactory('pre'),\n    progress: createDOMFactory('progress'),\n    q: createDOMFactory('q'),\n    rp: createDOMFactory('rp'),\n    rt: createDOMFactory('rt'),\n    ruby: createDOMFactory('ruby'),\n    s: createDOMFactory('s'),\n    samp: createDOMFactory('samp'),\n    script: createDOMFactory('script'),\n    section: createDOMFactory('section'),\n    select: createDOMFactory('select'),\n    small: createDOMFactory('small'),\n    source: createDOMFactory('source'),\n    span: createDOMFactory('span'),\n    strong: createDOMFactory('strong'),\n    style: createDOMFactory('style'),\n    sub: createDOMFactory('sub'),\n    summary: createDOMFactory('summary'),\n    sup: createDOMFactory('sup'),\n    table: createDOMFactory('table'),\n    tbody: createDOMFactory('tbody'),\n    td: createDOMFactory('td'),\n    textarea: createDOMFactory('textarea'),\n    tfoot: createDOMFactory('tfoot'),\n    th: createDOMFactory('th'),\n    thead: createDOMFactory('thead'),\n    time: createDOMFactory('time'),\n    title: createDOMFactory('title'),\n    tr: createDOMFactory('tr'),\n    track: createDOMFactory('track'),\n    u: createDOMFactory('u'),\n    ul: createDOMFactory('ul'),\n    var: createDOMFactory('var'),\n    video: createDOMFactory('video'),\n    wbr: createDOMFactory('wbr'),\n\n    // SVG\n    circle: createDOMFactory('circle'),\n    clipPath: createDOMFactory('clipPath'),\n    defs: createDOMFactory('defs'),\n    ellipse: createDOMFactory('ellipse'),\n    g: createDOMFactory('g'),\n    image: createDOMFactory('image'),\n    line: createDOMFactory('line'),\n    linearGradient: createDOMFactory('linearGradient'),\n    mask: createDOMFactory('mask'),\n    path: createDOMFactory('path'),\n    pattern: createDOMFactory('pattern'),\n    polygon: createDOMFactory('polygon'),\n    polyline: createDOMFactory('polyline'),\n    radialGradient: createDOMFactory('radialGradient'),\n    rect: createDOMFactory('rect'),\n    stop: createDOMFactory('stop'),\n    svg: createDOMFactory('svg'),\n    text: createDOMFactory('text'),\n    tspan: createDOMFactory('tspan')\n  };\n\n  // due to wrapper and conditionals at the top, this will either become\n  // `module.exports ReactDOMFactories` if that is available,\n  // otherwise it will be defined via `define(['react'], ReactDOMFactories)`\n  // if that is available,\n  // otherwise it will be defined as global variable.\n  return ReactDOMFactories;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\shim.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\shim.js","source":"'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimValues() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { values: polyfill }, {\n\t\tvalues: function testValues() {\n\t\t\treturn Object.values !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoaW0uanMiXSwibmFtZXMiOlsiZ2V0UG9seWZpbGwiLCJyZXF1aXJlIiwiZGVmaW5lIiwibW9kdWxlIiwiZXhwb3J0cyIsInNoaW1WYWx1ZXMiLCJwb2x5ZmlsbCIsIk9iamVjdCIsInZhbHVlcyIsInRlc3RWYWx1ZXMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLGNBQWNDLFFBQVEsWUFBUixDQUFsQjtBQUNBLElBQUlDLFNBQVNELFFBQVEsbUJBQVIsQ0FBYjs7QUFFQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxVQUFULEdBQXNCO0FBQ3RDLEtBQUlDLFdBQVdOLGFBQWY7QUFDQUUsUUFBT0ssTUFBUCxFQUFlLEVBQUVDLFFBQVFGLFFBQVYsRUFBZixFQUFxQztBQUNwQ0UsVUFBUSxTQUFTQyxVQUFULEdBQXNCO0FBQzdCLFVBQU9GLE9BQU9DLE1BQVAsS0FBa0JGLFFBQXpCO0FBQ0E7QUFIbUMsRUFBckM7QUFLQSxRQUFPQSxRQUFQO0FBQ0EsQ0FSRCIsImZpbGUiOiJzaGltLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZ2V0UG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG52YXIgZGVmaW5lID0gcmVxdWlyZSgnZGVmaW5lLXByb3BlcnRpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaGltVmFsdWVzKCkge1xuXHR2YXIgcG9seWZpbGwgPSBnZXRQb2x5ZmlsbCgpO1xuXHRkZWZpbmUoT2JqZWN0LCB7IHZhbHVlczogcG9seWZpbGwgfSwge1xuXHRcdHZhbHVlczogZnVuY3Rpb24gdGVzdFZhbHVlcygpIHtcblx0XHRcdHJldHVybiBPYmplY3QudmFsdWVzICE9PSBwb2x5ZmlsbDtcblx0XHR9XG5cdH0pO1xuXHRyZXR1cm4gcG9seWZpbGw7XG59O1xuIl19","deps":{"./polyfill":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\polyfill.js","define-properties":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\define-properties\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\shim.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\shim.js","source":"'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimEntries() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { entries: polyfill }, {\n\t\tentries: function testEntries() {\n\t\t\treturn Object.entries !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoaW0uanMiXSwibmFtZXMiOlsiZ2V0UG9seWZpbGwiLCJyZXF1aXJlIiwiZGVmaW5lIiwibW9kdWxlIiwiZXhwb3J0cyIsInNoaW1FbnRyaWVzIiwicG9seWZpbGwiLCJPYmplY3QiLCJlbnRyaWVzIiwidGVzdEVudHJpZXMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLGNBQWNDLFFBQVEsWUFBUixDQUFsQjtBQUNBLElBQUlDLFNBQVNELFFBQVEsbUJBQVIsQ0FBYjs7QUFFQUUsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULEdBQXVCO0FBQ3ZDLEtBQUlDLFdBQVdOLGFBQWY7QUFDQUUsUUFBT0ssTUFBUCxFQUFlLEVBQUVDLFNBQVNGLFFBQVgsRUFBZixFQUFzQztBQUNyQ0UsV0FBUyxTQUFTQyxXQUFULEdBQXVCO0FBQy9CLFVBQU9GLE9BQU9DLE9BQVAsS0FBbUJGLFFBQTFCO0FBQ0E7QUFIb0MsRUFBdEM7QUFLQSxRQUFPQSxRQUFQO0FBQ0EsQ0FSRCIsImZpbGUiOiJzaGltLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZ2V0UG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG52YXIgZGVmaW5lID0gcmVxdWlyZSgnZGVmaW5lLXByb3BlcnRpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaGltRW50cmllcygpIHtcblx0dmFyIHBvbHlmaWxsID0gZ2V0UG9seWZpbGwoKTtcblx0ZGVmaW5lKE9iamVjdCwgeyBlbnRyaWVzOiBwb2x5ZmlsbCB9LCB7XG5cdFx0ZW50cmllczogZnVuY3Rpb24gdGVzdEVudHJpZXMoKSB7XG5cdFx0XHRyZXR1cm4gT2JqZWN0LmVudHJpZXMgIT09IHBvbHlmaWxsO1xuXHRcdH1cblx0fSk7XG5cdHJldHVybiBwb2x5ZmlsbDtcbn07XG4iXX0=","deps":{"./polyfill":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\polyfill.js","define-properties":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\define-properties\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js","source":"'use strict';\n\n/**\n * Special language-specific overrides.\n *\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n *\n * @type {Object}\n */\nvar LANGUAGES = {\n  tr: {\n    regexp: /[\\u0069]/g,\n    map: {\n      'i': '\\u0130'\n    }\n  },\n  az: {\n    regexp: /[\\u0069]/g,\n    map: {\n      'i': '\\u0130'\n    }\n  },\n  lt: {\n    regexp: /[\\u0069\\u006A\\u012F]\\u0307|\\u0069\\u0307[\\u0300\\u0301\\u0303]/g,\n    map: {\n      'i\\u0307': 'I',\n      'j\\u0307': 'J',\n      '\\u012F\\u0307': '\\u012E',\n      'i\\u0307\\u0300': '\\xCC',\n      'i\\u0307\\u0301': '\\xCD',\n      'i\\u0307\\u0303': '\\u0128'\n    }\n  }\n\n  /**\n   * Upper case a string.\n   *\n   * @param  {String} str\n   * @return {String}\n   */\n};module.exports = function (str, locale) {\n  var lang = LANGUAGES[locale];\n\n  str = str == null ? '' : String(str);\n\n  if (lang) {\n    str = str.replace(lang.regexp, function (m) {\n      return lang.map[m];\n    });\n  }\n\n  return str.toUpperCase();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwcGVyLWNhc2UuanMiXSwibmFtZXMiOlsiTEFOR1VBR0VTIiwidHIiLCJyZWdleHAiLCJtYXAiLCJheiIsImx0IiwibW9kdWxlIiwiZXhwb3J0cyIsInN0ciIsImxvY2FsZSIsImxhbmciLCJTdHJpbmciLCJyZXBsYWNlIiwibSIsInRvVXBwZXJDYXNlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBT0EsSUFBSUEsWUFBWTtBQUNkQyxNQUFJO0FBQ0ZDLFlBQVEsV0FETjtBQUVGQyxTQUFLO0FBQ0gsV0FBVTtBQURQO0FBRkgsR0FEVTtBQU9kQyxNQUFJO0FBQ0ZGLFlBQVEsV0FETjtBQUVGQyxTQUFLO0FBQ0gsV0FBVTtBQURQO0FBRkgsR0FQVTtBQWFkRSxNQUFJO0FBQ0ZILFlBQVEsOERBRE47QUFFRkMsU0FBSztBQUNILGlCQUFnQixHQURiO0FBRUgsaUJBQWdCLEdBRmI7QUFHSCxzQkFBZ0IsUUFIYjtBQUlILHVCQUFzQixNQUpuQjtBQUtILHVCQUFzQixNQUxuQjtBQU1ILHVCQUFzQjtBQU5uQjtBQUZIOztBQWFOOzs7Ozs7QUExQmdCLENBQWhCLENBZ0NBRyxPQUFPQyxPQUFQLEdBQWlCLFVBQVVDLEdBQVYsRUFBZUMsTUFBZixFQUF1QjtBQUN0QyxNQUFJQyxPQUFPVixVQUFVUyxNQUFWLENBQVg7O0FBRUFELFFBQU1BLE9BQU8sSUFBUCxHQUFjLEVBQWQsR0FBbUJHLE9BQU9ILEdBQVAsQ0FBekI7O0FBRUEsTUFBSUUsSUFBSixFQUFVO0FBQ1JGLFVBQU1BLElBQUlJLE9BQUosQ0FBWUYsS0FBS1IsTUFBakIsRUFBeUIsVUFBVVcsQ0FBVixFQUFhO0FBQUUsYUFBT0gsS0FBS1AsR0FBTCxDQUFTVSxDQUFULENBQVA7QUFBb0IsS0FBNUQsQ0FBTjtBQUNEOztBQUVELFNBQU9MLElBQUlNLFdBQUosRUFBUDtBQUNELENBVkQiLCJmaWxlIjoidXBwZXItY2FzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3BlY2lhbCBsYW5ndWFnZS1zcGVjaWZpYyBvdmVycmlkZXMuXG4gKlxuICogU291cmNlOiBmdHA6Ly9mdHAudW5pY29kZS5vcmcvUHVibGljL1VDRC9sYXRlc3QvdWNkL1NwZWNpYWxDYXNpbmcudHh0XG4gKlxuICogQHR5cGUge09iamVjdH1cbiAqL1xudmFyIExBTkdVQUdFUyA9IHtcbiAgdHI6IHtcbiAgICByZWdleHA6IC9bXFx1MDA2OV0vZyxcbiAgICBtYXA6IHtcbiAgICAgICdcXHUwMDY5JzogJ1xcdTAxMzAnXG4gICAgfVxuICB9LFxuICBhejoge1xuICAgIHJlZ2V4cDogL1tcXHUwMDY5XS9nLFxuICAgIG1hcDoge1xuICAgICAgJ1xcdTAwNjknOiAnXFx1MDEzMCdcbiAgICB9XG4gIH0sXG4gIGx0OiB7XG4gICAgcmVnZXhwOiAvW1xcdTAwNjlcXHUwMDZBXFx1MDEyRl1cXHUwMzA3fFxcdTAwNjlcXHUwMzA3W1xcdTAzMDBcXHUwMzAxXFx1MDMwM10vZyxcbiAgICBtYXA6IHtcbiAgICAgICdcXHUwMDY5XFx1MDMwNyc6ICdcXHUwMDQ5JyxcbiAgICAgICdcXHUwMDZBXFx1MDMwNyc6ICdcXHUwMDRBJyxcbiAgICAgICdcXHUwMTJGXFx1MDMwNyc6ICdcXHUwMTJFJyxcbiAgICAgICdcXHUwMDY5XFx1MDMwN1xcdTAzMDAnOiAnXFx1MDBDQycsXG4gICAgICAnXFx1MDA2OVxcdTAzMDdcXHUwMzAxJzogJ1xcdTAwQ0QnLFxuICAgICAgJ1xcdTAwNjlcXHUwMzA3XFx1MDMwMyc6ICdcXHUwMTI4J1xuICAgIH1cbiAgfVxufVxuXG4vKipcbiAqIFVwcGVyIGNhc2UgYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7U3RyaW5nfSBzdHJcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyLCBsb2NhbGUpIHtcbiAgdmFyIGxhbmcgPSBMQU5HVUFHRVNbbG9jYWxlXVxuXG4gIHN0ciA9IHN0ciA9PSBudWxsID8gJycgOiBTdHJpbmcoc3RyKVxuXG4gIGlmIChsYW5nKSB7XG4gICAgc3RyID0gc3RyLnJlcGxhY2UobGFuZy5yZWdleHAsIGZ1bmN0aW9uIChtKSB7IHJldHVybiBsYW5nLm1hcFttXSB9KVxuICB9XG5cbiAgcmV0dXJuIHN0ci50b1VwcGVyQ2FzZSgpXG59XG4iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js","source":"'use strict';\n\n/**\n * Special language-specific overrides.\n *\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n *\n * @type {Object}\n */\nvar LANGUAGES = {\n  tr: {\n    regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n    map: {\n      '\\u0130': 'i',\n      'I': '\\u0131',\n      'I\\u0307': 'i'\n    }\n  },\n  az: {\n    regexp: /[\\u0130]/g,\n    map: {\n      '\\u0130': 'i',\n      'I': '\\u0131',\n      'I\\u0307': 'i'\n    }\n  },\n  lt: {\n    regexp: /[\\u0049\\u004A\\u012E\\u00CC\\u00CD\\u0128]/g,\n    map: {\n      'I': 'i\\u0307',\n      'J': 'j\\u0307',\n      '\\u012E': '\\u012F\\u0307',\n      '\\xCC': 'i\\u0307\\u0300',\n      '\\xCD': 'i\\u0307\\u0301',\n      '\\u0128': 'i\\u0307\\u0303'\n    }\n  }\n\n  /**\n   * Lowercase a string.\n   *\n   * @param  {String} str\n   * @return {String}\n   */\n};module.exports = function (str, locale) {\n  var lang = LANGUAGES[locale];\n\n  str = str == null ? '' : String(str);\n\n  if (lang) {\n    str = str.replace(lang.regexp, function (m) {\n      return lang.map[m];\n    });\n  }\n\n  return str.toLowerCase();\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvd2VyLWNhc2UuanMiXSwibmFtZXMiOlsiTEFOR1VBR0VTIiwidHIiLCJyZWdleHAiLCJtYXAiLCJheiIsImx0IiwibW9kdWxlIiwiZXhwb3J0cyIsInN0ciIsImxvY2FsZSIsImxhbmciLCJTdHJpbmciLCJyZXBsYWNlIiwibSIsInRvTG93ZXJDYXNlIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7O0FBT0EsSUFBSUEsWUFBWTtBQUNkQyxNQUFJO0FBQ0ZDLFlBQVEsNkJBRE47QUFFRkMsU0FBSztBQUNILGdCQUFVLEdBRFA7QUFFSCxXQUFVLFFBRlA7QUFHSCxpQkFBZ0I7QUFIYjtBQUZILEdBRFU7QUFTZEMsTUFBSTtBQUNGRixZQUFRLFdBRE47QUFFRkMsU0FBSztBQUNILGdCQUFVLEdBRFA7QUFFSCxXQUFVLFFBRlA7QUFHSCxpQkFBZ0I7QUFIYjtBQUZILEdBVFU7QUFpQmRFLE1BQUk7QUFDRkgsWUFBUSx5Q0FETjtBQUVGQyxTQUFLO0FBQ0gsV0FBVSxTQURQO0FBRUgsV0FBVSxTQUZQO0FBR0gsZ0JBQVUsY0FIUDtBQUlILGNBQVUsZUFKUDtBQUtILGNBQVUsZUFMUDtBQU1ILGdCQUFVO0FBTlA7QUFGSDs7QUFhTjs7Ozs7O0FBOUJnQixDQUFoQixDQW9DQUcsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWVDLE1BQWYsRUFBdUI7QUFDdEMsTUFBSUMsT0FBT1YsVUFBVVMsTUFBVixDQUFYOztBQUVBRCxRQUFNQSxPQUFPLElBQVAsR0FBYyxFQUFkLEdBQW1CRyxPQUFPSCxHQUFQLENBQXpCOztBQUVBLE1BQUlFLElBQUosRUFBVTtBQUNSRixVQUFNQSxJQUFJSSxPQUFKLENBQVlGLEtBQUtSLE1BQWpCLEVBQXlCLFVBQVVXLENBQVYsRUFBYTtBQUFFLGFBQU9ILEtBQUtQLEdBQUwsQ0FBU1UsQ0FBVCxDQUFQO0FBQW9CLEtBQTVELENBQU47QUFDRDs7QUFFRCxTQUFPTCxJQUFJTSxXQUFKLEVBQVA7QUFDRCxDQVZEIiwiZmlsZSI6Imxvd2VyLWNhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNwZWNpYWwgbGFuZ3VhZ2Utc3BlY2lmaWMgb3ZlcnJpZGVzLlxuICpcbiAqIFNvdXJjZTogZnRwOi8vZnRwLnVuaWNvZGUub3JnL1B1YmxpYy9VQ0QvbGF0ZXN0L3VjZC9TcGVjaWFsQ2FzaW5nLnR4dFxuICpcbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbnZhciBMQU5HVUFHRVMgPSB7XG4gIHRyOiB7XG4gICAgcmVnZXhwOiAvXFx1MDEzMHxcXHUwMDQ5fFxcdTAwNDlcXHUwMzA3L2csXG4gICAgbWFwOiB7XG4gICAgICAnXFx1MDEzMCc6ICdcXHUwMDY5JyxcbiAgICAgICdcXHUwMDQ5JzogJ1xcdTAxMzEnLFxuICAgICAgJ1xcdTAwNDlcXHUwMzA3JzogJ1xcdTAwNjknXG4gICAgfVxuICB9LFxuICBhejoge1xuICAgIHJlZ2V4cDogL1tcXHUwMTMwXS9nLFxuICAgIG1hcDoge1xuICAgICAgJ1xcdTAxMzAnOiAnXFx1MDA2OScsXG4gICAgICAnXFx1MDA0OSc6ICdcXHUwMTMxJyxcbiAgICAgICdcXHUwMDQ5XFx1MDMwNyc6ICdcXHUwMDY5J1xuICAgIH1cbiAgfSxcbiAgbHQ6IHtcbiAgICByZWdleHA6IC9bXFx1MDA0OVxcdTAwNEFcXHUwMTJFXFx1MDBDQ1xcdTAwQ0RcXHUwMTI4XS9nLFxuICAgIG1hcDoge1xuICAgICAgJ1xcdTAwNDknOiAnXFx1MDA2OVxcdTAzMDcnLFxuICAgICAgJ1xcdTAwNEEnOiAnXFx1MDA2QVxcdTAzMDcnLFxuICAgICAgJ1xcdTAxMkUnOiAnXFx1MDEyRlxcdTAzMDcnLFxuICAgICAgJ1xcdTAwQ0MnOiAnXFx1MDA2OVxcdTAzMDdcXHUwMzAwJyxcbiAgICAgICdcXHUwMENEJzogJ1xcdTAwNjlcXHUwMzA3XFx1MDMwMScsXG4gICAgICAnXFx1MDEyOCc6ICdcXHUwMDY5XFx1MDMwN1xcdTAzMDMnXG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogTG93ZXJjYXNlIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0ciwgbG9jYWxlKSB7XG4gIHZhciBsYW5nID0gTEFOR1VBR0VTW2xvY2FsZV1cblxuICBzdHIgPSBzdHIgPT0gbnVsbCA/ICcnIDogU3RyaW5nKHN0cilcblxuICBpZiAobGFuZykge1xuICAgIHN0ciA9IHN0ci5yZXBsYWNlKGxhbmcucmVnZXhwLCBmdW5jdGlvbiAobSkgeyByZXR1cm4gbGFuZy5tYXBbbV0gfSlcbiAgfVxuXG4gIHJldHVybiBzdHIudG9Mb3dlckNhc2UoKVxufVxuIl19","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\foreach\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\foreach\\index.js","source":"'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach(obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImhhc093biIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwidG9TdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIiwiZm9yRWFjaCIsIm9iaiIsImZuIiwiY3R4IiwiY2FsbCIsIlR5cGVFcnJvciIsImwiLCJsZW5ndGgiLCJpIiwiayJdLCJtYXBwaW5ncyI6Ijs7QUFDQSxJQUFJQSxTQUFTQyxPQUFPQyxTQUFQLENBQWlCQyxjQUE5QjtBQUNBLElBQUlDLFdBQVdILE9BQU9DLFNBQVAsQ0FBaUJFLFFBQWhDOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLE9BQVQsQ0FBa0JDLEdBQWxCLEVBQXVCQyxFQUF2QixFQUEyQkMsR0FBM0IsRUFBZ0M7QUFDN0MsUUFBSU4sU0FBU08sSUFBVCxDQUFjRixFQUFkLE1BQXNCLG1CQUExQixFQUErQztBQUMzQyxjQUFNLElBQUlHLFNBQUosQ0FBYyw2QkFBZCxDQUFOO0FBQ0g7QUFDRCxRQUFJQyxJQUFJTCxJQUFJTSxNQUFaO0FBQ0EsUUFBSUQsTUFBTSxDQUFDQSxDQUFYLEVBQWM7QUFDVixhQUFLLElBQUlFLElBQUksQ0FBYixFQUFnQkEsSUFBSUYsQ0FBcEIsRUFBdUJFLEdBQXZCLEVBQTRCO0FBQ3hCTixlQUFHRSxJQUFILENBQVFELEdBQVIsRUFBYUYsSUFBSU8sQ0FBSixDQUFiLEVBQXFCQSxDQUFyQixFQUF3QlAsR0FBeEI7QUFDSDtBQUNKLEtBSkQsTUFJTztBQUNILGFBQUssSUFBSVEsQ0FBVCxJQUFjUixHQUFkLEVBQW1CO0FBQ2YsZ0JBQUlSLE9BQU9XLElBQVAsQ0FBWUgsR0FBWixFQUFpQlEsQ0FBakIsQ0FBSixFQUF5QjtBQUNyQlAsbUJBQUdFLElBQUgsQ0FBUUQsR0FBUixFQUFhRixJQUFJUSxDQUFKLENBQWIsRUFBcUJBLENBQXJCLEVBQXdCUixHQUF4QjtBQUNIO0FBQ0o7QUFDSjtBQUNKLENBaEJEIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgaGFzT3duID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciB0b1N0cmluZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZm9yRWFjaCAob2JqLCBmbiwgY3R4KSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwoZm4pICE9PSAnW29iamVjdCBGdW5jdGlvbl0nKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2l0ZXJhdG9yIG11c3QgYmUgYSBmdW5jdGlvbicpO1xuICAgIH1cbiAgICB2YXIgbCA9IG9iai5sZW5ndGg7XG4gICAgaWYgKGwgPT09ICtsKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBmbi5jYWxsKGN0eCwgb2JqW2ldLCBpLCBvYmopO1xuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZm9yICh2YXIgayBpbiBvYmopIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChvYmosIGspKSB7XG4gICAgICAgICAgICAgICAgZm4uY2FsbChjdHgsIG9ialtrXSwgaywgb2JqKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn07XG5cbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\implementation.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\implementation.js","source":"'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function binder() {\n        if (this instanceof bound) {\n            var result = target.apply(this, args.concat(slice.call(arguments)));\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(that, args.concat(slice.call(arguments)));\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltcGxlbWVudGF0aW9uLmpzIl0sIm5hbWVzIjpbIkVSUk9SX01FU1NBR0UiLCJzbGljZSIsIkFycmF5IiwicHJvdG90eXBlIiwidG9TdHIiLCJPYmplY3QiLCJ0b1N0cmluZyIsImZ1bmNUeXBlIiwibW9kdWxlIiwiZXhwb3J0cyIsImJpbmQiLCJ0aGF0IiwidGFyZ2V0IiwiY2FsbCIsIlR5cGVFcnJvciIsImFyZ3MiLCJhcmd1bWVudHMiLCJib3VuZCIsImJpbmRlciIsInJlc3VsdCIsImFwcGx5IiwiY29uY2F0IiwiYm91bmRMZW5ndGgiLCJNYXRoIiwibWF4IiwibGVuZ3RoIiwiYm91bmRBcmdzIiwiaSIsInB1c2giLCJGdW5jdGlvbiIsImpvaW4iLCJFbXB0eSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7O0FBRUEsSUFBSUEsZ0JBQWdCLGlEQUFwQjtBQUNBLElBQUlDLFFBQVFDLE1BQU1DLFNBQU4sQ0FBZ0JGLEtBQTVCO0FBQ0EsSUFBSUcsUUFBUUMsT0FBT0YsU0FBUCxDQUFpQkcsUUFBN0I7QUFDQSxJQUFJQyxXQUFXLG1CQUFmOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLElBQVQsQ0FBY0MsSUFBZCxFQUFvQjtBQUNqQyxRQUFJQyxTQUFTLElBQWI7QUFDQSxRQUFJLE9BQU9BLE1BQVAsS0FBa0IsVUFBbEIsSUFBZ0NSLE1BQU1TLElBQU4sQ0FBV0QsTUFBWCxNQUF1QkwsUUFBM0QsRUFBcUU7QUFDakUsY0FBTSxJQUFJTyxTQUFKLENBQWNkLGdCQUFnQlksTUFBOUIsQ0FBTjtBQUNIO0FBQ0QsUUFBSUcsT0FBT2QsTUFBTVksSUFBTixDQUFXRyxTQUFYLEVBQXNCLENBQXRCLENBQVg7O0FBRUEsUUFBSUMsS0FBSjtBQUNBLFFBQUlDLFNBQVMsU0FBVEEsTUFBUyxHQUFZO0FBQ3JCLFlBQUksZ0JBQWdCRCxLQUFwQixFQUEyQjtBQUN2QixnQkFBSUUsU0FBU1AsT0FBT1EsS0FBUCxDQUNULElBRFMsRUFFVEwsS0FBS00sTUFBTCxDQUFZcEIsTUFBTVksSUFBTixDQUFXRyxTQUFYLENBQVosQ0FGUyxDQUFiO0FBSUEsZ0JBQUlYLE9BQU9jLE1BQVAsTUFBbUJBLE1BQXZCLEVBQStCO0FBQzNCLHVCQUFPQSxNQUFQO0FBQ0g7QUFDRCxtQkFBTyxJQUFQO0FBQ0gsU0FURCxNQVNPO0FBQ0gsbUJBQU9QLE9BQU9RLEtBQVAsQ0FDSFQsSUFERyxFQUVISSxLQUFLTSxNQUFMLENBQVlwQixNQUFNWSxJQUFOLENBQVdHLFNBQVgsQ0FBWixDQUZHLENBQVA7QUFJSDtBQUNKLEtBaEJEOztBQWtCQSxRQUFJTSxjQUFjQyxLQUFLQyxHQUFMLENBQVMsQ0FBVCxFQUFZWixPQUFPYSxNQUFQLEdBQWdCVixLQUFLVSxNQUFqQyxDQUFsQjtBQUNBLFFBQUlDLFlBQVksRUFBaEI7QUFDQSxTQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUwsV0FBcEIsRUFBaUNLLEdBQWpDLEVBQXNDO0FBQ2xDRCxrQkFBVUUsSUFBVixDQUFlLE1BQU1ELENBQXJCO0FBQ0g7O0FBRURWLFlBQVFZLFNBQVMsUUFBVCxFQUFtQixzQkFBc0JILFVBQVVJLElBQVYsQ0FBZSxHQUFmLENBQXRCLEdBQTRDLDJDQUEvRCxFQUE0R1osTUFBNUcsQ0FBUjs7QUFFQSxRQUFJTixPQUFPVCxTQUFYLEVBQXNCO0FBQ2xCLFlBQUk0QixRQUFRLFNBQVNBLEtBQVQsR0FBaUIsQ0FBRSxDQUEvQjtBQUNBQSxjQUFNNUIsU0FBTixHQUFrQlMsT0FBT1QsU0FBekI7QUFDQWMsY0FBTWQsU0FBTixHQUFrQixJQUFJNEIsS0FBSixFQUFsQjtBQUNBQSxjQUFNNUIsU0FBTixHQUFrQixJQUFsQjtBQUNIOztBQUVELFdBQU9jLEtBQVA7QUFDSCxDQTFDRCIsImZpbGUiOiJpbXBsZW1lbnRhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyogZXNsaW50IG5vLWludmFsaWQtdGhpczogMSAqL1xuXG52YXIgRVJST1JfTUVTU0FHRSA9ICdGdW5jdGlvbi5wcm90b3R5cGUuYmluZCBjYWxsZWQgb24gaW5jb21wYXRpYmxlICc7XG52YXIgc2xpY2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2U7XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIGZ1bmNUeXBlID0gJ1tvYmplY3QgRnVuY3Rpb25dJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBiaW5kKHRoYXQpIHtcbiAgICB2YXIgdGFyZ2V0ID0gdGhpcztcbiAgICBpZiAodHlwZW9mIHRhcmdldCAhPT0gJ2Z1bmN0aW9uJyB8fCB0b1N0ci5jYWxsKHRhcmdldCkgIT09IGZ1bmNUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRVJST1JfTUVTU0FHRSArIHRhcmdldCk7XG4gICAgfVxuICAgIHZhciBhcmdzID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuXG4gICAgdmFyIGJvdW5kO1xuICAgIHZhciBiaW5kZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzIGluc3RhbmNlb2YgYm91bmQpIHtcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSB0YXJnZXQuYXBwbHkoXG4gICAgICAgICAgICAgICAgdGhpcyxcbiAgICAgICAgICAgICAgICBhcmdzLmNvbmNhdChzbGljZS5jYWxsKGFyZ3VtZW50cykpXG4gICAgICAgICAgICApO1xuICAgICAgICAgICAgaWYgKE9iamVjdChyZXN1bHQpID09PSByZXN1bHQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0LmFwcGx5KFxuICAgICAgICAgICAgICAgIHRoYXQsXG4gICAgICAgICAgICAgICAgYXJncy5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMpKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgYm91bmRMZW5ndGggPSBNYXRoLm1heCgwLCB0YXJnZXQubGVuZ3RoIC0gYXJncy5sZW5ndGgpO1xuICAgIHZhciBib3VuZEFyZ3MgPSBbXTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvdW5kTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgYm91bmRBcmdzLnB1c2goJyQnICsgaSk7XG4gICAgfVxuXG4gICAgYm91bmQgPSBGdW5jdGlvbignYmluZGVyJywgJ3JldHVybiBmdW5jdGlvbiAoJyArIGJvdW5kQXJncy5qb2luKCcsJykgKyAnKXsgcmV0dXJuIGJpbmRlci5hcHBseSh0aGlzLGFyZ3VtZW50cyk7IH0nKShiaW5kZXIpO1xuXG4gICAgaWYgKHRhcmdldC5wcm90b3R5cGUpIHtcbiAgICAgICAgdmFyIEVtcHR5ID0gZnVuY3Rpb24gRW1wdHkoKSB7fTtcbiAgICAgICAgRW1wdHkucHJvdG90eXBlID0gdGFyZ2V0LnByb3RvdHlwZTtcbiAgICAgICAgYm91bmQucHJvdG90eXBlID0gbmV3IEVtcHR5KCk7XG4gICAgICAgIEVtcHR5LnByb3RvdHlwZSA9IG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIGJvdW5kO1xufTtcbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\index.js","source":"'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImltcGxlbWVudGF0aW9uIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJGdW5jdGlvbiIsInByb3RvdHlwZSIsImJpbmQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQUlBLGlCQUFpQkMsUUFBUSxrQkFBUixDQUFyQjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQkMsU0FBU0MsU0FBVCxDQUFtQkMsSUFBbkIsSUFBMkJOLGNBQTVDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gRnVuY3Rpb24ucHJvdG90eXBlLmJpbmQgfHwgaW1wbGVtZW50YXRpb247XG4iXX0=","deps":{"./implementation":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\implementation.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-regexp.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-regexp.js","source":"\"use strict\";\n\nmodule.exports = /([a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19])([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A])/g;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\non-word-regexp.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\non-word-regexp.js","source":"\"use strict\";\n\nmodule.exports = /[^A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC0-9\\xB2\\xB3\\xB9\\xBC-\\xBE\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u09F4-\\u09F9\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0B72-\\u0B77\\u0BE6-\\u0BF2\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0CE6-\\u0CEF\\u0D66-\\u0D75\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F33\\u1040-\\u1049\\u1090-\\u1099\\u1369-\\u137C\\u16EE-\\u16F0\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19DA\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\u2070\\u2074-\\u2079\\u2080-\\u2089\\u2150-\\u2182\\u2185-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2CFD\\u3007\\u3021-\\u3029\\u3038-\\u303A\\u3192-\\u3195\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\uA620-\\uA629\\uA6E6-\\uA6EF\\uA830-\\uA835\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19]+/g;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-upper-regexp.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-upper-regexp.js","source":"\"use strict\";\n\nmodule.exports = /([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A])([A-Z\\xC0-\\xD6\\xD8-\\xDE\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C7\\u01CA\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F1\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E\\u038F\\u0391-\\u03A1\\u03A3-\\u03AB\\u03CF\\u03D2-\\u03D4\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F4\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u10A0-\\u10C5\\u10C7\\u10CD\\u13A0-\\u13F5\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1FB8-\\u1FBB\\u1FC8-\\u1FCB\\u1FD8-\\u1FDB\\u1FE8-\\u1FEC\\u1FF8-\\u1FFB\\u2102\\u2107\\u210B-\\u210D\\u2110-\\u2112\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u2130-\\u2133\\u213E\\u213F\\u2145\\u2183\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0-\\uA7B4\\uA7B6\\uFF21-\\uFF3A][a-z\\xB5\\xDF-\\xF6\\xF8-\\xFF\\u0101\\u0103\\u0105\\u0107\\u0109\\u010B\\u010D\\u010F\\u0111\\u0113\\u0115\\u0117\\u0119\\u011B\\u011D\\u011F\\u0121\\u0123\\u0125\\u0127\\u0129\\u012B\\u012D\\u012F\\u0131\\u0133\\u0135\\u0137\\u0138\\u013A\\u013C\\u013E\\u0140\\u0142\\u0144\\u0146\\u0148\\u0149\\u014B\\u014D\\u014F\\u0151\\u0153\\u0155\\u0157\\u0159\\u015B\\u015D\\u015F\\u0161\\u0163\\u0165\\u0167\\u0169\\u016B\\u016D\\u016F\\u0171\\u0173\\u0175\\u0177\\u017A\\u017C\\u017E-\\u0180\\u0183\\u0185\\u0188\\u018C\\u018D\\u0192\\u0195\\u0199-\\u019B\\u019E\\u01A1\\u01A3\\u01A5\\u01A8\\u01AA\\u01AB\\u01AD\\u01B0\\u01B4\\u01B6\\u01B9\\u01BA\\u01BD-\\u01BF\\u01C6\\u01C9\\u01CC\\u01CE\\u01D0\\u01D2\\u01D4\\u01D6\\u01D8\\u01DA\\u01DC\\u01DD\\u01DF\\u01E1\\u01E3\\u01E5\\u01E7\\u01E9\\u01EB\\u01ED\\u01EF\\u01F0\\u01F3\\u01F5\\u01F9\\u01FB\\u01FD\\u01FF\\u0201\\u0203\\u0205\\u0207\\u0209\\u020B\\u020D\\u020F\\u0211\\u0213\\u0215\\u0217\\u0219\\u021B\\u021D\\u021F\\u0221\\u0223\\u0225\\u0227\\u0229\\u022B\\u022D\\u022F\\u0231\\u0233-\\u0239\\u023C\\u023F\\u0240\\u0242\\u0247\\u0249\\u024B\\u024D\\u024F-\\u0293\\u0295-\\u02AF\\u0371\\u0373\\u0377\\u037B-\\u037D\\u0390\\u03AC-\\u03CE\\u03D0\\u03D1\\u03D5-\\u03D7\\u03D9\\u03DB\\u03DD\\u03DF\\u03E1\\u03E3\\u03E5\\u03E7\\u03E9\\u03EB\\u03ED\\u03EF-\\u03F3\\u03F5\\u03F8\\u03FB\\u03FC\\u0430-\\u045F\\u0461\\u0463\\u0465\\u0467\\u0469\\u046B\\u046D\\u046F\\u0471\\u0473\\u0475\\u0477\\u0479\\u047B\\u047D\\u047F\\u0481\\u048B\\u048D\\u048F\\u0491\\u0493\\u0495\\u0497\\u0499\\u049B\\u049D\\u049F\\u04A1\\u04A3\\u04A5\\u04A7\\u04A9\\u04AB\\u04AD\\u04AF\\u04B1\\u04B3\\u04B5\\u04B7\\u04B9\\u04BB\\u04BD\\u04BF\\u04C2\\u04C4\\u04C6\\u04C8\\u04CA\\u04CC\\u04CE\\u04CF\\u04D1\\u04D3\\u04D5\\u04D7\\u04D9\\u04DB\\u04DD\\u04DF\\u04E1\\u04E3\\u04E5\\u04E7\\u04E9\\u04EB\\u04ED\\u04EF\\u04F1\\u04F3\\u04F5\\u04F7\\u04F9\\u04FB\\u04FD\\u04FF\\u0501\\u0503\\u0505\\u0507\\u0509\\u050B\\u050D\\u050F\\u0511\\u0513\\u0515\\u0517\\u0519\\u051B\\u051D\\u051F\\u0521\\u0523\\u0525\\u0527\\u0529\\u052B\\u052D\\u052F\\u0561-\\u0587\\u13F8-\\u13FD\\u1D00-\\u1D2B\\u1D6B-\\u1D77\\u1D79-\\u1D9A\\u1E01\\u1E03\\u1E05\\u1E07\\u1E09\\u1E0B\\u1E0D\\u1E0F\\u1E11\\u1E13\\u1E15\\u1E17\\u1E19\\u1E1B\\u1E1D\\u1E1F\\u1E21\\u1E23\\u1E25\\u1E27\\u1E29\\u1E2B\\u1E2D\\u1E2F\\u1E31\\u1E33\\u1E35\\u1E37\\u1E39\\u1E3B\\u1E3D\\u1E3F\\u1E41\\u1E43\\u1E45\\u1E47\\u1E49\\u1E4B\\u1E4D\\u1E4F\\u1E51\\u1E53\\u1E55\\u1E57\\u1E59\\u1E5B\\u1E5D\\u1E5F\\u1E61\\u1E63\\u1E65\\u1E67\\u1E69\\u1E6B\\u1E6D\\u1E6F\\u1E71\\u1E73\\u1E75\\u1E77\\u1E79\\u1E7B\\u1E7D\\u1E7F\\u1E81\\u1E83\\u1E85\\u1E87\\u1E89\\u1E8B\\u1E8D\\u1E8F\\u1E91\\u1E93\\u1E95-\\u1E9D\\u1E9F\\u1EA1\\u1EA3\\u1EA5\\u1EA7\\u1EA9\\u1EAB\\u1EAD\\u1EAF\\u1EB1\\u1EB3\\u1EB5\\u1EB7\\u1EB9\\u1EBB\\u1EBD\\u1EBF\\u1EC1\\u1EC3\\u1EC5\\u1EC7\\u1EC9\\u1ECB\\u1ECD\\u1ECF\\u1ED1\\u1ED3\\u1ED5\\u1ED7\\u1ED9\\u1EDB\\u1EDD\\u1EDF\\u1EE1\\u1EE3\\u1EE5\\u1EE7\\u1EE9\\u1EEB\\u1EED\\u1EEF\\u1EF1\\u1EF3\\u1EF5\\u1EF7\\u1EF9\\u1EFB\\u1EFD\\u1EFF-\\u1F07\\u1F10-\\u1F15\\u1F20-\\u1F27\\u1F30-\\u1F37\\u1F40-\\u1F45\\u1F50-\\u1F57\\u1F60-\\u1F67\\u1F70-\\u1F7D\\u1F80-\\u1F87\\u1F90-\\u1F97\\u1FA0-\\u1FA7\\u1FB0-\\u1FB4\\u1FB6\\u1FB7\\u1FBE\\u1FC2-\\u1FC4\\u1FC6\\u1FC7\\u1FD0-\\u1FD3\\u1FD6\\u1FD7\\u1FE0-\\u1FE7\\u1FF2-\\u1FF4\\u1FF6\\u1FF7\\u210A\\u210E\\u210F\\u2113\\u212F\\u2134\\u2139\\u213C\\u213D\\u2146-\\u2149\\u214E\\u2184\\u2C30-\\u2C5E\\u2C61\\u2C65\\u2C66\\u2C68\\u2C6A\\u2C6C\\u2C71\\u2C73\\u2C74\\u2C76-\\u2C7B\\u2C81\\u2C83\\u2C85\\u2C87\\u2C89\\u2C8B\\u2C8D\\u2C8F\\u2C91\\u2C93\\u2C95\\u2C97\\u2C99\\u2C9B\\u2C9D\\u2C9F\\u2CA1\\u2CA3\\u2CA5\\u2CA7\\u2CA9\\u2CAB\\u2CAD\\u2CAF\\u2CB1\\u2CB3\\u2CB5\\u2CB7\\u2CB9\\u2CBB\\u2CBD\\u2CBF\\u2CC1\\u2CC3\\u2CC5\\u2CC7\\u2CC9\\u2CCB\\u2CCD\\u2CCF\\u2CD1\\u2CD3\\u2CD5\\u2CD7\\u2CD9\\u2CDB\\u2CDD\\u2CDF\\u2CE1\\u2CE3\\u2CE4\\u2CEC\\u2CEE\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\uA641\\uA643\\uA645\\uA647\\uA649\\uA64B\\uA64D\\uA64F\\uA651\\uA653\\uA655\\uA657\\uA659\\uA65B\\uA65D\\uA65F\\uA661\\uA663\\uA665\\uA667\\uA669\\uA66B\\uA66D\\uA681\\uA683\\uA685\\uA687\\uA689\\uA68B\\uA68D\\uA68F\\uA691\\uA693\\uA695\\uA697\\uA699\\uA69B\\uA723\\uA725\\uA727\\uA729\\uA72B\\uA72D\\uA72F-\\uA731\\uA733\\uA735\\uA737\\uA739\\uA73B\\uA73D\\uA73F\\uA741\\uA743\\uA745\\uA747\\uA749\\uA74B\\uA74D\\uA74F\\uA751\\uA753\\uA755\\uA757\\uA759\\uA75B\\uA75D\\uA75F\\uA761\\uA763\\uA765\\uA767\\uA769\\uA76B\\uA76D\\uA76F\\uA771-\\uA778\\uA77A\\uA77C\\uA77F\\uA781\\uA783\\uA785\\uA787\\uA78C\\uA78E\\uA791\\uA793-\\uA795\\uA797\\uA799\\uA79B\\uA79D\\uA79F\\uA7A1\\uA7A3\\uA7A5\\uA7A7\\uA7A9\\uA7B5\\uA7B7\\uA7FA\\uAB30-\\uAB5A\\uAB60-\\uAB65\\uAB70-\\uABBF\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF41-\\uFF5A])/g;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\isArguments.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\isArguments.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' && value !== null && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && typeof value.length === 'number' && value.length >= 0 && toStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzQXJndW1lbnRzLmpzIl0sIm5hbWVzIjpbInRvU3RyIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJtb2R1bGUiLCJleHBvcnRzIiwiaXNBcmd1bWVudHMiLCJ2YWx1ZSIsInN0ciIsImNhbGwiLCJpc0FyZ3MiLCJsZW5ndGgiLCJjYWxsZWUiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUEsSUFBSUEsUUFBUUMsT0FBT0MsU0FBUCxDQUFpQkMsUUFBN0I7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsS0FBckIsRUFBNEI7QUFDNUMsS0FBSUMsTUFBTVIsTUFBTVMsSUFBTixDQUFXRixLQUFYLENBQVY7QUFDQSxLQUFJRyxTQUFTRixRQUFRLG9CQUFyQjtBQUNBLEtBQUksQ0FBQ0UsTUFBTCxFQUFhO0FBQ1pBLFdBQVNGLFFBQVEsZ0JBQVIsSUFDUkQsVUFBVSxJQURGLElBRVIsUUFBT0EsS0FBUCx5Q0FBT0EsS0FBUCxPQUFpQixRQUZULElBR1IsT0FBT0EsTUFBTUksTUFBYixLQUF3QixRQUhoQixJQUlSSixNQUFNSSxNQUFOLElBQWdCLENBSlIsSUFLUlgsTUFBTVMsSUFBTixDQUFXRixNQUFNSyxNQUFqQixNQUE2QixtQkFMOUI7QUFNQTtBQUNELFFBQU9GLE1BQVA7QUFDQSxDQVpEIiwiZmlsZSI6ImlzQXJndW1lbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQXJndW1lbnRzKHZhbHVlKSB7XG5cdHZhciBzdHIgPSB0b1N0ci5jYWxsKHZhbHVlKTtcblx0dmFyIGlzQXJncyA9IHN0ciA9PT0gJ1tvYmplY3QgQXJndW1lbnRzXSc7XG5cdGlmICghaXNBcmdzKSB7XG5cdFx0aXNBcmdzID0gc3RyICE9PSAnW29iamVjdCBBcnJheV0nICYmXG5cdFx0XHR2YWx1ZSAhPT0gbnVsbCAmJlxuXHRcdFx0dHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxuXHRcdFx0dHlwZW9mIHZhbHVlLmxlbmd0aCA9PT0gJ251bWJlcicgJiZcblx0XHRcdHZhbHVlLmxlbmd0aCA+PSAwICYmXG5cdFx0XHR0b1N0ci5jYWxsKHZhbHVlLmNhbGxlZSkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG5cdH1cblx0cmV0dXJuIGlzQXJncztcbn07XG4iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\index.js","source":"'use strict';\n\n// modified from https://github.com/es-shims/es5-shim\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar has = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\nvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\nvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\nvar dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\nvar equalsConstructorPrototype = function equalsConstructorPrototype(o) {\n\tvar ctor = o.constructor;\n\treturn ctor && ctor.prototype === o;\n};\nvar excludedKeys = {\n\t$console: true,\n\t$external: true,\n\t$frame: true,\n\t$frameElement: true,\n\t$frames: true,\n\t$innerHeight: true,\n\t$innerWidth: true,\n\t$outerHeight: true,\n\t$outerWidth: true,\n\t$pageXOffset: true,\n\t$pageYOffset: true,\n\t$parent: true,\n\t$scrollLeft: true,\n\t$scrollTop: true,\n\t$scrollX: true,\n\t$scrollY: true,\n\t$self: true,\n\t$webkitIndexedDB: true,\n\t$webkitStorageInfo: true,\n\t$window: true\n};\nvar hasAutomationEqualityBug = function () {\n\t/* global window */\n\tif (typeof window === 'undefined') {\n\t\treturn false;\n\t}\n\tfor (var k in window) {\n\t\ttry {\n\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && _typeof(window[k]) === 'object') {\n\t\t\t\ttry {\n\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}();\nvar equalsConstructorPrototypeIfNotBuggy = function equalsConstructorPrototypeIfNotBuggy(o) {\n\t/* global window */\n\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\treturn equalsConstructorPrototype(o);\n\t}\n\ttry {\n\t\treturn equalsConstructorPrototype(o);\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar keysShim = function keys(object) {\n\tvar isObject = object !== null && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object';\n\tvar isFunction = toStr.call(object) === '[object Function]';\n\tvar isArguments = isArgs(object);\n\tvar isString = isObject && toStr.call(object) === '[object String]';\n\tvar theKeys = [];\n\n\tif (!isObject && !isFunction && !isArguments) {\n\t\tthrow new TypeError('Object.keys called on a non-object');\n\t}\n\n\tvar skipProto = hasProtoEnumBug && isFunction;\n\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\ttheKeys.push(String(i));\n\t\t}\n\t}\n\n\tif (isArguments && object.length > 0) {\n\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\ttheKeys.push(String(j));\n\t\t}\n\t} else {\n\t\tfor (var name in object) {\n\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\ttheKeys.push(String(name));\n\t\t\t}\n\t\t}\n\t}\n\n\tif (hasDontEnumBug) {\n\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t}\n\t\t}\n\t}\n\treturn theKeys;\n};\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = function () {\n\t\t\t// Safari 5.0 bug\n\t\t\treturn (Object.keys(arguments) || '').length === 2;\n\t\t}(1, 2);\n\t\tif (!keysWorksWithArguments) {\n\t\t\tvar originalKeys = Object.keys;\n\t\t\tObject.keys = function keys(object) {\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t} else {\n\t\t\t\t\treturn originalKeys(object);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./isArguments":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\isArguments.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\define-properties\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\define-properties\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar keys = require('object-keys');\nvar foreach = require('foreach');\nvar hasSymbols = typeof Symbol === 'function' && _typeof(Symbol()) === 'symbol';\n\nvar toStr = Object.prototype.toString;\n\nvar isFunction = function isFunction(fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function arePropertyDescriptorsSupported() {\n\tvar obj = {};\n\ttry {\n\t\tObject.defineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t/* eslint-disable no-unused-vars, no-restricted-syntax */\n\t\tfor (var _ in obj) {\n\t\t\treturn false;\n\t\t}\n\t\t/* eslint-enable no-unused-vars, no-restricted-syntax */\n\t\treturn obj.x === obj;\n\t} catch (e) {\n\t\t/* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = Object.defineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function defineProperty(object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\tObject.defineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function defineProperties(object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = props.concat(Object.getOwnPropertySymbols(map));\n\t}\n\tforeach(props, function (name) {\n\t\tdefineProperty(object, name, map[name], predicates[name]);\n\t});\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImtleXMiLCJyZXF1aXJlIiwiZm9yZWFjaCIsImhhc1N5bWJvbHMiLCJTeW1ib2wiLCJ0b1N0ciIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiaXNGdW5jdGlvbiIsImZuIiwiY2FsbCIsImFyZVByb3BlcnR5RGVzY3JpcHRvcnNTdXBwb3J0ZWQiLCJvYmoiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJ2YWx1ZSIsIl8iLCJ4IiwiZSIsInN1cHBvcnRzRGVzY3JpcHRvcnMiLCJvYmplY3QiLCJuYW1lIiwicHJlZGljYXRlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJkZWZpbmVQcm9wZXJ0aWVzIiwibWFwIiwicHJlZGljYXRlcyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInByb3BzIiwiY29uY2F0IiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxJQUFJQSxPQUFPQyxRQUFRLGFBQVIsQ0FBWDtBQUNBLElBQUlDLFVBQVVELFFBQVEsU0FBUixDQUFkO0FBQ0EsSUFBSUUsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFVBQWxCLElBQWdDLFFBQU9BLFFBQVAsTUFBb0IsUUFBckU7O0FBRUEsSUFBSUMsUUFBUUMsT0FBT0MsU0FBUCxDQUFpQkMsUUFBN0I7O0FBRUEsSUFBSUMsYUFBYSxTQUFiQSxVQUFhLENBQVVDLEVBQVYsRUFBYztBQUM5QixRQUFPLE9BQU9BLEVBQVAsS0FBYyxVQUFkLElBQTRCTCxNQUFNTSxJQUFOLENBQVdELEVBQVgsTUFBbUIsbUJBQXREO0FBQ0EsQ0FGRDs7QUFJQSxJQUFJRSxrQ0FBa0MsU0FBbENBLCtCQUFrQyxHQUFZO0FBQ2pELEtBQUlDLE1BQU0sRUFBVjtBQUNBLEtBQUk7QUFDSFAsU0FBT1EsY0FBUCxDQUFzQkQsR0FBdEIsRUFBMkIsR0FBM0IsRUFBZ0MsRUFBRUUsWUFBWSxLQUFkLEVBQXFCQyxPQUFPSCxHQUE1QixFQUFoQztBQUNNO0FBQ0EsT0FBSyxJQUFJSSxDQUFULElBQWNKLEdBQWQsRUFBbUI7QUFBRSxVQUFPLEtBQVA7QUFBZTtBQUNwQztBQUNOLFNBQU9BLElBQUlLLENBQUosS0FBVUwsR0FBakI7QUFDQSxFQU5ELENBTUUsT0FBT00sQ0FBUCxFQUFVO0FBQUU7QUFDYixTQUFPLEtBQVA7QUFDQTtBQUNELENBWEQ7QUFZQSxJQUFJQyxzQkFBc0JkLE9BQU9RLGNBQVAsSUFBeUJGLGlDQUFuRDs7QUFFQSxJQUFJRSxpQkFBaUIsU0FBakJBLGNBQWlCLENBQVVPLE1BQVYsRUFBa0JDLElBQWxCLEVBQXdCTixLQUF4QixFQUErQk8sU0FBL0IsRUFBMEM7QUFDOUQsS0FBSUQsUUFBUUQsTUFBUixLQUFtQixDQUFDWixXQUFXYyxTQUFYLENBQUQsSUFBMEIsQ0FBQ0EsV0FBOUMsQ0FBSixFQUFnRTtBQUMvRDtBQUNBO0FBQ0QsS0FBSUgsbUJBQUosRUFBeUI7QUFDeEJkLFNBQU9RLGNBQVAsQ0FBc0JPLE1BQXRCLEVBQThCQyxJQUE5QixFQUFvQztBQUNuQ0UsaUJBQWMsSUFEcUI7QUFFbkNULGVBQVksS0FGdUI7QUFHbkNDLFVBQU9BLEtBSDRCO0FBSW5DUyxhQUFVO0FBSnlCLEdBQXBDO0FBTUEsRUFQRCxNQU9PO0FBQ05KLFNBQU9DLElBQVAsSUFBZU4sS0FBZjtBQUNBO0FBQ0QsQ0FkRDs7QUFnQkEsSUFBSVUsbUJBQW1CLFNBQW5CQSxnQkFBbUIsQ0FBVUwsTUFBVixFQUFrQk0sR0FBbEIsRUFBdUI7QUFDN0MsS0FBSUMsYUFBYUMsVUFBVUMsTUFBVixHQUFtQixDQUFuQixHQUF1QkQsVUFBVSxDQUFWLENBQXZCLEdBQXNDLEVBQXZEO0FBQ0EsS0FBSUUsUUFBUS9CLEtBQUsyQixHQUFMLENBQVo7QUFDQSxLQUFJeEIsVUFBSixFQUFnQjtBQUNmNEIsVUFBUUEsTUFBTUMsTUFBTixDQUFhMUIsT0FBTzJCLHFCQUFQLENBQTZCTixHQUE3QixDQUFiLENBQVI7QUFDQTtBQUNEekIsU0FBUTZCLEtBQVIsRUFBZSxVQUFVVCxJQUFWLEVBQWdCO0FBQzlCUixpQkFBZU8sTUFBZixFQUF1QkMsSUFBdkIsRUFBNkJLLElBQUlMLElBQUosQ0FBN0IsRUFBd0NNLFdBQVdOLElBQVgsQ0FBeEM7QUFDQSxFQUZEO0FBR0EsQ0FURDs7QUFXQUksaUJBQWlCTixtQkFBakIsR0FBdUMsQ0FBQyxDQUFDQSxtQkFBekM7O0FBRUFjLE9BQU9DLE9BQVAsR0FBaUJULGdCQUFqQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIGtleXMgPSByZXF1aXJlKCdvYmplY3Qta2V5cycpO1xudmFyIGZvcmVhY2ggPSByZXF1aXJlKCdmb3JlYWNoJyk7XG52YXIgaGFzU3ltYm9scyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbCgpID09PSAnc3ltYm9sJztcblxudmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxudmFyIGlzRnVuY3Rpb24gPSBmdW5jdGlvbiAoZm4pIHtcblx0cmV0dXJuIHR5cGVvZiBmbiA9PT0gJ2Z1bmN0aW9uJyAmJiB0b1N0ci5jYWxsKGZuKSA9PT0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbn07XG5cbnZhciBhcmVQcm9wZXJ0eURlc2NyaXB0b3JzU3VwcG9ydGVkID0gZnVuY3Rpb24gKCkge1xuXHR2YXIgb2JqID0ge307XG5cdHRyeSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwgJ3gnLCB7IGVudW1lcmFibGU6IGZhbHNlLCB2YWx1ZTogb2JqIH0pO1xuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby11bnVzZWQtdmFycywgbm8tcmVzdHJpY3RlZC1zeW50YXggKi9cbiAgICAgICAgZm9yICh2YXIgXyBpbiBvYmopIHsgcmV0dXJuIGZhbHNlOyB9XG4gICAgICAgIC8qIGVzbGludC1lbmFibGUgbm8tdW51c2VkLXZhcnMsIG5vLXJlc3RyaWN0ZWQtc3ludGF4ICovXG5cdFx0cmV0dXJuIG9iai54ID09PSBvYmo7XG5cdH0gY2F0Y2ggKGUpIHsgLyogdGhpcyBpcyBJRSA4LiAqL1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxufTtcbnZhciBzdXBwb3J0c0Rlc2NyaXB0b3JzID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIGFyZVByb3BlcnR5RGVzY3JpcHRvcnNTdXBwb3J0ZWQoKTtcblxudmFyIGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZSwgdmFsdWUsIHByZWRpY2F0ZSkge1xuXHRpZiAobmFtZSBpbiBvYmplY3QgJiYgKCFpc0Z1bmN0aW9uKHByZWRpY2F0ZSkgfHwgIXByZWRpY2F0ZSgpKSkge1xuXHRcdHJldHVybjtcblx0fVxuXHRpZiAoc3VwcG9ydHNEZXNjcmlwdG9ycykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIG5hbWUsIHtcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblx0XHRcdGVudW1lcmFibGU6IGZhbHNlLFxuXHRcdFx0dmFsdWU6IHZhbHVlLFxuXHRcdFx0d3JpdGFibGU6IHRydWVcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHRvYmplY3RbbmFtZV0gPSB2YWx1ZTtcblx0fVxufTtcblxudmFyIGRlZmluZVByb3BlcnRpZXMgPSBmdW5jdGlvbiAob2JqZWN0LCBtYXApIHtcblx0dmFyIHByZWRpY2F0ZXMgPSBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHt9O1xuXHR2YXIgcHJvcHMgPSBrZXlzKG1hcCk7XG5cdGlmIChoYXNTeW1ib2xzKSB7XG5cdFx0cHJvcHMgPSBwcm9wcy5jb25jYXQoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhtYXApKTtcblx0fVxuXHRmb3JlYWNoKHByb3BzLCBmdW5jdGlvbiAobmFtZSkge1xuXHRcdGRlZmluZVByb3BlcnR5KG9iamVjdCwgbmFtZSwgbWFwW25hbWVdLCBwcmVkaWNhdGVzW25hbWVdKTtcblx0fSk7XG59O1xuXG5kZWZpbmVQcm9wZXJ0aWVzLnN1cHBvcnRzRGVzY3JpcHRvcnMgPSAhIXN1cHBvcnRzRGVzY3JpcHRvcnM7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmaW5lUHJvcGVydGllcztcbiJdfQ==","deps":{"foreach":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\foreach\\index.js","object-keys":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js","source":"'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImJpbmQiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImNhbGwiLCJGdW5jdGlvbiIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE9BQU9DLFFBQVEsZUFBUixDQUFYOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCSCxLQUFLSSxJQUFMLENBQVVDLFNBQVNELElBQW5CLEVBQXlCRSxPQUFPQyxTQUFQLENBQWlCQyxjQUExQyxDQUFqQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBiaW5kID0gcmVxdWlyZSgnZnVuY3Rpb24tYmluZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLCBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcbiJdfQ==","deps":{"function-bind":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\implementation.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\implementation.js","source":"'use strict';\n\nvar ES = require('es-abstract/es7');\nvar has = require('has');\nvar bind = require('function-bind');\nvar isEnumerable = bind.call(Function.call, Object.prototype.propertyIsEnumerable);\n\nmodule.exports = function values(O) {\n\tvar obj = ES.RequireObjectCoercible(O);\n\tvar vals = [];\n\tfor (var key in obj) {\n\t\tif (has(obj, key) && isEnumerable(obj, key)) {\n\t\t\tvals.push(obj[key]);\n\t\t}\n\t}\n\treturn vals;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltcGxlbWVudGF0aW9uLmpzIl0sIm5hbWVzIjpbIkVTIiwicmVxdWlyZSIsImhhcyIsImJpbmQiLCJpc0VudW1lcmFibGUiLCJjYWxsIiwiRnVuY3Rpb24iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZXMiLCJPIiwib2JqIiwiUmVxdWlyZU9iamVjdENvZXJjaWJsZSIsInZhbHMiLCJrZXkiLCJwdXNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxLQUFLQyxRQUFRLGlCQUFSLENBQVQ7QUFDQSxJQUFJQyxNQUFNRCxRQUFRLEtBQVIsQ0FBVjtBQUNBLElBQUlFLE9BQU9GLFFBQVEsZUFBUixDQUFYO0FBQ0EsSUFBSUcsZUFBZUQsS0FBS0UsSUFBTCxDQUFVQyxTQUFTRCxJQUFuQixFQUF5QkUsT0FBT0MsU0FBUCxDQUFpQkMsb0JBQTFDLENBQW5COztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLE1BQVQsQ0FBZ0JDLENBQWhCLEVBQW1CO0FBQ25DLEtBQUlDLE1BQU1kLEdBQUdlLHNCQUFILENBQTBCRixDQUExQixDQUFWO0FBQ0EsS0FBSUcsT0FBTyxFQUFYO0FBQ0EsTUFBSyxJQUFJQyxHQUFULElBQWdCSCxHQUFoQixFQUFxQjtBQUNwQixNQUFJWixJQUFJWSxHQUFKLEVBQVNHLEdBQVQsS0FBaUJiLGFBQWFVLEdBQWIsRUFBa0JHLEdBQWxCLENBQXJCLEVBQTZDO0FBQzVDRCxRQUFLRSxJQUFMLENBQVVKLElBQUlHLEdBQUosQ0FBVjtBQUNBO0FBQ0Q7QUFDRCxRQUFPRCxJQUFQO0FBQ0EsQ0FURCIsImZpbGUiOiJpbXBsZW1lbnRhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEVTID0gcmVxdWlyZSgnZXMtYWJzdHJhY3QvZXM3Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnaGFzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJ2Z1bmN0aW9uLWJpbmQnKTtcbnZhciBpc0VudW1lcmFibGUgPSBiaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCwgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gdmFsdWVzKE8pIHtcblx0dmFyIG9iaiA9IEVTLlJlcXVpcmVPYmplY3RDb2VyY2libGUoTyk7XG5cdHZhciB2YWxzID0gW107XG5cdGZvciAodmFyIGtleSBpbiBvYmopIHtcblx0XHRpZiAoaGFzKG9iaiwga2V5KSAmJiBpc0VudW1lcmFibGUob2JqLCBrZXkpKSB7XG5cdFx0XHR2YWxzLnB1c2gob2JqW2tleV0pO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gdmFscztcbn07XG4iXX0=","deps":{"function-bind":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\index.js","es-abstract/es7":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es7.js","has":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\index.js","source":"'use strict';\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = getPolyfill();\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRlZmluZSIsInJlcXVpcmUiLCJpbXBsZW1lbnRhdGlvbiIsImdldFBvbHlmaWxsIiwic2hpbSIsInBvbHlmaWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsU0FBU0MsUUFBUSxtQkFBUixDQUFiOztBQUVBLElBQUlDLGlCQUFpQkQsUUFBUSxrQkFBUixDQUFyQjtBQUNBLElBQUlFLGNBQWNGLFFBQVEsWUFBUixDQUFsQjtBQUNBLElBQUlHLE9BQU9ILFFBQVEsUUFBUixDQUFYOztBQUVBLElBQUlJLFdBQVdGLGFBQWY7O0FBRUFILE9BQU9LLFFBQVAsRUFBaUI7QUFDaEJGLGNBQWFBLFdBREc7QUFFaEJELGlCQUFnQkEsY0FGQTtBQUdoQkUsT0FBTUE7QUFIVSxDQUFqQjs7QUFNQUUsT0FBT0MsT0FBUCxHQUFpQkYsUUFBakIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBkZWZpbmUgPSByZXF1aXJlKCdkZWZpbmUtcHJvcGVydGllcycpO1xuXG52YXIgaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG52YXIgZ2V0UG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG52YXIgc2hpbSA9IHJlcXVpcmUoJy4vc2hpbScpO1xuXG52YXIgcG9seWZpbGwgPSBnZXRQb2x5ZmlsbCgpO1xuXG5kZWZpbmUocG9seWZpbGwsIHtcblx0Z2V0UG9seWZpbGw6IGdldFBvbHlmaWxsLFxuXHRpbXBsZW1lbnRhdGlvbjogaW1wbGVtZW50YXRpb24sXG5cdHNoaW06IHNoaW1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvbHlmaWxsO1xuIl19","deps":{"./polyfill":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\polyfill.js","define-properties":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\define-properties\\index.js","./implementation":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\implementation.js","./shim":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\shim.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js","source":"'use strict';\n\nvar lowerCase = require('lower-case');\n\nvar NON_WORD_REGEXP = require('./vendor/non-word-regexp');\nvar CAMEL_CASE_REGEXP = require('./vendor/camel-case-regexp');\nvar CAMEL_CASE_UPPER_REGEXP = require('./vendor/camel-case-upper-regexp');\n\n/**\n * Sentence case a string.\n *\n * @param  {string} str\n * @param  {string} locale\n * @param  {string} replacement\n * @return {string}\n */\nmodule.exports = function (str, locale, replacement) {\n  if (str == null) {\n    return '';\n  }\n\n  replacement = typeof replacement !== 'string' ? ' ' : replacement;\n\n  function replace(match, index, value) {\n    if (index === 0 || index === value.length - match.length) {\n      return '';\n    }\n\n    return replacement;\n  }\n\n  str = String(str)\n  // Support camel case (\"camelCase\" -> \"camel Case\").\n  .replace(CAMEL_CASE_REGEXP, '$1 $2')\n  // Support odd camel case (\"CAMELCase\" -> \"CAMEL Case\").\n  .replace(CAMEL_CASE_UPPER_REGEXP, '$1 $2')\n  // Remove all non-word characters and replace with a single space.\n  .replace(NON_WORD_REGEXP, replace);\n\n  // Lower case the entire string.\n  return lowerCase(str, locale);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vLWNhc2UuanMiXSwibmFtZXMiOlsibG93ZXJDYXNlIiwicmVxdWlyZSIsIk5PTl9XT1JEX1JFR0VYUCIsIkNBTUVMX0NBU0VfUkVHRVhQIiwiQ0FNRUxfQ0FTRV9VUFBFUl9SRUdFWFAiLCJtb2R1bGUiLCJleHBvcnRzIiwic3RyIiwibG9jYWxlIiwicmVwbGFjZW1lbnQiLCJyZXBsYWNlIiwibWF0Y2giLCJpbmRleCIsInZhbHVlIiwibGVuZ3RoIiwiU3RyaW5nIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFlBQVlDLFFBQVEsWUFBUixDQUFoQjs7QUFFQSxJQUFJQyxrQkFBa0JELFFBQVEsMEJBQVIsQ0FBdEI7QUFDQSxJQUFJRSxvQkFBb0JGLFFBQVEsNEJBQVIsQ0FBeEI7QUFDQSxJQUFJRywwQkFBMEJILFFBQVEsa0NBQVIsQ0FBOUI7O0FBRUE7Ozs7Ozs7O0FBUUFJLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlQyxNQUFmLEVBQXVCQyxXQUF2QixFQUFvQztBQUNuRCxNQUFJRixPQUFPLElBQVgsRUFBaUI7QUFDZixXQUFPLEVBQVA7QUFDRDs7QUFFREUsZ0JBQWMsT0FBT0EsV0FBUCxLQUF1QixRQUF2QixHQUFrQyxHQUFsQyxHQUF3Q0EsV0FBdEQ7O0FBRUEsV0FBU0MsT0FBVCxDQUFrQkMsS0FBbEIsRUFBeUJDLEtBQXpCLEVBQWdDQyxLQUFoQyxFQUF1QztBQUNyQyxRQUFJRCxVQUFVLENBQVYsSUFBZUEsVUFBV0MsTUFBTUMsTUFBTixHQUFlSCxNQUFNRyxNQUFuRCxFQUE0RDtBQUMxRCxhQUFPLEVBQVA7QUFDRDs7QUFFRCxXQUFPTCxXQUFQO0FBQ0Q7O0FBRURGLFFBQU1RLE9BQU9SLEdBQVA7QUFDSjtBQURJLEdBRUhHLE9BRkcsQ0FFS1AsaUJBRkwsRUFFd0IsT0FGeEI7QUFHSjtBQUhJLEdBSUhPLE9BSkcsQ0FJS04sdUJBSkwsRUFJOEIsT0FKOUI7QUFLSjtBQUxJLEdBTUhNLE9BTkcsQ0FNS1IsZUFOTCxFQU1zQlEsT0FOdEIsQ0FBTjs7QUFRQTtBQUNBLFNBQU9WLFVBQVVPLEdBQVYsRUFBZUMsTUFBZixDQUFQO0FBQ0QsQ0F6QkQiLCJmaWxlIjoibm8tY2FzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBsb3dlckNhc2UgPSByZXF1aXJlKCdsb3dlci1jYXNlJylcblxudmFyIE5PTl9XT1JEX1JFR0VYUCA9IHJlcXVpcmUoJy4vdmVuZG9yL25vbi13b3JkLXJlZ2V4cCcpXG52YXIgQ0FNRUxfQ0FTRV9SRUdFWFAgPSByZXF1aXJlKCcuL3ZlbmRvci9jYW1lbC1jYXNlLXJlZ2V4cCcpXG52YXIgQ0FNRUxfQ0FTRV9VUFBFUl9SRUdFWFAgPSByZXF1aXJlKCcuL3ZlbmRvci9jYW1lbC1jYXNlLXVwcGVyLXJlZ2V4cCcpXG5cbi8qKlxuICogU2VudGVuY2UgY2FzZSBhIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHN0clxuICogQHBhcmFtICB7c3RyaW5nfSBsb2NhbGVcbiAqIEBwYXJhbSAge3N0cmluZ30gcmVwbGFjZW1lbnRcbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyLCBsb2NhbGUsIHJlcGxhY2VtZW50KSB7XG4gIGlmIChzdHIgPT0gbnVsbCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgcmVwbGFjZW1lbnQgPSB0eXBlb2YgcmVwbGFjZW1lbnQgIT09ICdzdHJpbmcnID8gJyAnIDogcmVwbGFjZW1lbnRcblxuICBmdW5jdGlvbiByZXBsYWNlIChtYXRjaCwgaW5kZXgsIHZhbHVlKSB7XG4gICAgaWYgKGluZGV4ID09PSAwIHx8IGluZGV4ID09PSAodmFsdWUubGVuZ3RoIC0gbWF0Y2gubGVuZ3RoKSkge1xuICAgICAgcmV0dXJuICcnXG4gICAgfVxuXG4gICAgcmV0dXJuIHJlcGxhY2VtZW50XG4gIH1cblxuICBzdHIgPSBTdHJpbmcoc3RyKVxuICAgIC8vIFN1cHBvcnQgY2FtZWwgY2FzZSAoXCJjYW1lbENhc2VcIiAtPiBcImNhbWVsIENhc2VcIikuXG4gICAgLnJlcGxhY2UoQ0FNRUxfQ0FTRV9SRUdFWFAsICckMSAkMicpXG4gICAgLy8gU3VwcG9ydCBvZGQgY2FtZWwgY2FzZSAoXCJDQU1FTENhc2VcIiAtPiBcIkNBTUVMIENhc2VcIikuXG4gICAgLnJlcGxhY2UoQ0FNRUxfQ0FTRV9VUFBFUl9SRUdFWFAsICckMSAkMicpXG4gICAgLy8gUmVtb3ZlIGFsbCBub24td29yZCBjaGFyYWN0ZXJzIGFuZCByZXBsYWNlIHdpdGggYSBzaW5nbGUgc3BhY2UuXG4gICAgLnJlcGxhY2UoTk9OX1dPUkRfUkVHRVhQLCByZXBsYWNlKVxuXG4gIC8vIExvd2VyIGNhc2UgdGhlIGVudGlyZSBzdHJpbmcuXG4gIHJldHVybiBsb3dlckNhc2Uoc3RyLCBsb2NhbGUpXG59XG4iXX0=","deps":{"lower-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js","./vendor/non-word-regexp":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\non-word-regexp.js","./vendor/camel-case-upper-regexp":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-upper-regexp.js","./vendor/camel-case-regexp":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-regexp.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\swap-case\\swap-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\swap-case\\swap-case.js","source":"'use strict';\n\nvar upperCase = require('upper-case');\nvar lowerCase = require('lower-case');\n\n/**\n * Swap the case of a string. Manually iterate over every character and check\n * instead of replacing certain characters for better unicode support.\n *\n * @param  {String} str\n * @param  {String} [locale]\n * @return {String}\n */\nmodule.exports = function (str, locale) {\n  if (str == null) {\n    return '';\n  }\n\n  var result = '';\n\n  for (var i = 0; i < str.length; i++) {\n    var c = str[i];\n    var u = upperCase(c, locale);\n\n    result += u === c ? lowerCase(c, locale) : u;\n  }\n\n  return result;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3YXAtY2FzZS5qcyJdLCJuYW1lcyI6WyJ1cHBlckNhc2UiLCJyZXF1aXJlIiwibG93ZXJDYXNlIiwibW9kdWxlIiwiZXhwb3J0cyIsInN0ciIsImxvY2FsZSIsInJlc3VsdCIsImkiLCJsZW5ndGgiLCJjIiwidSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxZQUFZQyxRQUFRLFlBQVIsQ0FBaEI7QUFDQSxJQUFJQyxZQUFZRCxRQUFRLFlBQVIsQ0FBaEI7O0FBRUE7Ozs7Ozs7O0FBUUFFLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlQyxNQUFmLEVBQXVCO0FBQ3RDLE1BQUlELE9BQU8sSUFBWCxFQUFpQjtBQUNmLFdBQU8sRUFBUDtBQUNEOztBQUVELE1BQUlFLFNBQVMsRUFBYjs7QUFFQSxPQUFLLElBQUlDLElBQUksQ0FBYixFQUFnQkEsSUFBSUgsSUFBSUksTUFBeEIsRUFBZ0NELEdBQWhDLEVBQXFDO0FBQ25DLFFBQUlFLElBQUlMLElBQUlHLENBQUosQ0FBUjtBQUNBLFFBQUlHLElBQUlYLFVBQVVVLENBQVYsRUFBYUosTUFBYixDQUFSOztBQUVBQyxjQUFVSSxNQUFNRCxDQUFOLEdBQVVSLFVBQVVRLENBQVYsRUFBYUosTUFBYixDQUFWLEdBQWlDSyxDQUEzQztBQUNEOztBQUVELFNBQU9KLE1BQVA7QUFDRCxDQWZEIiwiZmlsZSI6InN3YXAtY2FzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB1cHBlckNhc2UgPSByZXF1aXJlKCd1cHBlci1jYXNlJylcbnZhciBsb3dlckNhc2UgPSByZXF1aXJlKCdsb3dlci1jYXNlJylcblxuLyoqXG4gKiBTd2FwIHRoZSBjYXNlIG9mIGEgc3RyaW5nLiBNYW51YWxseSBpdGVyYXRlIG92ZXIgZXZlcnkgY2hhcmFjdGVyIGFuZCBjaGVja1xuICogaW5zdGVhZCBvZiByZXBsYWNpbmcgY2VydGFpbiBjaGFyYWN0ZXJzIGZvciBiZXR0ZXIgdW5pY29kZSBzdXBwb3J0LlxuICpcbiAqIEBwYXJhbSAge1N0cmluZ30gc3RyXG4gKiBAcGFyYW0gIHtTdHJpbmd9IFtsb2NhbGVdXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0ciwgbG9jYWxlKSB7XG4gIGlmIChzdHIgPT0gbnVsbCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgdmFyIHJlc3VsdCA9ICcnXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgYyA9IHN0cltpXVxuICAgIHZhciB1ID0gdXBwZXJDYXNlKGMsIGxvY2FsZSlcblxuICAgIHJlc3VsdCArPSB1ID09PSBjID8gbG93ZXJDYXNlKGMsIGxvY2FsZSkgOiB1XG4gIH1cblxuICByZXR1cm4gcmVzdWx0XG59XG4iXX0=","deps":{"lower-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js","upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\assign.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\assign.js","source":"\"use strict\";\n\nvar has = Object.prototype.hasOwnProperty;\nmodule.exports = function assign(target, source) {\n\tif (Object.assign) {\n\t\treturn Object.assign(target, source);\n\t}\n\tfor (var key in source) {\n\t\tif (has.call(source, key)) {\n\t\t\ttarget[key] = source[key];\n\t\t}\n\t}\n\treturn target;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFzc2lnbi5qcyJdLCJuYW1lcyI6WyJoYXMiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsIm1vZHVsZSIsImV4cG9ydHMiLCJhc3NpZ24iLCJ0YXJnZXQiLCJzb3VyY2UiLCJrZXkiLCJjYWxsIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLE1BQU1DLE9BQU9DLFNBQVAsQ0FBaUJDLGNBQTNCO0FBQ0FDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsTUFBVCxDQUFnQkMsTUFBaEIsRUFBd0JDLE1BQXhCLEVBQWdDO0FBQ2hELEtBQUlQLE9BQU9LLE1BQVgsRUFBbUI7QUFDbEIsU0FBT0wsT0FBT0ssTUFBUCxDQUFjQyxNQUFkLEVBQXNCQyxNQUF0QixDQUFQO0FBQ0E7QUFDRCxNQUFLLElBQUlDLEdBQVQsSUFBZ0JELE1BQWhCLEVBQXdCO0FBQ3ZCLE1BQUlSLElBQUlVLElBQUosQ0FBU0YsTUFBVCxFQUFpQkMsR0FBakIsQ0FBSixFQUEyQjtBQUMxQkYsVUFBT0UsR0FBUCxJQUFjRCxPQUFPQyxHQUFQLENBQWQ7QUFDQTtBQUNEO0FBQ0QsUUFBT0YsTUFBUDtBQUNBLENBVkQiLCJmaWxlIjoiYXNzaWduLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGhhcyA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGFzc2lnbih0YXJnZXQsIHNvdXJjZSkge1xuXHRpZiAoT2JqZWN0LmFzc2lnbikge1xuXHRcdHJldHVybiBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlKTtcblx0fVxuXHRmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG5cdFx0aWYgKGhhcy5jYWxsKHNvdXJjZSwga2V5KSkge1xuXHRcdFx0dGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHRhcmdldDtcbn07XG4iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\dot-case\\dot-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\dot-case\\dot-case.js","source":"'use strict';\n\nvar noCase = require('no-case');\n\n/**\n * Dot case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return noCase(value, locale, '.');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvdC1jYXNlLmpzIl0sIm5hbWVzIjpbIm5vQ2FzZSIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwidmFsdWUiLCJsb2NhbGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsU0FBU0MsUUFBUSxTQUFSLENBQWI7O0FBRUE7Ozs7Ozs7QUFPQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxLQUFWLEVBQWlCQyxNQUFqQixFQUF5QjtBQUN4QyxTQUFPTCxPQUFPSSxLQUFQLEVBQWNDLE1BQWQsRUFBc0IsR0FBdEIsQ0FBUDtBQUNELENBRkQiLCJmaWxlIjoiZG90LWNhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbm9DYXNlID0gcmVxdWlyZSgnbm8tY2FzZScpXG5cbi8qKlxuICogRG90IGNhc2UgYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtICB7c3RyaW5nfSBbbG9jYWxlXVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgbG9jYWxlKSB7XG4gIHJldHVybiBub0Nhc2UodmFsdWUsIGxvY2FsZSwgJy4nKVxufVxuIl19","deps":{"no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\path-case\\path-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\path-case\\path-case.js","source":"'use strict';\n\nvar noCase = require('no-case');\n\n/**\n * Path case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return noCase(value, locale, '/');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhdGgtY2FzZS5qcyJdLCJuYW1lcyI6WyJub0Nhc2UiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsInZhbHVlIiwibG9jYWxlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFNBQVNDLFFBQVEsU0FBUixDQUFiOztBQUVBOzs7Ozs7O0FBT0FDLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsS0FBVixFQUFpQkMsTUFBakIsRUFBeUI7QUFDeEMsU0FBT0wsT0FBT0ksS0FBUCxFQUFjQyxNQUFkLEVBQXNCLEdBQXRCLENBQVA7QUFDRCxDQUZEIiwiZmlsZSI6InBhdGgtY2FzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBub0Nhc2UgPSByZXF1aXJlKCduby1jYXNlJylcblxuLyoqXG4gKiBQYXRoIGNhc2UgYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtICB7c3RyaW5nfSBbbG9jYWxlXVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgbG9jYWxlKSB7XG4gIHJldHVybiBub0Nhc2UodmFsdWUsIGxvY2FsZSwgJy8nKVxufVxuIl19","deps":{"no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\snake-case\\snake-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\snake-case\\snake-case.js","source":"'use strict';\n\nvar noCase = require('no-case');\n\n/**\n * Snake case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return noCase(value, locale, '_');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNuYWtlLWNhc2UuanMiXSwibmFtZXMiOlsibm9DYXNlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxTQUFTQyxRQUFRLFNBQVIsQ0FBYjs7QUFFQTs7Ozs7OztBQU9BQyxPQUFPQyxPQUFQLEdBQWlCLFVBQVVDLEtBQVYsRUFBaUJDLE1BQWpCLEVBQXlCO0FBQ3hDLFNBQU9MLE9BQU9JLEtBQVAsRUFBY0MsTUFBZCxFQUFzQixHQUF0QixDQUFQO0FBQ0QsQ0FGRCIsImZpbGUiOiJzbmFrZS1jYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG5vQ2FzZSA9IHJlcXVpcmUoJ25vLWNhc2UnKVxuXG4vKipcbiAqIFNuYWtlIGNhc2UgYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtICB7c3RyaW5nfSBbbG9jYWxlXVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgbG9jYWxlKSB7XG4gIHJldHVybiBub0Nhc2UodmFsdWUsIGxvY2FsZSwgJ18nKVxufVxuIl19","deps":{"no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\camel-case\\camel-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\camel-case\\camel-case.js","source":"'use strict';\n\nvar upperCase = require('upper-case');\nvar noCase = require('no-case');\n\n/**\n * Camel case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale, mergeNumbers) {\n  var result = noCase(value, locale);\n\n  // Replace periods between numeric entities with an underscore.\n  if (!mergeNumbers) {\n    result = result.replace(/ (?=\\d)/g, '_');\n  }\n\n  // Replace spaces between words with an upper cased character.\n  return result.replace(/ (.)/g, function (m, $1) {\n    return upperCase($1, locale);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhbWVsLWNhc2UuanMiXSwibmFtZXMiOlsidXBwZXJDYXNlIiwicmVxdWlyZSIsIm5vQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsZSIsIm1lcmdlTnVtYmVycyIsInJlc3VsdCIsInJlcGxhY2UiLCJtIiwiJDEiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsWUFBWUMsUUFBUSxZQUFSLENBQWhCO0FBQ0EsSUFBSUMsU0FBU0QsUUFBUSxTQUFSLENBQWI7O0FBRUE7Ozs7Ozs7QUFPQUUsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxLQUFWLEVBQWlCQyxNQUFqQixFQUF5QkMsWUFBekIsRUFBdUM7QUFDdEQsTUFBSUMsU0FBU04sT0FBT0csS0FBUCxFQUFjQyxNQUFkLENBQWI7O0FBRUE7QUFDQSxNQUFJLENBQUNDLFlBQUwsRUFBbUI7QUFDakJDLGFBQVNBLE9BQU9DLE9BQVAsQ0FBZSxVQUFmLEVBQTJCLEdBQTNCLENBQVQ7QUFDRDs7QUFFRDtBQUNBLFNBQU9ELE9BQU9DLE9BQVAsQ0FBZSxPQUFmLEVBQXdCLFVBQVVDLENBQVYsRUFBYUMsRUFBYixFQUFpQjtBQUM5QyxXQUFPWCxVQUFVVyxFQUFWLEVBQWNMLE1BQWQsQ0FBUDtBQUNELEdBRk0sQ0FBUDtBQUdELENBWkQiLCJmaWxlIjoiY2FtZWwtY2FzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciB1cHBlckNhc2UgPSByZXF1aXJlKCd1cHBlci1jYXNlJylcbnZhciBub0Nhc2UgPSByZXF1aXJlKCduby1jYXNlJylcblxuLyoqXG4gKiBDYW1lbCBjYXNlIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSAge3N0cmluZ30gW2xvY2FsZV1cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsdWUsIGxvY2FsZSwgbWVyZ2VOdW1iZXJzKSB7XG4gIHZhciByZXN1bHQgPSBub0Nhc2UodmFsdWUsIGxvY2FsZSlcblxuICAvLyBSZXBsYWNlIHBlcmlvZHMgYmV0d2VlbiBudW1lcmljIGVudGl0aWVzIHdpdGggYW4gdW5kZXJzY29yZS5cbiAgaWYgKCFtZXJnZU51bWJlcnMpIHtcbiAgICByZXN1bHQgPSByZXN1bHQucmVwbGFjZSgvICg/PVxcZCkvZywgJ18nKVxuICB9XG5cbiAgLy8gUmVwbGFjZSBzcGFjZXMgYmV0d2VlbiB3b3JkcyB3aXRoIGFuIHVwcGVyIGNhc2VkIGNoYXJhY3Rlci5cbiAgcmV0dXJuIHJlc3VsdC5yZXBsYWNlKC8gKC4pL2csIGZ1bmN0aW9uIChtLCAkMSkge1xuICAgIHJldHVybiB1cHBlckNhc2UoJDEsIGxvY2FsZSlcbiAgfSlcbn1cbiJdfQ==","deps":{"upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js","no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\title-case\\title-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\title-case\\title-case.js","source":"'use strict';\n\nvar noCase = require('no-case');\nvar upperCase = require('upper-case');\n\n/**\n * Title case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return noCase(value, locale).replace(/^.| ./g, function (m) {\n    return upperCase(m, locale);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRpdGxlLWNhc2UuanMiXSwibmFtZXMiOlsibm9DYXNlIiwicmVxdWlyZSIsInVwcGVyQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsZSIsInJlcGxhY2UiLCJtIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFNBQVNDLFFBQVEsU0FBUixDQUFiO0FBQ0EsSUFBSUMsWUFBWUQsUUFBUSxZQUFSLENBQWhCOztBQUVBOzs7Ozs7O0FBT0FFLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsS0FBVixFQUFpQkMsTUFBakIsRUFBeUI7QUFDeEMsU0FBT04sT0FBT0ssS0FBUCxFQUFjQyxNQUFkLEVBQXNCQyxPQUF0QixDQUE4QixRQUE5QixFQUF3QyxVQUFVQyxDQUFWLEVBQWE7QUFDMUQsV0FBT04sVUFBVU0sQ0FBVixFQUFhRixNQUFiLENBQVA7QUFDRCxHQUZNLENBQVA7QUFHRCxDQUpEIiwiZmlsZSI6InRpdGxlLWNhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbm9DYXNlID0gcmVxdWlyZSgnbm8tY2FzZScpXG52YXIgdXBwZXJDYXNlID0gcmVxdWlyZSgndXBwZXItY2FzZScpXG5cbi8qKlxuICogVGl0bGUgY2FzZSBhIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0gIHtzdHJpbmd9IFtsb2NhbGVdXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlLCBsb2NhbGUpIHtcbiAgcmV0dXJuIG5vQ2FzZSh2YWx1ZSwgbG9jYWxlKS5yZXBsYWNlKC9eLnwgLi9nLCBmdW5jdGlvbiAobSkge1xuICAgIHJldHVybiB1cHBlckNhc2UobSwgbG9jYWxlKVxuICB9KVxufVxuIl19","deps":{"no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js","upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-lower-case\\is-lower-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-lower-case\\is-lower-case.js","source":"'use strict';\n\nvar lowerCase = require('lower-case');\n\n/**\n * Check if a string is lower case.\n *\n * @param  {String}  string\n * @param  {String}  [locale]\n * @return {Boolean}\n */\nmodule.exports = function (string, locale) {\n  return lowerCase(string, locale) === string;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLWxvd2VyLWNhc2UuanMiXSwibmFtZXMiOlsibG93ZXJDYXNlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdHJpbmciLCJsb2NhbGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsWUFBWUMsUUFBUSxZQUFSLENBQWhCOztBQUVBOzs7Ozs7O0FBT0FDLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsTUFBVixFQUFrQkMsTUFBbEIsRUFBMEI7QUFDekMsU0FBT0wsVUFBVUksTUFBVixFQUFrQkMsTUFBbEIsTUFBOEJELE1BQXJDO0FBQ0QsQ0FGRCIsImZpbGUiOiJpcy1sb3dlci1jYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGxvd2VyQ2FzZSA9IHJlcXVpcmUoJ2xvd2VyLWNhc2UnKVxuXG4vKipcbiAqIENoZWNrIGlmIGEgc3RyaW5nIGlzIGxvd2VyIGNhc2UuXG4gKlxuICogQHBhcmFtICB7U3RyaW5nfSAgc3RyaW5nXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICBbbG9jYWxlXVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyaW5nLCBsb2NhbGUpIHtcbiAgcmV0dXJuIGxvd2VyQ2FzZShzdHJpbmcsIGxvY2FsZSkgPT09IHN0cmluZ1xufVxuIl19","deps":{"lower-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\header-case\\header-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\header-case\\header-case.js","source":"'use strict';\n\nvar noCase = require('no-case');\nvar upperCase = require('upper-case');\n\n/**\n * Header case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return noCase(value, locale, '-').replace(/^.|-./g, function (m) {\n    return upperCase(m, locale);\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlYWRlci1jYXNlLmpzIl0sIm5hbWVzIjpbIm5vQ2FzZSIsInJlcXVpcmUiLCJ1cHBlckNhc2UiLCJtb2R1bGUiLCJleHBvcnRzIiwidmFsdWUiLCJsb2NhbGUiLCJyZXBsYWNlIiwibSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxTQUFTQyxRQUFRLFNBQVIsQ0FBYjtBQUNBLElBQUlDLFlBQVlELFFBQVEsWUFBUixDQUFoQjs7QUFFQTs7Ozs7OztBQU9BRSxPQUFPQyxPQUFQLEdBQWlCLFVBQVVDLEtBQVYsRUFBaUJDLE1BQWpCLEVBQXlCO0FBQ3hDLFNBQU9OLE9BQU9LLEtBQVAsRUFBY0MsTUFBZCxFQUFzQixHQUF0QixFQUEyQkMsT0FBM0IsQ0FBbUMsUUFBbkMsRUFBNkMsVUFBVUMsQ0FBVixFQUFhO0FBQy9ELFdBQU9OLFVBQVVNLENBQVYsRUFBYUYsTUFBYixDQUFQO0FBQ0QsR0FGTSxDQUFQO0FBR0QsQ0FKRCIsImZpbGUiOiJoZWFkZXItY2FzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBub0Nhc2UgPSByZXF1aXJlKCduby1jYXNlJylcbnZhciB1cHBlckNhc2UgPSByZXF1aXJlKCd1cHBlci1jYXNlJylcblxuLyoqXG4gKiBIZWFkZXIgY2FzZSBhIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gIHtzdHJpbmd9IHZhbHVlXG4gKiBAcGFyYW0gIHtzdHJpbmd9IFtsb2NhbGVdXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHZhbHVlLCBsb2NhbGUpIHtcbiAgcmV0dXJuIG5vQ2FzZSh2YWx1ZSwgbG9jYWxlLCAnLScpLnJlcGxhY2UoL14ufC0uL2csIGZ1bmN0aW9uIChtKSB7XG4gICAgcmV0dXJuIHVwcGVyQ2FzZShtLCBsb2NhbGUpXG4gIH0pXG59XG4iXX0=","deps":{"no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js","upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\pascal-case\\pascal-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\pascal-case\\pascal-case.js","source":"'use strict';\n\nvar camelCase = require('camel-case');\nvar upperCaseFirst = require('upper-case-first');\n\n/**\n * Pascal case a string.\n *\n * @param  {string}  value\n * @param  {string}  [locale]\n * @param  {boolean} [mergeNumbers]\n * @return {string}\n */\nmodule.exports = function (value, locale, mergeNumbers) {\n  return upperCaseFirst(camelCase(value, locale, mergeNumbers), locale);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc2NhbC1jYXNlLmpzIl0sIm5hbWVzIjpbImNhbWVsQ2FzZSIsInJlcXVpcmUiLCJ1cHBlckNhc2VGaXJzdCIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsZSIsIm1lcmdlTnVtYmVycyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxZQUFZQyxRQUFRLFlBQVIsQ0FBaEI7QUFDQSxJQUFJQyxpQkFBaUJELFFBQVEsa0JBQVIsQ0FBckI7O0FBRUE7Ozs7Ozs7O0FBUUFFLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsS0FBVixFQUFpQkMsTUFBakIsRUFBeUJDLFlBQXpCLEVBQXVDO0FBQ3RELFNBQU9MLGVBQWVGLFVBQVVLLEtBQVYsRUFBaUJDLE1BQWpCLEVBQXlCQyxZQUF6QixDQUFmLEVBQXVERCxNQUF2RCxDQUFQO0FBQ0QsQ0FGRCIsImZpbGUiOiJwYXNjYWwtY2FzZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBjYW1lbENhc2UgPSByZXF1aXJlKCdjYW1lbC1jYXNlJylcbnZhciB1cHBlckNhc2VGaXJzdCA9IHJlcXVpcmUoJ3VwcGVyLWNhc2UtZmlyc3QnKVxuXG4vKipcbiAqIFBhc2NhbCBjYXNlIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gIHZhbHVlXG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBbbG9jYWxlXVxuICogQHBhcmFtICB7Ym9vbGVhbn0gW21lcmdlTnVtYmVyc11cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsdWUsIGxvY2FsZSwgbWVyZ2VOdW1iZXJzKSB7XG4gIHJldHVybiB1cHBlckNhc2VGaXJzdChjYW1lbENhc2UodmFsdWUsIGxvY2FsZSwgbWVyZ2VOdW1iZXJzKSwgbG9jYWxlKVxufVxuIl19","deps":{"camel-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\camel-case\\camel-case.js","upper-case-first":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case-first\\upper-case-first.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\constant-case\\constant-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\constant-case\\constant-case.js","source":"'use strict';\n\nvar upperCase = require('upper-case');\nvar snakeCase = require('snake-case');\n\n/**\n * Constant case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return upperCase(snakeCase(value, locale), locale);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnN0YW50LWNhc2UuanMiXSwibmFtZXMiOlsidXBwZXJDYXNlIiwicmVxdWlyZSIsInNuYWtlQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxZQUFZQyxRQUFRLFlBQVIsQ0FBaEI7QUFDQSxJQUFJQyxZQUFZRCxRQUFRLFlBQVIsQ0FBaEI7O0FBRUE7Ozs7Ozs7QUFPQUUsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxLQUFWLEVBQWlCQyxNQUFqQixFQUF5QjtBQUN4QyxTQUFPTixVQUFVRSxVQUFVRyxLQUFWLEVBQWlCQyxNQUFqQixDQUFWLEVBQW9DQSxNQUFwQyxDQUFQO0FBQ0QsQ0FGRCIsImZpbGUiOiJjb25zdGFudC1jYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHVwcGVyQ2FzZSA9IHJlcXVpcmUoJ3VwcGVyLWNhc2UnKVxudmFyIHNuYWtlQ2FzZSA9IHJlcXVpcmUoJ3NuYWtlLWNhc2UnKVxuXG4vKipcbiAqIENvbnN0YW50IGNhc2UgYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtICB7c3RyaW5nfSBbbG9jYWxlXVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgbG9jYWxlKSB7XG4gIHJldHVybiB1cHBlckNhc2Uoc25ha2VDYXNlKHZhbHVlLCBsb2NhbGUpLCBsb2NhbGUpXG59XG4iXX0=","deps":{"snake-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\snake-case\\snake-case.js","upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\param-case\\param-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\param-case\\param-case.js","source":"'use strict';\n\nvar noCase = require('no-case');\n\n/**\n * Param case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return noCase(value, locale, '-');\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcmFtLWNhc2UuanMiXSwibmFtZXMiOlsibm9DYXNlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWx1ZSIsImxvY2FsZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxTQUFTQyxRQUFRLFNBQVIsQ0FBYjs7QUFFQTs7Ozs7OztBQU9BQyxPQUFPQyxPQUFQLEdBQWlCLFVBQVVDLEtBQVYsRUFBaUJDLE1BQWpCLEVBQXlCO0FBQ3hDLFNBQU9MLE9BQU9JLEtBQVAsRUFBY0MsTUFBZCxFQUFzQixHQUF0QixDQUFQO0FBQ0QsQ0FGRCIsImZpbGUiOiJwYXJhbS1jYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIG5vQ2FzZSA9IHJlcXVpcmUoJ25vLWNhc2UnKVxuXG4vKipcbiAqIFBhcmFtIGNhc2UgYSBzdHJpbmcuXG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSB2YWx1ZVxuICogQHBhcmFtICB7c3RyaW5nfSBbbG9jYWxlXVxuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgbG9jYWxlKSB7XG4gIHJldHVybiBub0Nhc2UodmFsdWUsIGxvY2FsZSwgJy0nKVxufVxuIl19","deps":{"no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case-first\\lower-case-first.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case-first\\lower-case-first.js","source":"'use strict';\n\nvar lowerCase = require('lower-case');\n\n/**\n * Lower case the first character of a string.\n *\n * @param  {String} str\n * @return {String}\n */\nmodule.exports = function (str, locale) {\n  if (str == null) {\n    return '';\n  }\n\n  str = String(str);\n\n  return lowerCase(str.charAt(0), locale) + str.substr(1);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvd2VyLWNhc2UtZmlyc3QuanMiXSwibmFtZXMiOlsibG93ZXJDYXNlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdHIiLCJsb2NhbGUiLCJTdHJpbmciLCJjaGFyQXQiLCJzdWJzdHIiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsWUFBWUMsUUFBUSxZQUFSLENBQWhCOztBQUVBOzs7Ozs7QUFNQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWVDLE1BQWYsRUFBdUI7QUFDdEMsTUFBSUQsT0FBTyxJQUFYLEVBQWlCO0FBQ2YsV0FBTyxFQUFQO0FBQ0Q7O0FBRURBLFFBQU1FLE9BQU9GLEdBQVAsQ0FBTjs7QUFFQSxTQUFPSixVQUFVSSxJQUFJRyxNQUFKLENBQVcsQ0FBWCxDQUFWLEVBQXlCRixNQUF6QixJQUFtQ0QsSUFBSUksTUFBSixDQUFXLENBQVgsQ0FBMUM7QUFDRCxDQVJEIiwiZmlsZSI6Imxvd2VyLWNhc2UtZmlyc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbG93ZXJDYXNlID0gcmVxdWlyZSgnbG93ZXItY2FzZScpXG5cbi8qKlxuICogTG93ZXIgY2FzZSB0aGUgZmlyc3QgY2hhcmFjdGVyIG9mIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0ciwgbG9jYWxlKSB7XG4gIGlmIChzdHIgPT0gbnVsbCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgc3RyID0gU3RyaW5nKHN0cilcblxuICByZXR1cm4gbG93ZXJDYXNlKHN0ci5jaGFyQXQoMCksIGxvY2FsZSkgKyBzdHIuc3Vic3RyKDEpXG59XG4iXX0=","deps":{"lower-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-upper-case\\is-upper-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-upper-case\\is-upper-case.js","source":"'use strict';\n\nvar upperCase = require('upper-case');\n\n/**\n * Check if a string is upper case.\n *\n * @param  {String}  string\n * @param  {String}  [locale]\n * @return {Boolean}\n */\nmodule.exports = function (string, locale) {\n  return upperCase(string, locale) === string;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzLXVwcGVyLWNhc2UuanMiXSwibmFtZXMiOlsidXBwZXJDYXNlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdHJpbmciLCJsb2NhbGUiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsWUFBWUMsUUFBUSxZQUFSLENBQWhCOztBQUVBOzs7Ozs7O0FBT0FDLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsTUFBVixFQUFrQkMsTUFBbEIsRUFBMEI7QUFDekMsU0FBT0wsVUFBVUksTUFBVixFQUFrQkMsTUFBbEIsTUFBOEJELE1BQXJDO0FBQ0QsQ0FGRCIsImZpbGUiOiJpcy11cHBlci1jYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHVwcGVyQ2FzZSA9IHJlcXVpcmUoJ3VwcGVyLWNhc2UnKVxuXG4vKipcbiAqIENoZWNrIGlmIGEgc3RyaW5nIGlzIHVwcGVyIGNhc2UuXG4gKlxuICogQHBhcmFtICB7U3RyaW5nfSAgc3RyaW5nXG4gKiBAcGFyYW0gIHtTdHJpbmd9ICBbbG9jYWxlXVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoc3RyaW5nLCBsb2NhbGUpIHtcbiAgcmV0dXJuIHVwcGVyQ2FzZShzdHJpbmcsIGxvY2FsZSkgPT09IHN0cmluZ1xufVxuIl19","deps":{"upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\sentence-case\\sentence-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\sentence-case\\sentence-case.js","source":"'use strict';\n\nvar noCase = require('no-case');\nvar upperCaseFirst = require('upper-case-first');\n\n/**\n * Sentence case a string.\n *\n * @param  {string} value\n * @param  {string} [locale]\n * @return {string}\n */\nmodule.exports = function (value, locale) {\n  return upperCaseFirst(noCase(value, locale), locale);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbnRlbmNlLWNhc2UuanMiXSwibmFtZXMiOlsibm9DYXNlIiwicmVxdWlyZSIsInVwcGVyQ2FzZUZpcnN0IiwibW9kdWxlIiwiZXhwb3J0cyIsInZhbHVlIiwibG9jYWxlIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQUlBLFNBQVNDLFFBQVEsU0FBUixDQUFiO0FBQ0EsSUFBSUMsaUJBQWlCRCxRQUFRLGtCQUFSLENBQXJCOztBQUVBOzs7Ozs7O0FBT0FFLE9BQU9DLE9BQVAsR0FBaUIsVUFBVUMsS0FBVixFQUFpQkMsTUFBakIsRUFBeUI7QUFDeEMsU0FBT0osZUFBZUYsT0FBT0ssS0FBUCxFQUFjQyxNQUFkLENBQWYsRUFBc0NBLE1BQXRDLENBQVA7QUFDRCxDQUZEIiwiZmlsZSI6InNlbnRlbmNlLWNhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgbm9DYXNlID0gcmVxdWlyZSgnbm8tY2FzZScpXG52YXIgdXBwZXJDYXNlRmlyc3QgPSByZXF1aXJlKCd1cHBlci1jYXNlLWZpcnN0JylcblxuLyoqXG4gKiBTZW50ZW5jZSBjYXNlIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge3N0cmluZ30gdmFsdWVcbiAqIEBwYXJhbSAge3N0cmluZ30gW2xvY2FsZV1cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodmFsdWUsIGxvY2FsZSkge1xuICByZXR1cm4gdXBwZXJDYXNlRmlyc3Qobm9DYXNlKHZhbHVlLCBsb2NhbGUpLCBsb2NhbGUpXG59XG4iXX0=","deps":{"no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js","upper-case-first":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case-first\\upper-case-first.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case-first\\upper-case-first.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case-first\\upper-case-first.js","source":"'use strict';\n\nvar upperCase = require('upper-case');\n\n/**\n * Upper case the first character of a string.\n *\n * @param  {String} str\n * @return {String}\n */\nmodule.exports = function (str, locale) {\n  if (str == null) {\n    return '';\n  }\n\n  str = String(str);\n\n  return upperCase(str.charAt(0), locale) + str.substr(1);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVwcGVyLWNhc2UtZmlyc3QuanMiXSwibmFtZXMiOlsidXBwZXJDYXNlIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzdHIiLCJsb2NhbGUiLCJTdHJpbmciLCJjaGFyQXQiLCJzdWJzdHIiXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBSUEsWUFBWUMsUUFBUSxZQUFSLENBQWhCOztBQUVBOzs7Ozs7QUFNQUMsT0FBT0MsT0FBUCxHQUFpQixVQUFVQyxHQUFWLEVBQWVDLE1BQWYsRUFBdUI7QUFDdEMsTUFBSUQsT0FBTyxJQUFYLEVBQWlCO0FBQ2YsV0FBTyxFQUFQO0FBQ0Q7O0FBRURBLFFBQU1FLE9BQU9GLEdBQVAsQ0FBTjs7QUFFQSxTQUFPSixVQUFVSSxJQUFJRyxNQUFKLENBQVcsQ0FBWCxDQUFWLEVBQXlCRixNQUF6QixJQUFtQ0QsSUFBSUksTUFBSixDQUFXLENBQVgsQ0FBMUM7QUFDRCxDQVJEIiwiZmlsZSI6InVwcGVyLWNhc2UtZmlyc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgdXBwZXJDYXNlID0gcmVxdWlyZSgndXBwZXItY2FzZScpXG5cbi8qKlxuICogVXBwZXIgY2FzZSB0aGUgZmlyc3QgY2hhcmFjdGVyIG9mIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSAge1N0cmluZ30gc3RyXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0ciwgbG9jYWxlKSB7XG4gIGlmIChzdHIgPT0gbnVsbCkge1xuICAgIHJldHVybiAnJ1xuICB9XG5cbiAgc3RyID0gU3RyaW5nKHN0cilcblxuICByZXR1cm4gdXBwZXJDYXNlKHN0ci5jaGFyQXQoMCksIGxvY2FsZSkgKyBzdHIuc3Vic3RyKDEpXG59XG4iXX0=","deps":{"upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\change-case\\change-case.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\change-case\\change-case.js","source":"'use strict';\n\nexports.no = exports.noCase = require('no-case');\nexports.dot = exports.dotCase = require('dot-case');\nexports.swap = exports.swapCase = require('swap-case');\nexports.path = exports.pathCase = require('path-case');\nexports.upper = exports.upperCase = require('upper-case');\nexports.lower = exports.lowerCase = require('lower-case');\nexports.camel = exports.camelCase = require('camel-case');\nexports.snake = exports.snakeCase = require('snake-case');\nexports.title = exports.titleCase = require('title-case');\nexports.param = exports.paramCase = require('param-case');\nexports.header = exports.headerCase = require('header-case');\nexports.pascal = exports.pascalCase = require('pascal-case');\nexports.constant = exports.constantCase = require('constant-case');\nexports.sentence = exports.sentenceCase = require('sentence-case');\nexports.isUpper = exports.isUpperCase = require('is-upper-case');\nexports.isLower = exports.isLowerCase = require('is-lower-case');\nexports.ucFirst = exports.upperCaseFirst = require('upper-case-first');\nexports.lcFirst = exports.lowerCaseFirst = require('lower-case-first');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYW5nZS1jYXNlLmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJubyIsIm5vQ2FzZSIsInJlcXVpcmUiLCJkb3QiLCJkb3RDYXNlIiwic3dhcCIsInN3YXBDYXNlIiwicGF0aCIsInBhdGhDYXNlIiwidXBwZXIiLCJ1cHBlckNhc2UiLCJsb3dlciIsImxvd2VyQ2FzZSIsImNhbWVsIiwiY2FtZWxDYXNlIiwic25ha2UiLCJzbmFrZUNhc2UiLCJ0aXRsZSIsInRpdGxlQ2FzZSIsInBhcmFtIiwicGFyYW1DYXNlIiwiaGVhZGVyIiwiaGVhZGVyQ2FzZSIsInBhc2NhbCIsInBhc2NhbENhc2UiLCJjb25zdGFudCIsImNvbnN0YW50Q2FzZSIsInNlbnRlbmNlIiwic2VudGVuY2VDYXNlIiwiaXNVcHBlciIsImlzVXBwZXJDYXNlIiwiaXNMb3dlciIsImlzTG93ZXJDYXNlIiwidWNGaXJzdCIsInVwcGVyQ2FzZUZpcnN0IiwibGNGaXJzdCIsImxvd2VyQ2FzZUZpcnN0Il0sIm1hcHBpbmdzIjoiOztBQUFBQSxRQUFRQyxFQUFSLEdBQWFELFFBQVFFLE1BQVIsR0FBaUJDLFFBQVEsU0FBUixDQUE5QjtBQUNBSCxRQUFRSSxHQUFSLEdBQWNKLFFBQVFLLE9BQVIsR0FBa0JGLFFBQVEsVUFBUixDQUFoQztBQUNBSCxRQUFRTSxJQUFSLEdBQWVOLFFBQVFPLFFBQVIsR0FBbUJKLFFBQVEsV0FBUixDQUFsQztBQUNBSCxRQUFRUSxJQUFSLEdBQWVSLFFBQVFTLFFBQVIsR0FBbUJOLFFBQVEsV0FBUixDQUFsQztBQUNBSCxRQUFRVSxLQUFSLEdBQWdCVixRQUFRVyxTQUFSLEdBQW9CUixRQUFRLFlBQVIsQ0FBcEM7QUFDQUgsUUFBUVksS0FBUixHQUFnQlosUUFBUWEsU0FBUixHQUFvQlYsUUFBUSxZQUFSLENBQXBDO0FBQ0FILFFBQVFjLEtBQVIsR0FBZ0JkLFFBQVFlLFNBQVIsR0FBb0JaLFFBQVEsWUFBUixDQUFwQztBQUNBSCxRQUFRZ0IsS0FBUixHQUFnQmhCLFFBQVFpQixTQUFSLEdBQW9CZCxRQUFRLFlBQVIsQ0FBcEM7QUFDQUgsUUFBUWtCLEtBQVIsR0FBZ0JsQixRQUFRbUIsU0FBUixHQUFvQmhCLFFBQVEsWUFBUixDQUFwQztBQUNBSCxRQUFRb0IsS0FBUixHQUFnQnBCLFFBQVFxQixTQUFSLEdBQW9CbEIsUUFBUSxZQUFSLENBQXBDO0FBQ0FILFFBQVFzQixNQUFSLEdBQWlCdEIsUUFBUXVCLFVBQVIsR0FBcUJwQixRQUFRLGFBQVIsQ0FBdEM7QUFDQUgsUUFBUXdCLE1BQVIsR0FBaUJ4QixRQUFReUIsVUFBUixHQUFxQnRCLFFBQVEsYUFBUixDQUF0QztBQUNBSCxRQUFRMEIsUUFBUixHQUFtQjFCLFFBQVEyQixZQUFSLEdBQXVCeEIsUUFBUSxlQUFSLENBQTFDO0FBQ0FILFFBQVE0QixRQUFSLEdBQW1CNUIsUUFBUTZCLFlBQVIsR0FBdUIxQixRQUFRLGVBQVIsQ0FBMUM7QUFDQUgsUUFBUThCLE9BQVIsR0FBa0I5QixRQUFRK0IsV0FBUixHQUFzQjVCLFFBQVEsZUFBUixDQUF4QztBQUNBSCxRQUFRZ0MsT0FBUixHQUFrQmhDLFFBQVFpQyxXQUFSLEdBQXNCOUIsUUFBUSxlQUFSLENBQXhDO0FBQ0FILFFBQVFrQyxPQUFSLEdBQWtCbEMsUUFBUW1DLGNBQVIsR0FBeUJoQyxRQUFRLGtCQUFSLENBQTNDO0FBQ0FILFFBQVFvQyxPQUFSLEdBQWtCcEMsUUFBUXFDLGNBQVIsR0FBeUJsQyxRQUFRLGtCQUFSLENBQTNDIiwiZmlsZSI6ImNoYW5nZS1jYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5ubyA9IGV4cG9ydHMubm9DYXNlID0gcmVxdWlyZSgnbm8tY2FzZScpXG5leHBvcnRzLmRvdCA9IGV4cG9ydHMuZG90Q2FzZSA9IHJlcXVpcmUoJ2RvdC1jYXNlJylcbmV4cG9ydHMuc3dhcCA9IGV4cG9ydHMuc3dhcENhc2UgPSByZXF1aXJlKCdzd2FwLWNhc2UnKVxuZXhwb3J0cy5wYXRoID0gZXhwb3J0cy5wYXRoQ2FzZSA9IHJlcXVpcmUoJ3BhdGgtY2FzZScpXG5leHBvcnRzLnVwcGVyID0gZXhwb3J0cy51cHBlckNhc2UgPSByZXF1aXJlKCd1cHBlci1jYXNlJylcbmV4cG9ydHMubG93ZXIgPSBleHBvcnRzLmxvd2VyQ2FzZSA9IHJlcXVpcmUoJ2xvd2VyLWNhc2UnKVxuZXhwb3J0cy5jYW1lbCA9IGV4cG9ydHMuY2FtZWxDYXNlID0gcmVxdWlyZSgnY2FtZWwtY2FzZScpXG5leHBvcnRzLnNuYWtlID0gZXhwb3J0cy5zbmFrZUNhc2UgPSByZXF1aXJlKCdzbmFrZS1jYXNlJylcbmV4cG9ydHMudGl0bGUgPSBleHBvcnRzLnRpdGxlQ2FzZSA9IHJlcXVpcmUoJ3RpdGxlLWNhc2UnKVxuZXhwb3J0cy5wYXJhbSA9IGV4cG9ydHMucGFyYW1DYXNlID0gcmVxdWlyZSgncGFyYW0tY2FzZScpXG5leHBvcnRzLmhlYWRlciA9IGV4cG9ydHMuaGVhZGVyQ2FzZSA9IHJlcXVpcmUoJ2hlYWRlci1jYXNlJylcbmV4cG9ydHMucGFzY2FsID0gZXhwb3J0cy5wYXNjYWxDYXNlID0gcmVxdWlyZSgncGFzY2FsLWNhc2UnKVxuZXhwb3J0cy5jb25zdGFudCA9IGV4cG9ydHMuY29uc3RhbnRDYXNlID0gcmVxdWlyZSgnY29uc3RhbnQtY2FzZScpXG5leHBvcnRzLnNlbnRlbmNlID0gZXhwb3J0cy5zZW50ZW5jZUNhc2UgPSByZXF1aXJlKCdzZW50ZW5jZS1jYXNlJylcbmV4cG9ydHMuaXNVcHBlciA9IGV4cG9ydHMuaXNVcHBlckNhc2UgPSByZXF1aXJlKCdpcy11cHBlci1jYXNlJylcbmV4cG9ydHMuaXNMb3dlciA9IGV4cG9ydHMuaXNMb3dlckNhc2UgPSByZXF1aXJlKCdpcy1sb3dlci1jYXNlJylcbmV4cG9ydHMudWNGaXJzdCA9IGV4cG9ydHMudXBwZXJDYXNlRmlyc3QgPSByZXF1aXJlKCd1cHBlci1jYXNlLWZpcnN0JylcbmV4cG9ydHMubGNGaXJzdCA9IGV4cG9ydHMubG93ZXJDYXNlRmlyc3QgPSByZXF1aXJlKCdsb3dlci1jYXNlLWZpcnN0JylcbiJdfQ==","deps":{"upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js","lower-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js","swap-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\swap-case\\swap-case.js","dot-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\dot-case\\dot-case.js","path-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\path-case\\path-case.js","snake-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\snake-case\\snake-case.js","camel-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\camel-case\\camel-case.js","title-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\title-case\\title-case.js","is-lower-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-lower-case\\is-lower-case.js","header-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\header-case\\header-case.js","constant-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\constant-case\\constant-case.js","lower-case-first":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case-first\\lower-case-first.js","is-upper-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-upper-case\\is-upper-case.js","param-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\param-case\\param-case.js","pascal-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\pascal-case\\pascal-case.js","sentence-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\sentence-case\\sentence-case.js","upper-case-first":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case-first\\upper-case-first.js","no-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\schema2element.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\schema2element.js","source":"'use strict';\n\nexports.__esModule = true;\n\nvar _react = require('react');\n\nvar _reactDomFactories = require('react-dom-factories');\n\nvar _reactDomFactories2 = _interopRequireDefault(_reactDomFactories);\n\nvar _changeCase = require('change-case');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar _componentMap = new WeakMap();\n\nvar ReactJsonSchema = function () {\n  function ReactJsonSchema(componentMap) {\n    _classCallCheck(this, ReactJsonSchema);\n\n    if (componentMap) this.setComponentMap(componentMap);\n  }\n\n  ReactJsonSchema.prototype.parseSchema = function parseSchema(schema) {\n    var element = null;\n    var elements = null;\n    if (Array.isArray(schema)) {\n      elements = this.parseSubSchemas(schema);\n    } else {\n      element = this.createComponent(schema);\n    }\n    return element || elements;\n  };\n\n  ReactJsonSchema.prototype.parseSubSchemas = function parseSubSchemas() {\n    var subSchemas = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var Components = [];\n    var index = 0;\n    for (var _iterator = subSchemas, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var subSchema = _ref;\n\n      if (typeof subSchema === 'string') {\n        Components.push(subSchema);\n      } else {\n        subSchema.key = typeof subSchema.key !== 'undefined' ? subSchema.key : index;\n        Components.push(this.parseSchema(subSchema));\n        index++;\n      }\n    }\n    return Components;\n  };\n\n  ReactJsonSchema.prototype.createComponent = function createComponent(schema) {\n    var component = schema.component,\n        children = schema.children,\n        text = schema.text,\n        rest = _objectWithoutProperties(schema, ['component', 'children', 'text']);\n\n    var Component = this.resolveComponent(schema);\n    var Children = typeof text !== 'undefined' ? text : this.resolveComponentChildren(schema);\n    return (0, _react.createElement)(Component, rest, Children);\n  };\n\n  ReactJsonSchema.prototype.resolveComponent = function resolveComponent(schema) {\n    var componentMap = this.getComponentMap();\n    var Component = void 0;\n\n    // bail early if there is no component name\n    if (!schema.hasOwnProperty('component')) {\n      throw new Error('ReactJsonSchema could not resolve a component due to a missing component attribute in the schema.');\n    }\n\n    // if it's already a ref bail early\n    if (schema.component === Object(schema.component)) {\n      return schema.component;\n    }\n\n    var _schema$component$spl = schema.component.split('.'),\n        name = _schema$component$spl[0],\n        subs = _schema$component$spl.slice(1);\n\n    // find the def in the provided map\n\n\n    if (componentMap) {\n      Component = componentMap[name];\n      if (!Component) Component = componentMap[(0, _changeCase.paramCase)(name)];\n      if (!Component) Component = componentMap[(0, _changeCase.pascalCase)(name)];\n\n      for (var i = 0; i < subs.length; i++) {\n        Component = Component[subs[i]];\n      }\n    }\n\n    // if still nothing found it's a native DOM component or an error\n    if (!Component) {\n      if (_reactDomFactories2.default.hasOwnProperty(name)) {\n        Component = schema.component;\n      } else {\n        throw new Error('ReactJsonSchema could not find an implementation for: ' + schema.component);\n      }\n    }\n\n    // if there is a default prop (CommonJS) return that\n    return Component.default || Component;\n  };\n\n  ReactJsonSchema.prototype.resolveComponentChildren = function resolveComponentChildren(schema) {\n    var children = schema.hasOwnProperty('children') ? this.parseSchema(schema.children) : [];\n    return children.length ? children : undefined;\n  };\n\n  ReactJsonSchema.prototype.getComponentMap = function getComponentMap() {\n    return _componentMap.get(this);\n  };\n\n  ReactJsonSchema.prototype.setComponentMap = function setComponentMap(componentMap) {\n    _componentMap.set(this, componentMap);\n  };\n\n  return ReactJsonSchema;\n}();\n\nexports.default = ReactJsonSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","react-dom-factories":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom-factories\\index.js","change-case":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\change-case\\change-case.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-assign\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-assign\\index.js","source":"/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldE93blByb3BlcnR5U3ltYm9scyIsIk9iamVjdCIsImhhc093blByb3BlcnR5IiwicHJvdG90eXBlIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidG9PYmplY3QiLCJ2YWwiLCJ1bmRlZmluZWQiLCJUeXBlRXJyb3IiLCJzaG91bGRVc2VOYXRpdmUiLCJhc3NpZ24iLCJ0ZXN0MSIsIlN0cmluZyIsImdldE93blByb3BlcnR5TmFtZXMiLCJ0ZXN0MiIsImkiLCJmcm9tQ2hhckNvZGUiLCJvcmRlcjIiLCJtYXAiLCJuIiwiam9pbiIsInRlc3QzIiwic3BsaXQiLCJmb3JFYWNoIiwibGV0dGVyIiwia2V5cyIsImVyciIsIm1vZHVsZSIsImV4cG9ydHMiLCJ0YXJnZXQiLCJzb3VyY2UiLCJmcm9tIiwidG8iLCJzeW1ib2xzIiwicyIsImFyZ3VtZW50cyIsImxlbmd0aCIsImtleSIsImNhbGwiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7QUFNQTtBQUNBOztBQUNBLElBQUlBLHdCQUF3QkMsT0FBT0QscUJBQW5DO0FBQ0EsSUFBSUUsaUJBQWlCRCxPQUFPRSxTQUFQLENBQWlCRCxjQUF0QztBQUNBLElBQUlFLG1CQUFtQkgsT0FBT0UsU0FBUCxDQUFpQkUsb0JBQXhDOztBQUVBLFNBQVNDLFFBQVQsQ0FBa0JDLEdBQWxCLEVBQXVCO0FBQ3RCLEtBQUlBLFFBQVEsSUFBUixJQUFnQkEsUUFBUUMsU0FBNUIsRUFBdUM7QUFDdEMsUUFBTSxJQUFJQyxTQUFKLENBQWMsdURBQWQsQ0FBTjtBQUNBOztBQUVELFFBQU9SLE9BQU9NLEdBQVAsQ0FBUDtBQUNBOztBQUVELFNBQVNHLGVBQVQsR0FBMkI7QUFDMUIsS0FBSTtBQUNILE1BQUksQ0FBQ1QsT0FBT1UsTUFBWixFQUFvQjtBQUNuQixVQUFPLEtBQVA7QUFDQTs7QUFFRDs7QUFFQTtBQUNBLE1BQUlDLFFBQVEsSUFBSUMsTUFBSixDQUFXLEtBQVgsQ0FBWixDQVJHLENBUTZCO0FBQ2hDRCxRQUFNLENBQU4sSUFBVyxJQUFYO0FBQ0EsTUFBSVgsT0FBT2EsbUJBQVAsQ0FBMkJGLEtBQTNCLEVBQWtDLENBQWxDLE1BQXlDLEdBQTdDLEVBQWtEO0FBQ2pELFVBQU8sS0FBUDtBQUNBOztBQUVEO0FBQ0EsTUFBSUcsUUFBUSxFQUFaO0FBQ0EsT0FBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUksRUFBcEIsRUFBd0JBLEdBQXhCLEVBQTZCO0FBQzVCRCxTQUFNLE1BQU1GLE9BQU9JLFlBQVAsQ0FBb0JELENBQXBCLENBQVosSUFBc0NBLENBQXRDO0FBQ0E7QUFDRCxNQUFJRSxTQUFTakIsT0FBT2EsbUJBQVAsQ0FBMkJDLEtBQTNCLEVBQWtDSSxHQUFsQyxDQUFzQyxVQUFVQyxDQUFWLEVBQWE7QUFDL0QsVUFBT0wsTUFBTUssQ0FBTixDQUFQO0FBQ0EsR0FGWSxDQUFiO0FBR0EsTUFBSUYsT0FBT0csSUFBUCxDQUFZLEVBQVosTUFBb0IsWUFBeEIsRUFBc0M7QUFDckMsVUFBTyxLQUFQO0FBQ0E7O0FBRUQ7QUFDQSxNQUFJQyxRQUFRLEVBQVo7QUFDQSx5QkFBdUJDLEtBQXZCLENBQTZCLEVBQTdCLEVBQWlDQyxPQUFqQyxDQUF5QyxVQUFVQyxNQUFWLEVBQWtCO0FBQzFESCxTQUFNRyxNQUFOLElBQWdCQSxNQUFoQjtBQUNBLEdBRkQ7QUFHQSxNQUFJeEIsT0FBT3lCLElBQVAsQ0FBWXpCLE9BQU9VLE1BQVAsQ0FBYyxFQUFkLEVBQWtCVyxLQUFsQixDQUFaLEVBQXNDRCxJQUF0QyxDQUEyQyxFQUEzQyxNQUNGLHNCQURGLEVBQzBCO0FBQ3pCLFVBQU8sS0FBUDtBQUNBOztBQUVELFNBQU8sSUFBUDtBQUNBLEVBckNELENBcUNFLE9BQU9NLEdBQVAsRUFBWTtBQUNiO0FBQ0EsU0FBTyxLQUFQO0FBQ0E7QUFDRDs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQm5CLG9CQUFvQlQsT0FBT1UsTUFBM0IsR0FBb0MsVUFBVW1CLE1BQVYsRUFBa0JDLE1BQWxCLEVBQTBCO0FBQzlFLEtBQUlDLElBQUo7QUFDQSxLQUFJQyxLQUFLM0IsU0FBU3dCLE1BQVQsQ0FBVDtBQUNBLEtBQUlJLE9BQUo7O0FBRUEsTUFBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlDLFVBQVVDLE1BQTlCLEVBQXNDRixHQUF0QyxFQUEyQztBQUMxQ0gsU0FBTy9CLE9BQU9tQyxVQUFVRCxDQUFWLENBQVAsQ0FBUDs7QUFFQSxPQUFLLElBQUlHLEdBQVQsSUFBZ0JOLElBQWhCLEVBQXNCO0FBQ3JCLE9BQUk5QixlQUFlcUMsSUFBZixDQUFvQlAsSUFBcEIsRUFBMEJNLEdBQTFCLENBQUosRUFBb0M7QUFDbkNMLE9BQUdLLEdBQUgsSUFBVU4sS0FBS00sR0FBTCxDQUFWO0FBQ0E7QUFDRDs7QUFFRCxNQUFJdEMscUJBQUosRUFBMkI7QUFDMUJrQyxhQUFVbEMsc0JBQXNCZ0MsSUFBdEIsQ0FBVjtBQUNBLFFBQUssSUFBSWhCLElBQUksQ0FBYixFQUFnQkEsSUFBSWtCLFFBQVFHLE1BQTVCLEVBQW9DckIsR0FBcEMsRUFBeUM7QUFDeEMsUUFBSVosaUJBQWlCbUMsSUFBakIsQ0FBc0JQLElBQXRCLEVBQTRCRSxRQUFRbEIsQ0FBUixDQUE1QixDQUFKLEVBQTZDO0FBQzVDaUIsUUFBR0MsUUFBUWxCLENBQVIsQ0FBSCxJQUFpQmdCLEtBQUtFLFFBQVFsQixDQUFSLENBQUwsQ0FBakI7QUFDQTtBQUNEO0FBQ0Q7QUFDRDs7QUFFRCxRQUFPaUIsRUFBUDtBQUNBLENBekJEIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isNaN.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isNaN.js","source":"\"use strict\";\n\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzTmFOLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJOdW1iZXIiLCJpc05hTiIsImEiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUJDLE9BQU9DLEtBQVAsSUFBZ0IsU0FBU0EsS0FBVCxDQUFlQyxDQUFmLEVBQWtCO0FBQ2xELFFBQU9BLE1BQU1BLENBQWI7QUFDQSxDQUZEIiwiZmlsZSI6ImlzTmFOLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBOdW1iZXIuaXNOYU4gfHwgZnVuY3Rpb24gaXNOYU4oYSkge1xuXHRyZXR1cm4gYSAhPT0gYTtcbn07XG4iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isFinite.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isFinite.js","source":"'use strict';\n\nvar $isNaN = Number.isNaN || function (a) {\n  return a !== a;\n};\n\nmodule.exports = Number.isFinite || function (x) {\n  return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzRmluaXRlLmpzIl0sIm5hbWVzIjpbIiRpc05hTiIsIk51bWJlciIsImlzTmFOIiwiYSIsIm1vZHVsZSIsImV4cG9ydHMiLCJpc0Zpbml0ZSIsIngiLCJJbmZpbml0eSJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJQSxTQUFTQyxPQUFPQyxLQUFQLElBQWdCLFVBQVVDLENBQVYsRUFBYTtBQUFFLFNBQU9BLE1BQU1BLENBQWI7QUFBaUIsQ0FBN0Q7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUJKLE9BQU9LLFFBQVAsSUFBbUIsVUFBVUMsQ0FBVixFQUFhO0FBQUUsU0FBTyxPQUFPQSxDQUFQLEtBQWEsUUFBYixJQUF5QixDQUFDUCxPQUFPTyxDQUFQLENBQTFCLElBQXVDQSxNQUFNQyxRQUE3QyxJQUF5REQsTUFBTSxDQUFDQyxRQUF2RTtBQUFrRixDQUFySSIsImZpbGUiOiJpc0Zpbml0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciAkaXNOYU4gPSBOdW1iZXIuaXNOYU4gfHwgZnVuY3Rpb24gKGEpIHsgcmV0dXJuIGEgIT09IGE7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gTnVtYmVyLmlzRmluaXRlIHx8IGZ1bmN0aW9uICh4KSB7IHJldHVybiB0eXBlb2YgeCA9PT0gJ251bWJlcicgJiYgISRpc05hTih4KSAmJiB4ICE9PSBJbmZpbml0eSAmJiB4ICE9PSAtSW5maW5pdHk7IH07XG4iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\sign.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\sign.js","source":"\"use strict\";\n\nmodule.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ24uanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNpZ24iLCJudW1iZXIiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsSUFBVCxDQUFjQyxNQUFkLEVBQXNCO0FBQ3RDLFFBQU9BLFVBQVUsQ0FBVixHQUFjLENBQWQsR0FBa0IsQ0FBQyxDQUExQjtBQUNBLENBRkQiLCJmaWxlIjoic2lnbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2lnbihudW1iZXIpIHtcblx0cmV0dXJuIG51bWJlciA+PSAwID8gMSA6IC0xO1xufTtcbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\mod.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\mod.js","source":"\"use strict\";\n\nmodule.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwibW9kIiwibnVtYmVyIiwibW9kdWxvIiwicmVtYWluIiwiTWF0aCIsImZsb29yIl0sIm1hcHBpbmdzIjoiOztBQUFBQSxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLEdBQVQsQ0FBYUMsTUFBYixFQUFxQkMsTUFBckIsRUFBNkI7QUFDN0MsS0FBSUMsU0FBU0YsU0FBU0MsTUFBdEI7QUFDQSxRQUFPRSxLQUFLQyxLQUFMLENBQVdGLFVBQVUsQ0FBVixHQUFjQSxNQUFkLEdBQXVCQSxTQUFTRCxNQUEzQyxDQUFQO0FBQ0EsQ0FIRCIsImZpbGUiOiJtb2QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIG1vZChudW1iZXIsIG1vZHVsbykge1xuXHR2YXIgcmVtYWluID0gbnVtYmVyICUgbW9kdWxvO1xuXHRyZXR1cm4gTWF0aC5mbG9vcihyZW1haW4gPj0gMCA/IHJlbWFpbiA6IHJlbWFpbiArIG1vZHVsbyk7XG59O1xuIl19","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isPrimitive.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isPrimitive.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isPrimitive(value) {\n\treturn value === null || typeof value !== 'function' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object';\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzUHJpbWl0aXZlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJpc1ByaW1pdGl2ZSIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsS0FBckIsRUFBNEI7QUFDNUMsUUFBT0EsVUFBVSxJQUFWLElBQW1CLE9BQU9BLEtBQVAsS0FBaUIsVUFBakIsSUFBK0IsUUFBT0EsS0FBUCx5Q0FBT0EsS0FBUCxPQUFpQixRQUExRTtBQUNBLENBRkQiLCJmaWxlIjoiaXNQcmltaXRpdmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzUHJpbWl0aXZlKHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZSA9PT0gbnVsbCB8fCAodHlwZW9mIHZhbHVlICE9PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpO1xufTtcbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\lib\\ReactPropTypesSecret.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\lib\\ReactPropTypesSecret.js","source":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0UHJvcFR5cGVzU2VjcmV0LmpzIl0sIm5hbWVzIjpbIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFPQTs7QUFFQSxJQUFJQSx1QkFBdUIsOENBQTNCOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCRixvQkFBakIiLCJmaWxlIjoiUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\emptyFunction.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\emptyFunction.js","source":"\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcHR5RnVuY3Rpb24uanMiXSwibmFtZXMiOlsibWFrZUVtcHR5RnVuY3Rpb24iLCJhcmciLCJlbXB0eUZ1bmN0aW9uIiwidGhhdFJldHVybnMiLCJ0aGF0UmV0dXJuc0ZhbHNlIiwidGhhdFJldHVybnNUcnVlIiwidGhhdFJldHVybnNOdWxsIiwidGhhdFJldHVybnNUaGlzIiwidGhhdFJldHVybnNBcmd1bWVudCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBOzs7Ozs7Ozs7QUFTQSxTQUFTQSxpQkFBVCxDQUEyQkMsR0FBM0IsRUFBZ0M7QUFDOUIsU0FBTyxZQUFZO0FBQ2pCLFdBQU9BLEdBQVA7QUFDRCxHQUZEO0FBR0Q7O0FBRUQ7Ozs7O0FBS0EsSUFBSUMsZ0JBQWdCLFNBQVNBLGFBQVQsR0FBeUIsQ0FBRSxDQUEvQzs7QUFFQUEsY0FBY0MsV0FBZCxHQUE0QkgsaUJBQTVCO0FBQ0FFLGNBQWNFLGdCQUFkLEdBQWlDSixrQkFBa0IsS0FBbEIsQ0FBakM7QUFDQUUsY0FBY0csZUFBZCxHQUFnQ0wsa0JBQWtCLElBQWxCLENBQWhDO0FBQ0FFLGNBQWNJLGVBQWQsR0FBZ0NOLGtCQUFrQixJQUFsQixDQUFoQztBQUNBRSxjQUFjSyxlQUFkLEdBQWdDLFlBQVk7QUFDMUMsU0FBTyxJQUFQO0FBQ0QsQ0FGRDtBQUdBTCxjQUFjTSxtQkFBZCxHQUFvQyxVQUFVUCxHQUFWLEVBQWU7QUFDakQsU0FBT0EsR0FBUDtBQUNELENBRkQ7O0FBSUFRLE9BQU9DLE9BQVAsR0FBaUJSLGFBQWpCIiwiZmlsZSI6ImVtcHR5RnVuY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\invariant.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\invariant.js","source":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (\"production\" !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImludmFyaWFudC5qcyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZUZvcm1hdCIsImZvcm1hdCIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsInVuZGVmaW5lZCIsIkVycm9yIiwiaW52YXJpYW50IiwiY29uZGl0aW9uIiwiYSIsImIiLCJjIiwiZCIsImUiLCJmIiwiZXJyb3IiLCJhcmdzIiwiYXJnSW5kZXgiLCJyZXBsYWNlIiwibmFtZSIsImZyYW1lc1RvUG9wIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBUUE7O0FBRUE7Ozs7Ozs7Ozs7O0FBV0EsSUFBSUEsaUJBQWlCLFNBQVNBLGNBQVQsQ0FBd0JDLE1BQXhCLEVBQWdDLENBQUUsQ0FBdkQ7O0FBRUEsSUFBSUMsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDSixtQkFBaUIsU0FBU0EsY0FBVCxDQUF3QkMsTUFBeEIsRUFBZ0M7QUFDL0MsUUFBSUEsV0FBV0ksU0FBZixFQUEwQjtBQUN4QixZQUFNLElBQUlDLEtBQUosQ0FBVSw4Q0FBVixDQUFOO0FBQ0Q7QUFDRixHQUpEO0FBS0Q7O0FBRUQsU0FBU0MsU0FBVCxDQUFtQkMsU0FBbkIsRUFBOEJQLE1BQTlCLEVBQXNDUSxDQUF0QyxFQUF5Q0MsQ0FBekMsRUFBNENDLENBQTVDLEVBQStDQyxDQUEvQyxFQUFrREMsQ0FBbEQsRUFBcURDLENBQXJELEVBQXdEO0FBQ3REZCxpQkFBZUMsTUFBZjs7QUFFQSxNQUFJLENBQUNPLFNBQUwsRUFBZ0I7QUFDZCxRQUFJTyxLQUFKO0FBQ0EsUUFBSWQsV0FBV0ksU0FBZixFQUEwQjtBQUN4QlUsY0FBUSxJQUFJVCxLQUFKLENBQVUsdUVBQXVFLDZEQUFqRixDQUFSO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsVUFBSVUsT0FBTyxDQUFDUCxDQUFELEVBQUlDLENBQUosRUFBT0MsQ0FBUCxFQUFVQyxDQUFWLEVBQWFDLENBQWIsRUFBZ0JDLENBQWhCLENBQVg7QUFDQSxVQUFJRyxXQUFXLENBQWY7QUFDQUYsY0FBUSxJQUFJVCxLQUFKLENBQVVMLE9BQU9pQixPQUFQLENBQWUsS0FBZixFQUFzQixZQUFZO0FBQ2xELGVBQU9GLEtBQUtDLFVBQUwsQ0FBUDtBQUNELE9BRmlCLENBQVYsQ0FBUjtBQUdBRixZQUFNSSxJQUFOLEdBQWEscUJBQWI7QUFDRDs7QUFFREosVUFBTUssV0FBTixHQUFvQixDQUFwQixDQWJjLENBYVM7QUFDdkIsVUFBTUwsS0FBTjtBQUNEO0FBQ0Y7O0FBRURNLE9BQU9DLE9BQVAsR0FBaUJmLFNBQWpCIiwiZmlsZSI6ImludmFyaWFudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2UgaW52YXJpYW50KCkgdG8gYXNzZXJ0IHN0YXRlIHdoaWNoIHlvdXIgcHJvZ3JhbSBhc3N1bWVzIHRvIGJlIHRydWUuXG4gKlxuICogUHJvdmlkZSBzcHJpbnRmLXN0eWxlIGZvcm1hdCAob25seSAlcyBpcyBzdXBwb3J0ZWQpIGFuZCBhcmd1bWVudHNcbiAqIHRvIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBicm9rZSBhbmQgd2hhdCB5b3Ugd2VyZVxuICogZXhwZWN0aW5nLlxuICpcbiAqIFRoZSBpbnZhcmlhbnQgbWVzc2FnZSB3aWxsIGJlIHN0cmlwcGVkIGluIHByb2R1Y3Rpb24sIGJ1dCB0aGUgaW52YXJpYW50XG4gKiB3aWxsIHJlbWFpbiB0byBlbnN1cmUgbG9naWMgZG9lcyBub3QgZGlmZmVyIGluIHByb2R1Y3Rpb24uXG4gKi9cblxudmFyIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7fTtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFsaWRhdGVGb3JtYXQgPSBmdW5jdGlvbiB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICB2YWxpZGF0ZUZvcm1hdChmb3JtYXQpO1xuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoJ01pbmlmaWVkIGV4Y2VwdGlvbiBvY2N1cnJlZDsgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50ICcgKyAnZm9yIHRoZSBmdWxsIGVycm9yIG1lc3NhZ2UgYW5kIGFkZGl0aW9uYWwgaGVscGZ1bCB3YXJuaW5ncy4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KSk7XG4gICAgICBlcnJvci5uYW1lID0gJ0ludmFyaWFudCBWaW9sYXRpb24nO1xuICAgIH1cblxuICAgIGVycm9yLmZyYW1lc1RvUG9wID0gMTsgLy8gd2UgZG9uJ3QgY2FyZSBhYm91dCBpbnZhcmlhbnQncyBvd24gZnJhbWVcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDsiXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithThrowingShims.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithThrowingShims.js","source":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyJdLCJuYW1lcyI6WyJlbXB0eUZ1bmN0aW9uIiwicmVxdWlyZSIsImludmFyaWFudCIsIlJlYWN0UHJvcFR5cGVzU2VjcmV0IiwibW9kdWxlIiwiZXhwb3J0cyIsInNoaW0iLCJwcm9wcyIsInByb3BOYW1lIiwiY29tcG9uZW50TmFtZSIsImxvY2F0aW9uIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiaXNSZXF1aXJlZCIsImdldFNoaW0iLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiYm9vbCIsImZ1bmMiLCJudW1iZXIiLCJvYmplY3QiLCJzdHJpbmciLCJzeW1ib2wiLCJhbnkiLCJhcnJheU9mIiwiZWxlbWVudCIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsInNoYXBlIiwiZXhhY3QiLCJjaGVja1Byb3BUeXBlcyIsIlByb3BUeXBlcyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7QUFPQTs7QUFFQSxJQUFJQSxnQkFBZ0JDLFFBQVEsd0JBQVIsQ0FBcEI7QUFDQSxJQUFJQyxZQUFZRCxRQUFRLG9CQUFSLENBQWhCO0FBQ0EsSUFBSUUsdUJBQXVCRixRQUFRLDRCQUFSLENBQTNCOztBQUVBRyxPQUFPQyxPQUFQLEdBQWlCLFlBQVc7QUFDMUIsV0FBU0MsSUFBVCxDQUFjQyxLQUFkLEVBQXFCQyxRQUFyQixFQUErQkMsYUFBL0IsRUFBOENDLFFBQTlDLEVBQXdEQyxZQUF4RCxFQUFzRUMsTUFBdEUsRUFBOEU7QUFDNUUsUUFBSUEsV0FBV1Qsb0JBQWYsRUFBcUM7QUFDbkM7QUFDQTtBQUNEO0FBQ0RELGNBQ0UsS0FERixFQUVFLHlGQUNBLCtDQURBLEdBRUEsZ0RBSkY7QUFNRDtBQUNESSxPQUFLTyxVQUFMLEdBQWtCUCxJQUFsQjtBQUNBLFdBQVNRLE9BQVQsR0FBbUI7QUFDakIsV0FBT1IsSUFBUDtBQUNEO0FBQ0Q7QUFDQTtBQUNBLE1BQUlTLGlCQUFpQjtBQUNuQkMsV0FBT1YsSUFEWTtBQUVuQlcsVUFBTVgsSUFGYTtBQUduQlksVUFBTVosSUFIYTtBQUluQmEsWUFBUWIsSUFKVztBQUtuQmMsWUFBUWQsSUFMVztBQU1uQmUsWUFBUWYsSUFOVztBQU9uQmdCLFlBQVFoQixJQVBXOztBQVNuQmlCLFNBQUtqQixJQVRjO0FBVW5Ca0IsYUFBU1YsT0FWVTtBQVduQlcsYUFBU25CLElBWFU7QUFZbkJvQixnQkFBWVosT0FaTztBQWFuQmEsVUFBTXJCLElBYmE7QUFjbkJzQixjQUFVZCxPQWRTO0FBZW5CZSxXQUFPZixPQWZZO0FBZ0JuQmdCLGVBQVdoQixPQWhCUTtBQWlCbkJpQixXQUFPakIsT0FqQlk7QUFrQm5Ca0IsV0FBT2xCO0FBbEJZLEdBQXJCOztBQXFCQUMsaUJBQWVrQixjQUFmLEdBQWdDakMsYUFBaEM7QUFDQWUsaUJBQWVtQixTQUFmLEdBQTJCbkIsY0FBM0I7O0FBRUEsU0FBT0EsY0FBUDtBQUNELENBNUNEIiwiZmlsZSI6ImZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJ2ZianMvbGliL2VtcHR5RnVuY3Rpb24nKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoXG4gICAgICBmYWxzZSxcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIl19","deps":{"./lib/ReactPropTypesSecret":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\lib\\ReactPropTypesSecret.js","fbjs/lib/emptyFunction":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\emptyFunction.js","fbjs/lib/invariant":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\invariant.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-callable\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-callable\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class /;\nvar isES6ClassFn = function isES6ClassFn(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\tvar singleStripped = fnStr.replace(/\\/\\/.*\\n/g, '');\n\t\tvar multiStripped = singleStripped.replace(/\\/\\*[.\\s\\S]*\\*\\//g, '');\n\t\tvar spaceStripped = multiStripped.replace(/\\n/mg, ' ').replace(/ {2}/g, ' ');\n\t\treturn constructorRegex.test(spaceStripped);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionObject(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) {\n\t\t\treturn false;\n\t\t}\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) {\n\t\treturn false;\n\t}\n\tif (typeof value !== 'function' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n\t\treturn false;\n\t}\n\tif (hasToStringTag) {\n\t\treturn tryFunctionObject(value);\n\t}\n\tif (isES6ClassFn(value)) {\n\t\treturn false;\n\t}\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZuVG9TdHIiLCJGdW5jdGlvbiIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY29uc3RydWN0b3JSZWdleCIsImlzRVM2Q2xhc3NGbiIsInZhbHVlIiwiZm5TdHIiLCJjYWxsIiwic2luZ2xlU3RyaXBwZWQiLCJyZXBsYWNlIiwibXVsdGlTdHJpcHBlZCIsInNwYWNlU3RyaXBwZWQiLCJ0ZXN0IiwiZSIsInRyeUZ1bmN0aW9uT2JqZWN0IiwidG9TdHIiLCJPYmplY3QiLCJmbkNsYXNzIiwiZ2VuQ2xhc3MiLCJoYXNUb1N0cmluZ1RhZyIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwibW9kdWxlIiwiZXhwb3J0cyIsImlzQ2FsbGFibGUiLCJzdHJDbGFzcyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxJQUFJQSxVQUFVQyxTQUFTQyxTQUFULENBQW1CQyxRQUFqQzs7QUFFQSxJQUFJQyxtQkFBbUIsWUFBdkI7QUFDQSxJQUFJQyxlQUFlLFNBQVNBLFlBQVQsQ0FBc0JDLEtBQXRCLEVBQTZCO0FBQy9DLEtBQUk7QUFDSCxNQUFJQyxRQUFRUCxRQUFRUSxJQUFSLENBQWFGLEtBQWIsQ0FBWjtBQUNBLE1BQUlHLGlCQUFpQkYsTUFBTUcsT0FBTixDQUFjLFdBQWQsRUFBMkIsRUFBM0IsQ0FBckI7QUFDQSxNQUFJQyxnQkFBZ0JGLGVBQWVDLE9BQWYsQ0FBdUIsbUJBQXZCLEVBQTRDLEVBQTVDLENBQXBCO0FBQ0EsTUFBSUUsZ0JBQWdCRCxjQUFjRCxPQUFkLENBQXNCLE1BQXRCLEVBQThCLEdBQTlCLEVBQW1DQSxPQUFuQyxDQUEyQyxPQUEzQyxFQUFvRCxHQUFwRCxDQUFwQjtBQUNBLFNBQU9OLGlCQUFpQlMsSUFBakIsQ0FBc0JELGFBQXRCLENBQVA7QUFDQSxFQU5ELENBTUUsT0FBT0UsQ0FBUCxFQUFVO0FBQ1gsU0FBTyxLQUFQLENBRFcsQ0FDRztBQUNkO0FBQ0QsQ0FWRDs7QUFZQSxJQUFJQyxvQkFBb0IsU0FBU0EsaUJBQVQsQ0FBMkJULEtBQTNCLEVBQWtDO0FBQ3pELEtBQUk7QUFDSCxNQUFJRCxhQUFhQyxLQUFiLENBQUosRUFBeUI7QUFBRSxVQUFPLEtBQVA7QUFBZTtBQUMxQ04sVUFBUVEsSUFBUixDQUFhRixLQUFiO0FBQ0EsU0FBTyxJQUFQO0FBQ0EsRUFKRCxDQUlFLE9BQU9RLENBQVAsRUFBVTtBQUNYLFNBQU8sS0FBUDtBQUNBO0FBQ0QsQ0FSRDtBQVNBLElBQUlFLFFBQVFDLE9BQU9mLFNBQVAsQ0FBaUJDLFFBQTdCO0FBQ0EsSUFBSWUsVUFBVSxtQkFBZDtBQUNBLElBQUlDLFdBQVcsNEJBQWY7QUFDQSxJQUFJQyxpQkFBaUIsT0FBT0MsTUFBUCxLQUFrQixVQUFsQixJQUFnQyxRQUFPQSxPQUFPQyxXQUFkLE1BQThCLFFBQW5GOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFVBQVQsQ0FBb0JuQixLQUFwQixFQUEyQjtBQUMzQyxLQUFJLENBQUNBLEtBQUwsRUFBWTtBQUFFLFNBQU8sS0FBUDtBQUFlO0FBQzdCLEtBQUksT0FBT0EsS0FBUCxLQUFpQixVQUFqQixJQUErQixRQUFPQSxLQUFQLHlDQUFPQSxLQUFQLE9BQWlCLFFBQXBELEVBQThEO0FBQUUsU0FBTyxLQUFQO0FBQWU7QUFDL0UsS0FBSWMsY0FBSixFQUFvQjtBQUFFLFNBQU9MLGtCQUFrQlQsS0FBbEIsQ0FBUDtBQUFrQztBQUN4RCxLQUFJRCxhQUFhQyxLQUFiLENBQUosRUFBeUI7QUFBRSxTQUFPLEtBQVA7QUFBZTtBQUMxQyxLQUFJb0IsV0FBV1YsTUFBTVIsSUFBTixDQUFXRixLQUFYLENBQWY7QUFDQSxRQUFPb0IsYUFBYVIsT0FBYixJQUF3QlEsYUFBYVAsUUFBNUM7QUFDQSxDQVBEIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZm5Ub1N0ciA9IEZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZztcblxudmFyIGNvbnN0cnVjdG9yUmVnZXggPSAvXlxccypjbGFzcyAvO1xudmFyIGlzRVM2Q2xhc3NGbiA9IGZ1bmN0aW9uIGlzRVM2Q2xhc3NGbih2YWx1ZSkge1xuXHR0cnkge1xuXHRcdHZhciBmblN0ciA9IGZuVG9TdHIuY2FsbCh2YWx1ZSk7XG5cdFx0dmFyIHNpbmdsZVN0cmlwcGVkID0gZm5TdHIucmVwbGFjZSgvXFwvXFwvLipcXG4vZywgJycpO1xuXHRcdHZhciBtdWx0aVN0cmlwcGVkID0gc2luZ2xlU3RyaXBwZWQucmVwbGFjZSgvXFwvXFwqWy5cXHNcXFNdKlxcKlxcLy9nLCAnJyk7XG5cdFx0dmFyIHNwYWNlU3RyaXBwZWQgPSBtdWx0aVN0cmlwcGVkLnJlcGxhY2UoL1xcbi9tZywgJyAnKS5yZXBsYWNlKC8gezJ9L2csICcgJyk7XG5cdFx0cmV0dXJuIGNvbnN0cnVjdG9yUmVnZXgudGVzdChzcGFjZVN0cmlwcGVkKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHJldHVybiBmYWxzZTsgLy8gbm90IGEgZnVuY3Rpb25cblx0fVxufTtcblxudmFyIHRyeUZ1bmN0aW9uT2JqZWN0ID0gZnVuY3Rpb24gdHJ5RnVuY3Rpb25PYmplY3QodmFsdWUpIHtcblx0dHJ5IHtcblx0XHRpZiAoaXNFUzZDbGFzc0ZuKHZhbHVlKSkgeyByZXR1cm4gZmFsc2U7IH1cblx0XHRmblRvU3RyLmNhbGwodmFsdWUpO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59O1xudmFyIHRvU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcbnZhciBmbkNsYXNzID0gJ1tvYmplY3QgRnVuY3Rpb25dJztcbnZhciBnZW5DbGFzcyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXSc7XG52YXIgaGFzVG9TdHJpbmdUYWcgPSB0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBTeW1ib2wudG9TdHJpbmdUYWcgPT09ICdzeW1ib2wnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FsbGFibGUodmFsdWUpIHtcblx0aWYgKCF2YWx1ZSkgeyByZXR1cm4gZmFsc2U7IH1cblx0aWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgdmFsdWUgIT09ICdvYmplY3QnKSB7IHJldHVybiBmYWxzZTsgfVxuXHRpZiAoaGFzVG9TdHJpbmdUYWcpIHsgcmV0dXJuIHRyeUZ1bmN0aW9uT2JqZWN0KHZhbHVlKTsgfVxuXHRpZiAoaXNFUzZDbGFzc0ZuKHZhbHVlKSkgeyByZXR1cm4gZmFsc2U7IH1cblx0dmFyIHN0ckNsYXNzID0gdG9TdHIuY2FsbCh2YWx1ZSk7XG5cdHJldHVybiBzdHJDbGFzcyA9PT0gZm5DbGFzcyB8fCBzdHJDbGFzcyA9PT0gZ2VuQ2xhc3M7XG59O1xuIl19","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\helpers\\isPrimitive.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\helpers\\isPrimitive.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isPrimitive(value) {\n\treturn value === null || typeof value !== 'function' && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object';\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlzUHJpbWl0aXZlLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJpc1ByaW1pdGl2ZSIsInZhbHVlIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUFBLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsS0FBckIsRUFBNEI7QUFDNUMsUUFBT0EsVUFBVSxJQUFWLElBQW1CLE9BQU9BLEtBQVAsS0FBaUIsVUFBakIsSUFBK0IsUUFBT0EsS0FBUCx5Q0FBT0EsS0FBUCxPQUFpQixRQUExRTtBQUNBLENBRkQiLCJmaWxlIjoiaXNQcmltaXRpdmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzUHJpbWl0aXZlKHZhbHVlKSB7XG5cdHJldHVybiB2YWx1ZSA9PT0gbnVsbCB8fCAodHlwZW9mIHZhbHVlICE9PSAnZnVuY3Rpb24nICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpO1xufTtcbiJdfQ==","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\checkPropTypes.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\checkPropTypes.js","source":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (\"production\" !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (\"production\" !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, _typeof(typeSpecs[typeSpecName]));\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error));\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoZWNrUHJvcFR5cGVzLmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImludmFyaWFudCIsInJlcXVpcmUiLCJ3YXJuaW5nIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJsb2dnZWRUeXBlRmFpbHVyZXMiLCJjaGVja1Byb3BUeXBlcyIsInR5cGVTcGVjcyIsInZhbHVlcyIsImxvY2F0aW9uIiwiY29tcG9uZW50TmFtZSIsImdldFN0YWNrIiwidHlwZVNwZWNOYW1lIiwiaGFzT3duUHJvcGVydHkiLCJlcnJvciIsImV4IiwiRXJyb3IiLCJtZXNzYWdlIiwic3RhY2siLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7OztBQU9BOzs7O0FBRUEsSUFBSUEsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDLE1BQUlDLFlBQVlDLFFBQVEsb0JBQVIsQ0FBaEI7QUFDQSxNQUFJQyxVQUFVRCxRQUFRLGtCQUFSLENBQWQ7QUFDQSxNQUFJRSx1QkFBdUJGLFFBQVEsNEJBQVIsQ0FBM0I7QUFDQSxNQUFJRyxxQkFBcUIsRUFBekI7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7QUFXQSxTQUFTQyxjQUFULENBQXdCQyxTQUF4QixFQUFtQ0MsTUFBbkMsRUFBMkNDLFFBQTNDLEVBQXFEQyxhQUFyRCxFQUFvRUMsUUFBcEUsRUFBOEU7QUFDNUUsTUFBSWIsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDLFNBQUssSUFBSVksWUFBVCxJQUF5QkwsU0FBekIsRUFBb0M7QUFDbEMsVUFBSUEsVUFBVU0sY0FBVixDQUF5QkQsWUFBekIsQ0FBSixFQUE0QztBQUMxQyxZQUFJRSxLQUFKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBSTtBQUNGO0FBQ0E7QUFDQWIsb0JBQVUsT0FBT00sVUFBVUssWUFBVixDQUFQLEtBQW1DLFVBQTdDLEVBQXlELHNFQUFzRSw4Q0FBL0gsRUFBK0tGLGlCQUFpQixhQUFoTSxFQUErTUQsUUFBL00sRUFBeU5HLFlBQXpOLFVBQThPTCxVQUFVSyxZQUFWLENBQTlPO0FBQ0FFLGtCQUFRUCxVQUFVSyxZQUFWLEVBQXdCSixNQUF4QixFQUFnQ0ksWUFBaEMsRUFBOENGLGFBQTlDLEVBQTZERCxRQUE3RCxFQUF1RSxJQUF2RSxFQUE2RUwsb0JBQTdFLENBQVI7QUFDRCxTQUxELENBS0UsT0FBT1csRUFBUCxFQUFXO0FBQ1hELGtCQUFRQyxFQUFSO0FBQ0Q7QUFDRFosZ0JBQVEsQ0FBQ1csS0FBRCxJQUFVQSxpQkFBaUJFLEtBQW5DLEVBQTBDLG9FQUFvRSwrREFBcEUsR0FBc0ksaUVBQXRJLEdBQTBNLGdFQUExTSxHQUE2USxpQ0FBdlQsRUFBMFZOLGlCQUFpQixhQUEzVyxFQUEwWEQsUUFBMVgsRUFBb1lHLFlBQXBZLFNBQXlaRSxLQUF6Wix5Q0FBeVpBLEtBQXpaO0FBQ0EsWUFBSUEsaUJBQWlCRSxLQUFqQixJQUEwQixFQUFFRixNQUFNRyxPQUFOLElBQWlCWixrQkFBbkIsQ0FBOUIsRUFBc0U7QUFDcEU7QUFDQTtBQUNBQSw2QkFBbUJTLE1BQU1HLE9BQXpCLElBQW9DLElBQXBDOztBQUVBLGNBQUlDLFFBQVFQLFdBQVdBLFVBQVgsR0FBd0IsRUFBcEM7O0FBRUFSLGtCQUFRLEtBQVIsRUFBZSxzQkFBZixFQUF1Q00sUUFBdkMsRUFBaURLLE1BQU1HLE9BQXZELEVBQWdFQyxTQUFTLElBQVQsR0FBZ0JBLEtBQWhCLEdBQXdCLEVBQXhGO0FBQ0Q7QUFDRjtBQUNGO0FBQ0Y7QUFDRjs7QUFFREMsT0FBT0MsT0FBUCxHQUFpQmQsY0FBakIiLCJmaWxlIjoiY2hlY2tQcm9wVHlwZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIGludmFyaWFudCA9IHJlcXVpcmUoJ2ZianMvbGliL2ludmFyaWFudCcpO1xuICB2YXIgd2FybmluZyA9IHJlcXVpcmUoJ2ZianMvbGliL3dhcm5pbmcnKTtcbiAgdmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gcmVxdWlyZSgnLi9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQnKTtcbiAgdmFyIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xufVxuXG4vKipcbiAqIEFzc2VydCB0aGF0IHRoZSB2YWx1ZXMgbWF0Y2ggd2l0aCB0aGUgdHlwZSBzcGVjcy5cbiAqIEVycm9yIG1lc3NhZ2VzIGFyZSBtZW1vcml6ZWQgYW5kIHdpbGwgb25seSBiZSBzaG93biBvbmNlLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSB0eXBlU3BlY3MgTWFwIG9mIG5hbWUgdG8gYSBSZWFjdFByb3BUeXBlXG4gKiBAcGFyYW0ge29iamVjdH0gdmFsdWVzIFJ1bnRpbWUgdmFsdWVzIHRoYXQgbmVlZCB0byBiZSB0eXBlLWNoZWNrZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhdGlvbiBlLmcuIFwicHJvcFwiLCBcImNvbnRleHRcIiwgXCJjaGlsZCBjb250ZXh0XCJcbiAqIEBwYXJhbSB7c3RyaW5nfSBjb21wb25lbnROYW1lIE5hbWUgb2YgdGhlIGNvbXBvbmVudCBmb3IgZXJyb3IgbWVzc2FnZXMuXG4gKiBAcGFyYW0gez9GdW5jdGlvbn0gZ2V0U3RhY2sgUmV0dXJucyB0aGUgY29tcG9uZW50IHN0YWNrLlxuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gY2hlY2tQcm9wVHlwZXModHlwZVNwZWNzLCB2YWx1ZXMsIGxvY2F0aW9uLCBjb21wb25lbnROYW1lLCBnZXRTdGFjaykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGZvciAodmFyIHR5cGVTcGVjTmFtZSBpbiB0eXBlU3BlY3MpIHtcbiAgICAgIGlmICh0eXBlU3BlY3MuaGFzT3duUHJvcGVydHkodHlwZVNwZWNOYW1lKSkge1xuICAgICAgICB2YXIgZXJyb3I7XG4gICAgICAgIC8vIFByb3AgdHlwZSB2YWxpZGF0aW9uIG1heSB0aHJvdy4gSW4gY2FzZSB0aGV5IGRvLCB3ZSBkb24ndCB3YW50IHRvXG4gICAgICAgIC8vIGZhaWwgdGhlIHJlbmRlciBwaGFzZSB3aGVyZSBpdCBkaWRuJ3QgZmFpbCBiZWZvcmUuIFNvIHdlIGxvZyBpdC5cbiAgICAgICAgLy8gQWZ0ZXIgdGhlc2UgaGF2ZSBiZWVuIGNsZWFuZWQgdXAsIHdlJ2xsIGxldCB0aGVtIHRocm93LlxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgaXMgaW50ZW50aW9uYWxseSBhbiBpbnZhcmlhbnQgdGhhdCBnZXRzIGNhdWdodC4gSXQncyB0aGUgc2FtZVxuICAgICAgICAgIC8vIGJlaGF2aW9yIGFzIHdpdGhvdXQgdGhpcyBzdGF0ZW1lbnQgZXhjZXB0IHdpdGggYSBiZXR0ZXIgbWVzc2FnZS5cbiAgICAgICAgICBpbnZhcmlhbnQodHlwZW9mIHR5cGVTcGVjc1t0eXBlU3BlY05hbWVdID09PSAnZnVuY3Rpb24nLCAnJXM6ICVzIHR5cGUgYCVzYCBpcyBpbnZhbGlkOyBpdCBtdXN0IGJlIGEgZnVuY3Rpb24sIHVzdWFsbHkgZnJvbSAnICsgJ3RoZSBgcHJvcC10eXBlc2AgcGFja2FnZSwgYnV0IHJlY2VpdmVkIGAlc2AuJywgY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnLCBsb2NhdGlvbiwgdHlwZVNwZWNOYW1lLCB0eXBlb2YgdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0pO1xuICAgICAgICAgIGVycm9yID0gdHlwZVNwZWNzW3R5cGVTcGVjTmFtZV0odmFsdWVzLCB0eXBlU3BlY05hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBudWxsLCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgZXJyb3IgPSBleDtcbiAgICAgICAgfVxuICAgICAgICB3YXJuaW5nKCFlcnJvciB8fCBlcnJvciBpbnN0YW5jZW9mIEVycm9yLCAnJXM6IHR5cGUgc3BlY2lmaWNhdGlvbiBvZiAlcyBgJXNgIGlzIGludmFsaWQ7IHRoZSB0eXBlIGNoZWNrZXIgJyArICdmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSAlcy4gJyArICdZb3UgbWF5IGhhdmUgZm9yZ290dGVuIHRvIHBhc3MgYW4gYXJndW1lbnQgdG8gdGhlIHR5cGUgY2hlY2tlciAnICsgJ2NyZWF0b3IgKGFycmF5T2YsIGluc3RhbmNlT2YsIG9iamVjdE9mLCBvbmVPZiwgb25lT2ZUeXBlLCBhbmQgJyArICdzaGFwZSBhbGwgcmVxdWlyZSBhbiBhcmd1bWVudCkuJywgY29tcG9uZW50TmFtZSB8fCAnUmVhY3QgY2xhc3MnLCBsb2NhdGlvbiwgdHlwZVNwZWNOYW1lLCB0eXBlb2YgZXJyb3IpO1xuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvciAmJiAhKGVycm9yLm1lc3NhZ2UgaW4gbG9nZ2VkVHlwZUZhaWx1cmVzKSkge1xuICAgICAgICAgIC8vIE9ubHkgbW9uaXRvciB0aGlzIGZhaWx1cmUgb25jZSBiZWNhdXNlIHRoZXJlIHRlbmRzIHRvIGJlIGEgbG90IG9mIHRoZVxuICAgICAgICAgIC8vIHNhbWUgZXJyb3IuXG4gICAgICAgICAgbG9nZ2VkVHlwZUZhaWx1cmVzW2Vycm9yLm1lc3NhZ2VdID0gdHJ1ZTtcblxuICAgICAgICAgIHZhciBzdGFjayA9IGdldFN0YWNrID8gZ2V0U3RhY2soKSA6ICcnO1xuXG4gICAgICAgICAgd2FybmluZyhmYWxzZSwgJ0ZhaWxlZCAlcyB0eXBlOiAlcyVzJywgbG9jYXRpb24sIGVycm9yLm1lc3NhZ2UsIHN0YWNrICE9IG51bGwgPyBzdGFjayA6ICcnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNoZWNrUHJvcFR5cGVzO1xuIl19","deps":{"./lib/ReactPropTypesSecret":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\lib\\ReactPropTypesSecret.js","fbjs/lib/invariant":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\invariant.js","fbjs/lib/warning":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\warning.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-regex\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-regex\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar has = require('has');\nvar regexExec = RegExp.prototype.exec;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar tryRegexExecCall = function tryRegexExec(value) {\n\ttry {\n\t\tvar lastIndex = value.lastIndex;\n\t\tvalue.lastIndex = 0;\n\n\t\tregexExec.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\tvalue.lastIndex = lastIndex;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar regexClass = '[object RegExp]';\nvar hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';\n\nmodule.exports = function isRegex(value) {\n\tif (!value || (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object') {\n\t\treturn false;\n\t}\n\tif (!hasToStringTag) {\n\t\treturn toStr.call(value) === regexClass;\n\t}\n\n\tvar descriptor = gOPD(value, 'lastIndex');\n\tvar hasLastIndexDataProperty = descriptor && has(descriptor, 'value');\n\tif (!hasLastIndexDataProperty) {\n\t\treturn false;\n\t}\n\n\treturn tryRegexExecCall(value);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImhhcyIsInJlcXVpcmUiLCJyZWdleEV4ZWMiLCJSZWdFeHAiLCJwcm90b3R5cGUiLCJleGVjIiwiZ09QRCIsIk9iamVjdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInRyeVJlZ2V4RXhlY0NhbGwiLCJ0cnlSZWdleEV4ZWMiLCJ2YWx1ZSIsImxhc3RJbmRleCIsImNhbGwiLCJlIiwidG9TdHIiLCJ0b1N0cmluZyIsInJlZ2V4Q2xhc3MiLCJoYXNUb1N0cmluZ1RhZyIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwibW9kdWxlIiwiZXhwb3J0cyIsImlzUmVnZXgiLCJkZXNjcmlwdG9yIiwiaGFzTGFzdEluZGV4RGF0YVByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQUlBLE1BQU1DLFFBQVEsS0FBUixDQUFWO0FBQ0EsSUFBSUMsWUFBWUMsT0FBT0MsU0FBUCxDQUFpQkMsSUFBakM7QUFDQSxJQUFJQyxPQUFPQyxPQUFPQyx3QkFBbEI7O0FBRUEsSUFBSUMsbUJBQW1CLFNBQVNDLFlBQVQsQ0FBc0JDLEtBQXRCLEVBQTZCO0FBQ25ELEtBQUk7QUFDSCxNQUFJQyxZQUFZRCxNQUFNQyxTQUF0QjtBQUNBRCxRQUFNQyxTQUFOLEdBQWtCLENBQWxCOztBQUVBVixZQUFVVyxJQUFWLENBQWVGLEtBQWY7QUFDQSxTQUFPLElBQVA7QUFDQSxFQU5ELENBTUUsT0FBT0csQ0FBUCxFQUFVO0FBQ1gsU0FBTyxLQUFQO0FBQ0EsRUFSRCxTQVFVO0FBQ1RILFFBQU1DLFNBQU4sR0FBa0JBLFNBQWxCO0FBQ0E7QUFDRCxDQVpEO0FBYUEsSUFBSUcsUUFBUVIsT0FBT0gsU0FBUCxDQUFpQlksUUFBN0I7QUFDQSxJQUFJQyxhQUFhLGlCQUFqQjtBQUNBLElBQUlDLGlCQUFpQixPQUFPQyxNQUFQLEtBQWtCLFVBQWxCLElBQWdDLFFBQU9BLE9BQU9DLFdBQWQsTUFBOEIsUUFBbkY7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsT0FBVCxDQUFpQlosS0FBakIsRUFBd0I7QUFDeEMsS0FBSSxDQUFDQSxLQUFELElBQVUsUUFBT0EsS0FBUCx5Q0FBT0EsS0FBUCxPQUFpQixRQUEvQixFQUF5QztBQUN4QyxTQUFPLEtBQVA7QUFDQTtBQUNELEtBQUksQ0FBQ08sY0FBTCxFQUFxQjtBQUNwQixTQUFPSCxNQUFNRixJQUFOLENBQVdGLEtBQVgsTUFBc0JNLFVBQTdCO0FBQ0E7O0FBRUQsS0FBSU8sYUFBYWxCLEtBQUtLLEtBQUwsRUFBWSxXQUFaLENBQWpCO0FBQ0EsS0FBSWMsMkJBQTJCRCxjQUFjeEIsSUFBSXdCLFVBQUosRUFBZ0IsT0FBaEIsQ0FBN0M7QUFDQSxLQUFJLENBQUNDLHdCQUFMLEVBQStCO0FBQzlCLFNBQU8sS0FBUDtBQUNBOztBQUVELFFBQU9oQixpQkFBaUJFLEtBQWpCLENBQVA7QUFDQSxDQWZEIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzID0gcmVxdWlyZSgnaGFzJyk7XG52YXIgcmVnZXhFeGVjID0gUmVnRXhwLnByb3RvdHlwZS5leGVjO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG52YXIgdHJ5UmVnZXhFeGVjQ2FsbCA9IGZ1bmN0aW9uIHRyeVJlZ2V4RXhlYyh2YWx1ZSkge1xuXHR0cnkge1xuXHRcdHZhciBsYXN0SW5kZXggPSB2YWx1ZS5sYXN0SW5kZXg7XG5cdFx0dmFsdWUubGFzdEluZGV4ID0gMDtcblxuXHRcdHJlZ2V4RXhlYy5jYWxsKHZhbHVlKTtcblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fSBmaW5hbGx5IHtcblx0XHR2YWx1ZS5sYXN0SW5kZXggPSBsYXN0SW5kZXg7XG5cdH1cbn07XG52YXIgdG9TdHIgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xudmFyIHJlZ2V4Q2xhc3MgPSAnW29iamVjdCBSZWdFeHBdJztcbnZhciBoYXNUb1N0cmluZ1RhZyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbC50b1N0cmluZ1RhZyA9PT0gJ3N5bWJvbCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNSZWdleCh2YWx1ZSkge1xuXHRpZiAoIXZhbHVlIHx8IHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblx0aWYgKCFoYXNUb1N0cmluZ1RhZykge1xuXHRcdHJldHVybiB0b1N0ci5jYWxsKHZhbHVlKSA9PT0gcmVnZXhDbGFzcztcblx0fVxuXG5cdHZhciBkZXNjcmlwdG9yID0gZ09QRCh2YWx1ZSwgJ2xhc3RJbmRleCcpO1xuXHR2YXIgaGFzTGFzdEluZGV4RGF0YVByb3BlcnR5ID0gZGVzY3JpcHRvciAmJiBoYXMoZGVzY3JpcHRvciwgJ3ZhbHVlJyk7XG5cdGlmICghaGFzTGFzdEluZGV4RGF0YVByb3BlcnR5KSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0cmV0dXJuIHRyeVJlZ2V4RXhlY0NhbGwodmFsdWUpO1xufTtcbiJdfQ==","deps":{"has":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\warning.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\warning.js","source":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"production\" !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm5pbmcuanMiXSwibmFtZXMiOlsiZW1wdHlGdW5jdGlvbiIsInJlcXVpcmUiLCJ3YXJuaW5nIiwicHJvY2VzcyIsImVudiIsIk5PREVfRU5WIiwicHJpbnRXYXJuaW5nIiwiZm9ybWF0IiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJhcmdJbmRleCIsIm1lc3NhZ2UiLCJyZXBsYWNlIiwiY29uc29sZSIsImVycm9yIiwiRXJyb3IiLCJ4IiwiY29uZGl0aW9uIiwidW5kZWZpbmVkIiwiaW5kZXhPZiIsIl9sZW4yIiwiX2tleTIiLCJhcHBseSIsImNvbmNhdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQVFBOztBQUVBLElBQUlBLGdCQUFnQkMsUUFBUSxpQkFBUixDQUFwQjs7QUFFQTs7Ozs7OztBQU9BLElBQUlDLFVBQVVGLGFBQWQ7O0FBRUEsSUFBSUcsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDLE1BQUlDLGVBQWUsU0FBU0EsWUFBVCxDQUFzQkMsTUFBdEIsRUFBOEI7QUFDL0MsU0FBSyxJQUFJQyxPQUFPQyxVQUFVQyxNQUFyQixFQUE2QkMsT0FBT0MsTUFBTUosT0FBTyxDQUFQLEdBQVdBLE9BQU8sQ0FBbEIsR0FBc0IsQ0FBNUIsQ0FBcEMsRUFBb0VLLE9BQU8sQ0FBaEYsRUFBbUZBLE9BQU9MLElBQTFGLEVBQWdHSyxNQUFoRyxFQUF3RztBQUN0R0YsV0FBS0UsT0FBTyxDQUFaLElBQWlCSixVQUFVSSxJQUFWLENBQWpCO0FBQ0Q7O0FBRUQsUUFBSUMsV0FBVyxDQUFmO0FBQ0EsUUFBSUMsVUFBVSxjQUFjUixPQUFPUyxPQUFQLENBQWUsS0FBZixFQUFzQixZQUFZO0FBQzVELGFBQU9MLEtBQUtHLFVBQUwsQ0FBUDtBQUNELEtBRjJCLENBQTVCO0FBR0EsUUFBSSxPQUFPRyxPQUFQLEtBQW1CLFdBQXZCLEVBQW9DO0FBQ2xDQSxjQUFRQyxLQUFSLENBQWNILE9BQWQ7QUFDRDtBQUNELFFBQUk7QUFDRjtBQUNBO0FBQ0E7QUFDQSxZQUFNLElBQUlJLEtBQUosQ0FBVUosT0FBVixDQUFOO0FBQ0QsS0FMRCxDQUtFLE9BQU9LLENBQVAsRUFBVSxDQUFFO0FBQ2YsR0FsQkQ7O0FBb0JBbEIsWUFBVSxTQUFTQSxPQUFULENBQWlCbUIsU0FBakIsRUFBNEJkLE1BQTVCLEVBQW9DO0FBQzVDLFFBQUlBLFdBQVdlLFNBQWYsRUFBMEI7QUFDeEIsWUFBTSxJQUFJSCxLQUFKLENBQVUsOERBQThELGtCQUF4RSxDQUFOO0FBQ0Q7O0FBRUQsUUFBSVosT0FBT2dCLE9BQVAsQ0FBZSw2QkFBZixNQUFrRCxDQUF0RCxFQUF5RDtBQUN2RCxhQUR1RCxDQUMvQztBQUNUOztBQUVELFFBQUksQ0FBQ0YsU0FBTCxFQUFnQjtBQUNkLFdBQUssSUFBSUcsUUFBUWYsVUFBVUMsTUFBdEIsRUFBOEJDLE9BQU9DLE1BQU1ZLFFBQVEsQ0FBUixHQUFZQSxRQUFRLENBQXBCLEdBQXdCLENBQTlCLENBQXJDLEVBQXVFQyxRQUFRLENBQXBGLEVBQXVGQSxRQUFRRCxLQUEvRixFQUFzR0MsT0FBdEcsRUFBK0c7QUFDN0dkLGFBQUtjLFFBQVEsQ0FBYixJQUFrQmhCLFVBQVVnQixLQUFWLENBQWxCO0FBQ0Q7O0FBRURuQixtQkFBYW9CLEtBQWIsQ0FBbUJKLFNBQW5CLEVBQThCLENBQUNmLE1BQUQsRUFBU29CLE1BQVQsQ0FBZ0JoQixJQUFoQixDQUE5QjtBQUNEO0FBQ0YsR0FoQkQ7QUFpQkQ7O0FBRURpQixPQUFPQyxPQUFQLEdBQWlCM0IsT0FBakIiLCJmaWxlIjoid2FybmluZy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIGVtcHR5RnVuY3Rpb24gPSByZXF1aXJlKCcuL2VtcHR5RnVuY3Rpb24nKTtcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBlbXB0eUZ1bmN0aW9uO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24gcHJpbnRXYXJuaW5nKGZvcm1hdCkge1xuICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICsgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgIH0pO1xuICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAvLyAtLS0gV2VsY29tZSB0byBkZWJ1Z2dpbmcgUmVhY3QgLS0tXG4gICAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IHlvdSBjYW4gdXNlIHRoaXMgc3RhY2tcbiAgICAgIC8vIHRvIGZpbmQgdGhlIGNhbGxzaXRlIHRoYXQgY2F1c2VkIHRoaXMgd2FybmluZyB0byBmaXJlLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH07XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uIHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignYHdhcm5pbmcoY29uZGl0aW9uLCBmb3JtYXQsIC4uLmFyZ3MpYCByZXF1aXJlcyBhIHdhcm5pbmcgJyArICdtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5pbmRleE9mKCdGYWlsZWQgQ29tcG9zaXRlIHByb3BUeXBlOiAnKSA9PT0gMCkge1xuICAgICAgcmV0dXJuOyAvLyBJZ25vcmUgQ29tcG9zaXRlQ29tcG9uZW50IHByb3B0eXBlIGNoZWNrLlxuICAgIH1cblxuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuMiA+IDIgPyBfbGVuMiAtIDIgOiAwKSwgX2tleTIgPSAyOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTIgLSAyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgICB9XG5cbiAgICAgIHByaW50V2FybmluZy5hcHBseSh1bmRlZmluZWQsIFtmb3JtYXRdLmNvbmNhdChhcmdzKSk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdhcm5pbmc7Il19","deps":{"./emptyFunction":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\emptyFunction.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithTypeCheckers.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithTypeCheckers.js","source":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function (isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (\"production\" !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n        } else if (\"production\" !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (!manualPropTypeCallCache[cacheKey] &&\n          // Avoid spamming the console because they are often not actionable except for lib authors\n          manualPropTypeWarningCount < 3) {\n            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      \"production\" !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      \"production\" !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"./lib/ReactPropTypesSecret":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\lib\\ReactPropTypesSecret.js","object-assign":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-assign\\index.js","fbjs/lib/emptyFunction":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\emptyFunction.js","fbjs/lib/invariant":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\invariant.js","./checkPropTypes":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\checkPropTypes.js","fbjs/lib/warning":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\warning.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (\"production\" !== 'production') {\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n  var isValidElement = function isValidElement(object) {\n    return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIlJFQUNUX0VMRU1FTlRfVFlQRSIsIlN5bWJvbCIsImZvciIsImlzVmFsaWRFbGVtZW50Iiwib2JqZWN0IiwiJCR0eXBlb2YiLCJ0aHJvd09uRGlyZWN0QWNjZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7OztBQU9BLElBQUlBLFFBQVFDLEdBQVIsQ0FBWUMsUUFBWixLQUF5QixZQUE3QixFQUEyQztBQUN6QyxNQUFJQyxxQkFBc0IsT0FBT0MsTUFBUCxLQUFrQixVQUFsQixJQUN4QkEsT0FBT0MsR0FEaUIsSUFFeEJELE9BQU9DLEdBQVAsQ0FBVyxlQUFYLENBRnVCLElBR3ZCLE1BSEY7O0FBS0EsTUFBSUMsaUJBQWlCLFNBQWpCQSxjQUFpQixDQUFTQyxNQUFULEVBQWlCO0FBQ3BDLFdBQU8sUUFBT0EsTUFBUCx5Q0FBT0EsTUFBUCxPQUFrQixRQUFsQixJQUNMQSxXQUFXLElBRE4sSUFFTEEsT0FBT0MsUUFBUCxLQUFvQkwsa0JBRnRCO0FBR0QsR0FKRDs7QUFNQTtBQUNBO0FBQ0EsTUFBSU0sc0JBQXNCLElBQTFCO0FBQ0FDLFNBQU9DLE9BQVAsR0FBaUJDLFFBQVEsMkJBQVIsRUFBcUNOLGNBQXJDLEVBQXFERyxtQkFBckQsQ0FBakI7QUFDRCxDQWhCRCxNQWdCTztBQUNMO0FBQ0E7QUFDQUMsU0FBT0MsT0FBUCxHQUFpQkMsUUFBUSw0QkFBUixHQUFqQjtBQUNEIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB2YXIgUkVBQ1RfRUxFTUVOVF9UWVBFID0gKHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiZcbiAgICBTeW1ib2wuZm9yICYmXG4gICAgU3ltYm9sLmZvcigncmVhY3QuZWxlbWVudCcpKSB8fFxuICAgIDB4ZWFjNztcblxuICB2YXIgaXNWYWxpZEVsZW1lbnQgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICByZXR1cm4gdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiZcbiAgICAgIG9iamVjdCAhPT0gbnVsbCAmJlxuICAgICAgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gIH07XG5cbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgZGV2ZWxvcG1lbnQgYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgdmFyIHRocm93T25EaXJlY3RBY2Nlc3MgPSB0cnVlO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUeXBlQ2hlY2tlcnMnKShpc1ZhbGlkRWxlbWVudCwgdGhyb3dPbkRpcmVjdEFjY2Vzcyk7XG59IGVsc2Uge1xuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBwcm9kdWN0aW9uIGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFRocm93aW5nU2hpbXMnKSgpO1xufVxuIl19","deps":{"./factoryWithThrowingShims":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithThrowingShims.js","./factoryWithTypeCheckers":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithTypeCheckers.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\propTypes.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\propTypes.js","source":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nexports.default = {\n  // General\n  data: _propTypes2.default.array,\n  loading: _propTypes2.default.bool,\n  showPagination: _propTypes2.default.bool,\n  showPaginationTop: _propTypes2.default.bool,\n  showPaginationBottom: _propTypes2.default.bool,\n  showPageSizeOptions: _propTypes2.default.bool,\n  pageSizeOptions: _propTypes2.default.array,\n  defaultPageSize: _propTypes2.default.number,\n  showPageJump: _propTypes2.default.bool,\n  collapseOnSortingChange: _propTypes2.default.bool,\n  collapseOnPageChange: _propTypes2.default.bool,\n  collapseOnDataChange: _propTypes2.default.bool,\n  freezeWhenExpanded: _propTypes2.default.bool,\n  sortable: _propTypes2.default.bool,\n  resizable: _propTypes2.default.bool,\n  filterable: _propTypes2.default.bool,\n  defaultSortDesc: _propTypes2.default.bool,\n  defaultSorted: _propTypes2.default.array,\n  defaultFiltered: _propTypes2.default.array,\n  defaultResized: _propTypes2.default.array,\n  defaultExpanded: _propTypes2.default.object,\n  defaultFilterMethod: _propTypes2.default.func,\n  defaultSortMethod: _propTypes2.default.func,\n\n  // Controlled State Callbacks\n  onPageChange: _propTypes2.default.func,\n  onPageSizeChange: _propTypes2.default.func,\n  onSortedChange: _propTypes2.default.func,\n  onFilteredChange: _propTypes2.default.func,\n  onResizedChange: _propTypes2.default.func,\n  onExpandedChange: _propTypes2.default.func,\n\n  // Pivoting\n  pivotBy: _propTypes2.default.array,\n\n  // Key Constants\n  pivotValKey: _propTypes2.default.string,\n  pivotIDKey: _propTypes2.default.string,\n  subRowsKey: _propTypes2.default.string,\n  aggregatedKey: _propTypes2.default.string,\n  nestingLevelKey: _propTypes2.default.string,\n  originalKey: _propTypes2.default.string,\n  indexKey: _propTypes2.default.string,\n  groupedByPivotKey: _propTypes2.default.string,\n\n  // Server-side Callbacks\n  onFetchData: _propTypes2.default.func,\n\n  // Classes\n  className: _propTypes2.default.string,\n  style: _propTypes2.default.object,\n\n  // Component decorators\n  getProps: _propTypes2.default.func,\n  getTableProps: _propTypes2.default.func,\n  getTheadGroupProps: _propTypes2.default.func,\n  getTheadGroupTrProps: _propTypes2.default.func,\n  getTheadGroupThProps: _propTypes2.default.func,\n  getTheadProps: _propTypes2.default.func,\n  getTheadTrProps: _propTypes2.default.func,\n  getTheadThProps: _propTypes2.default.func,\n  getTheadFilterProps: _propTypes2.default.func,\n  getTheadFilterTrProps: _propTypes2.default.func,\n  getTheadFilterThProps: _propTypes2.default.func,\n  getTbodyProps: _propTypes2.default.func,\n  getTrGroupProps: _propTypes2.default.func,\n  getTrProps: _propTypes2.default.func,\n  getTdProps: _propTypes2.default.func,\n  getTfootProps: _propTypes2.default.func,\n  getTfootTrProps: _propTypes2.default.func,\n  getTfootTdProps: _propTypes2.default.func,\n  getPaginationProps: _propTypes2.default.func,\n  getLoadingProps: _propTypes2.default.func,\n  getNoDataProps: _propTypes2.default.func,\n  getResizerProps: _propTypes2.default.func,\n\n  // Global Column Defaults\n  columns: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    // Renderers\n    Cell: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),\n    Header: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),\n    Footer: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),\n    Aggregated: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),\n    Pivot: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),\n    PivotValue: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),\n    Expander: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string, _propTypes2.default.func]),\n    Filter: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.func]),\n\n    // All Columns\n    sortable: _propTypes2.default.bool, // use table default\n    resizable: _propTypes2.default.bool, // use table default\n    filterable: _propTypes2.default.bool, // use table default\n    show: _propTypes2.default.bool,\n    minWidth: _propTypes2.default.number,\n\n    // Cells only\n    className: _propTypes2.default.string,\n    style: _propTypes2.default.object,\n    getProps: _propTypes2.default.func,\n\n    // Pivot only\n    aggregate: _propTypes2.default.func,\n\n    // Headers only\n    headerClassName: _propTypes2.default.string,\n    headerStyle: _propTypes2.default.object,\n    getHeaderProps: _propTypes2.default.func,\n\n    // Footers only\n    footerClassName: _propTypes2.default.string,\n    footerStyle: _propTypes2.default.object,\n    getFooterProps: _propTypes2.default.object,\n    filterMethod: _propTypes2.default.func,\n    filterAll: _propTypes2.default.bool,\n    sortMethod: _propTypes2.default.func\n  })),\n\n  // Global Expander Column Defaults\n  expanderDefaults: _propTypes2.default.shape({\n    sortable: _propTypes2.default.bool,\n    resizable: _propTypes2.default.bool,\n    filterable: _propTypes2.default.bool,\n    width: _propTypes2.default.number\n  }),\n\n  pivotDefaults: _propTypes2.default.object,\n\n  // Text\n  previousText: _propTypes2.default.node,\n  nextText: _propTypes2.default.node,\n  loadingText: _propTypes2.default.node,\n  noDataText: _propTypes2.default.node,\n  pageText: _propTypes2.default.node,\n  ofText: _propTypes2.default.node,\n  rowsText: _propTypes2.default.node,\n\n  // Components\n  TableComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  TheadComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  TbodyComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  TrGroupComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  TrComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  ThComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  TdComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  TfootComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  FilterComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  ExpanderComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  PivotValueComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  AggregatedComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  // this is a computed default generated using\n  PivotComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  // the ExpanderComponent and PivotValueComponent at run-time in methods.js\n  PaginationComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  PreviousComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  NextComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  LoadingComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  NoDataComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  ResizerComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element]),\n  PadRowComponent: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.element])\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"prop-types":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReactTableDefaults = undefined;\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];var _n = true;var _d = false;var _e = undefined;try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;_e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }return _arr;\n  }return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _utils = require('./utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _lifecycle = require('./lifecycle');\n\nvar _lifecycle2 = _interopRequireDefault(_lifecycle);\n\nvar _methods = require('./methods');\n\nvar _methods2 = _interopRequireDefault(_methods);\n\nvar _defaultProps = require('./defaultProps');\n\nvar _defaultProps2 = _interopRequireDefault(_defaultProps);\n\nvar _propTypes = require('./propTypes');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n//\n\n\nvar ReactTableDefaults = exports.ReactTableDefaults = _defaultProps2.default;\n\nvar ReactTable = function (_Methods) {\n  _inherits(ReactTable, _Methods);\n\n  function ReactTable(props) {\n    _classCallCheck(this, ReactTable);\n\n    var _this = _possibleConstructorReturn(this, (ReactTable.__proto__ || Object.getPrototypeOf(ReactTable)).call(this));\n\n    _this.getResolvedState = _this.getResolvedState.bind(_this);\n    _this.getDataModel = _this.getDataModel.bind(_this);\n    _this.getSortedData = _this.getSortedData.bind(_this);\n    _this.fireFetchData = _this.fireFetchData.bind(_this);\n    _this.getPropOrState = _this.getPropOrState.bind(_this);\n    _this.getStateOrProp = _this.getStateOrProp.bind(_this);\n    _this.filterData = _this.filterData.bind(_this);\n    _this.sortData = _this.sortData.bind(_this);\n    _this.getMinRows = _this.getMinRows.bind(_this);\n    _this.onPageChange = _this.onPageChange.bind(_this);\n    _this.onPageSizeChange = _this.onPageSizeChange.bind(_this);\n    _this.sortColumn = _this.sortColumn.bind(_this);\n    _this.filterColumn = _this.filterColumn.bind(_this);\n    _this.resizeColumnStart = _this.resizeColumnStart.bind(_this);\n    _this.resizeColumnEnd = _this.resizeColumnEnd.bind(_this);\n    _this.resizeColumnMoving = _this.resizeColumnMoving.bind(_this);\n\n    _this.state = {\n      page: 0,\n      pageSize: props.defaultPageSize,\n      sorted: props.defaultSorted,\n      expanded: props.defaultExpanded,\n      filtered: props.defaultFiltered,\n      resized: props.defaultResized,\n      currentlyResizing: false,\n      skipNextSort: false\n    };\n    return _this;\n  }\n\n  _createClass(ReactTable, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var resolvedState = this.getResolvedState();\n      var children = resolvedState.children,\n          className = resolvedState.className,\n          style = resolvedState.style,\n          getProps = resolvedState.getProps,\n          getTableProps = resolvedState.getTableProps,\n          getTheadGroupProps = resolvedState.getTheadGroupProps,\n          getTheadGroupTrProps = resolvedState.getTheadGroupTrProps,\n          getTheadGroupThProps = resolvedState.getTheadGroupThProps,\n          getTheadProps = resolvedState.getTheadProps,\n          getTheadTrProps = resolvedState.getTheadTrProps,\n          getTheadThProps = resolvedState.getTheadThProps,\n          getTheadFilterProps = resolvedState.getTheadFilterProps,\n          getTheadFilterTrProps = resolvedState.getTheadFilterTrProps,\n          getTheadFilterThProps = resolvedState.getTheadFilterThProps,\n          getTbodyProps = resolvedState.getTbodyProps,\n          getTrGroupProps = resolvedState.getTrGroupProps,\n          getTrProps = resolvedState.getTrProps,\n          getTdProps = resolvedState.getTdProps,\n          getTfootProps = resolvedState.getTfootProps,\n          getTfootTrProps = resolvedState.getTfootTrProps,\n          getTfootTdProps = resolvedState.getTfootTdProps,\n          getPaginationProps = resolvedState.getPaginationProps,\n          getLoadingProps = resolvedState.getLoadingProps,\n          getNoDataProps = resolvedState.getNoDataProps,\n          getResizerProps = resolvedState.getResizerProps,\n          showPagination = resolvedState.showPagination,\n          showPaginationTop = resolvedState.showPaginationTop,\n          showPaginationBottom = resolvedState.showPaginationBottom,\n          manual = resolvedState.manual,\n          loadingText = resolvedState.loadingText,\n          noDataText = resolvedState.noDataText,\n          sortable = resolvedState.sortable,\n          multiSort = resolvedState.multiSort,\n          resizable = resolvedState.resizable,\n          filterable = resolvedState.filterable,\n          pivotIDKey = resolvedState.pivotIDKey,\n          pivotValKey = resolvedState.pivotValKey,\n          pivotBy = resolvedState.pivotBy,\n          subRowsKey = resolvedState.subRowsKey,\n          aggregatedKey = resolvedState.aggregatedKey,\n          originalKey = resolvedState.originalKey,\n          indexKey = resolvedState.indexKey,\n          groupedByPivotKey = resolvedState.groupedByPivotKey,\n          loading = resolvedState.loading,\n          pageSize = resolvedState.pageSize,\n          page = resolvedState.page,\n          sorted = resolvedState.sorted,\n          filtered = resolvedState.filtered,\n          resized = resolvedState.resized,\n          expanded = resolvedState.expanded,\n          pages = resolvedState.pages,\n          onExpandedChange = resolvedState.onExpandedChange,\n          TableComponent = resolvedState.TableComponent,\n          TheadComponent = resolvedState.TheadComponent,\n          TbodyComponent = resolvedState.TbodyComponent,\n          TrGroupComponent = resolvedState.TrGroupComponent,\n          TrComponent = resolvedState.TrComponent,\n          ThComponent = resolvedState.ThComponent,\n          TdComponent = resolvedState.TdComponent,\n          TfootComponent = resolvedState.TfootComponent,\n          PaginationComponent = resolvedState.PaginationComponent,\n          LoadingComponent = resolvedState.LoadingComponent,\n          SubComponent = resolvedState.SubComponent,\n          NoDataComponent = resolvedState.NoDataComponent,\n          ResizerComponent = resolvedState.ResizerComponent,\n          ExpanderComponent = resolvedState.ExpanderComponent,\n          PivotValueComponent = resolvedState.PivotValueComponent,\n          PivotComponent = resolvedState.PivotComponent,\n          AggregatedComponent = resolvedState.AggregatedComponent,\n          FilterComponent = resolvedState.FilterComponent,\n          PadRowComponent = resolvedState.PadRowComponent,\n          resolvedData = resolvedState.resolvedData,\n          allVisibleColumns = resolvedState.allVisibleColumns,\n          headerGroups = resolvedState.headerGroups,\n          hasHeaderGroups = resolvedState.hasHeaderGroups,\n          sortedData = resolvedState.sortedData,\n          currentlyResizing = resolvedState.currentlyResizing;\n\n      // Pagination\n\n      var startRow = pageSize * page;\n      var endRow = startRow + pageSize;\n      var pageRows = manual ? resolvedData : sortedData.slice(startRow, endRow);\n      var minRows = this.getMinRows();\n      var padRows = _utils2.default.range(Math.max(minRows - pageRows.length, 0));\n\n      var hasColumnFooter = allVisibleColumns.some(function (d) {\n        return d.Footer;\n      });\n      var hasFilters = filterable || allVisibleColumns.some(function (d) {\n        return d.filterable;\n      });\n\n      var recurseRowsViewIndex = function recurseRowsViewIndex(rows) {\n        var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n        return [rows.map(function (row, i) {\n          index += 1;\n          var rowWithViewIndex = _extends({}, row, {\n            _viewIndex: index\n          });\n          var newPath = path.concat([i]);\n          if (rowWithViewIndex[subRowsKey] && _utils2.default.get(expanded, newPath)) {\n            var _recurseRowsViewIndex = recurseRowsViewIndex(rowWithViewIndex[subRowsKey], newPath, index);\n\n            var _recurseRowsViewIndex2 = _slicedToArray(_recurseRowsViewIndex, 2);\n\n            rowWithViewIndex[subRowsKey] = _recurseRowsViewIndex2[0];\n            index = _recurseRowsViewIndex2[1];\n          }\n          return rowWithViewIndex;\n        }), index];\n      };\n      var _recurseRowsViewIndex3 = recurseRowsViewIndex(pageRows);\n\n      var _recurseRowsViewIndex4 = _slicedToArray(_recurseRowsViewIndex3, 1);\n\n      pageRows = _recurseRowsViewIndex4[0];\n\n      var canPrevious = page > 0;\n      var canNext = page + 1 < pages;\n\n      var rowMinWidth = _utils2.default.sum(allVisibleColumns.map(function (d) {\n        var resizedColumn = resized.find(function (x) {\n          return x.id === d.id;\n        }) || {};\n        return _utils2.default.getFirstDefined(resizedColumn.value, d.width, d.minWidth);\n      }));\n\n      var rowIndex = -1;\n\n      var finalState = _extends({}, resolvedState, {\n        startRow: startRow,\n        endRow: endRow,\n        pageRows: pageRows,\n        minRows: minRows,\n        padRows: padRows,\n        hasColumnFooter: hasColumnFooter,\n        canPrevious: canPrevious,\n        canNext: canNext,\n        rowMinWidth: rowMinWidth\n      });\n\n      var rootProps = _utils2.default.splitProps(getProps(finalState, undefined, undefined, this));\n      var tableProps = _utils2.default.splitProps(getTableProps(finalState, undefined, undefined, this));\n      var tBodyProps = _utils2.default.splitProps(getTbodyProps(finalState, undefined, undefined, this));\n      var loadingProps = getLoadingProps(finalState, undefined, undefined, this);\n      var noDataProps = getNoDataProps(finalState, undefined, undefined, this);\n\n      // Visual Components\n\n      var makeHeaderGroup = function makeHeaderGroup(column, i) {\n        var resizedValue = function resizedValue(col) {\n          return (resized.find(function (x) {\n            return x.id === col.id;\n          }) || {}).value;\n        };\n        var flex = _utils2.default.sum(column.columns.map(function (col) {\n          return col.width || resizedValue(col) ? 0 : col.minWidth;\n        }));\n        var width = _utils2.default.sum(column.columns.map(function (col) {\n          return _utils2.default.getFirstDefined(resizedValue(col), col.width, col.minWidth);\n        }));\n        var maxWidth = _utils2.default.sum(column.columns.map(function (col) {\n          return _utils2.default.getFirstDefined(resizedValue(col), col.width, col.maxWidth);\n        }));\n\n        var theadGroupThProps = _utils2.default.splitProps(getTheadGroupThProps(finalState, undefined, column, _this2));\n        var columnHeaderProps = _utils2.default.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadGroupThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadGroupThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadGroupThProps.rest, columnHeaderProps.rest);\n\n        var flexStyles = {\n          flex: flex + ' 0 auto',\n          width: _utils2.default.asPx(width),\n          maxWidth: _utils2.default.asPx(maxWidth)\n        };\n\n        return _react2.default.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: (0, _classnames2.default)(classes),\n          style: _extends({}, styles, flexStyles)\n        }, rest), _utils2.default.normalizeComponent(column.Header, {\n          data: sortedData,\n          column: column\n        }));\n      };\n\n      var makeHeaderGroups = function makeHeaderGroups() {\n        var theadGroupProps = _utils2.default.splitProps(getTheadGroupProps(finalState, undefined, undefined, _this2));\n        var theadGroupTrProps = _utils2.default.splitProps(getTheadGroupTrProps(finalState, undefined, undefined, _this2));\n        return _react2.default.createElement(TheadComponent, _extends({\n          className: (0, _classnames2.default)('-headerGroups', theadGroupProps.className),\n          style: _extends({}, theadGroupProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadGroupProps.rest), _react2.default.createElement(TrComponent, _extends({\n          className: theadGroupTrProps.className,\n          style: theadGroupTrProps.style\n        }, theadGroupTrProps.rest), headerGroups.map(makeHeaderGroup)));\n      };\n\n      var makeHeader = function makeHeader(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var sort = sorted.find(function (d) {\n          return d.id === column.id;\n        });\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n        var width = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var maxWidth = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var theadThProps = _utils2.default.splitProps(getTheadThProps(finalState, undefined, column, _this2));\n        var columnHeaderProps = _utils2.default.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadThProps.rest, columnHeaderProps.rest);\n\n        var isResizable = _utils2.default.getFirstDefined(column.resizable, resizable, false);\n        var resizer = isResizable ? _react2.default.createElement(ResizerComponent, _extends({\n          onMouseDown: function onMouseDown(e) {\n            return _this2.resizeColumnStart(e, column, false);\n          },\n          onTouchStart: function onTouchStart(e) {\n            return _this2.resizeColumnStart(e, column, true);\n          }\n        }, getResizerProps('finalState', undefined, column, _this2))) : null;\n\n        var isSortable = _utils2.default.getFirstDefined(column.sortable, sortable, false);\n\n        return _react2.default.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: (0, _classnames2.default)(classes, isResizable && 'rt-resizable-header', sort ? sort.desc ? '-sort-desc' : '-sort-asc' : '', isSortable && '-cursor-pointer', !show && '-hidden', pivotBy && pivotBy.slice(0, -1).includes(column.id) && 'rt-header-pivot'),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _utils2.default.asPx(width),\n            maxWidth: _utils2.default.asPx(maxWidth)\n          }),\n          toggleSort: function toggleSort(e) {\n            if (isSortable) _this2.sortColumn(column, multiSort ? e.shiftKey : false);\n          }\n        }, rest), _react2.default.createElement('div', { className: (0, _classnames2.default)(isResizable && 'rt-resizable-header-content') }, _utils2.default.normalizeComponent(column.Header, {\n          data: sortedData,\n          column: column\n        })), resizer);\n      };\n\n      var makeHeaders = function makeHeaders() {\n        var theadProps = _utils2.default.splitProps(getTheadProps(finalState, undefined, undefined, _this2));\n        var theadTrProps = _utils2.default.splitProps(getTheadTrProps(finalState, undefined, undefined, _this2));\n        return _react2.default.createElement(TheadComponent, _extends({\n          className: (0, _classnames2.default)('-header', theadProps.className),\n          style: _extends({}, theadProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadProps.rest), _react2.default.createElement(TrComponent, _extends({\n          className: theadTrProps.className,\n          style: theadTrProps.style\n        }, theadTrProps.rest), allVisibleColumns.map(makeHeader)));\n      };\n\n      var makeFilter = function makeFilter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var width = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var maxWidth = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var theadFilterThProps = _utils2.default.splitProps(getTheadFilterThProps(finalState, undefined, column, _this2));\n        var columnHeaderProps = _utils2.default.splitProps(column.getHeaderProps(finalState, undefined, column, _this2));\n\n        var classes = [column.headerClassName, theadFilterThProps.className, columnHeaderProps.className];\n\n        var styles = _extends({}, column.headerStyle, theadFilterThProps.style, columnHeaderProps.style);\n\n        var rest = _extends({}, theadFilterThProps.rest, columnHeaderProps.rest);\n\n        var filter = filtered.find(function (filter) {\n          return filter.id === column.id;\n        });\n\n        var ResolvedFilterComponent = column.Filter || FilterComponent;\n\n        var isFilterable = _utils2.default.getFirstDefined(column.filterable, filterable, false);\n\n        return _react2.default.createElement(ThComponent, _extends({\n          key: i + '-' + column.id,\n          className: (0, _classnames2.default)(classes),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _utils2.default.asPx(width),\n            maxWidth: _utils2.default.asPx(maxWidth)\n          })\n        }, rest), isFilterable ? _utils2.default.normalizeComponent(ResolvedFilterComponent, {\n          column: column,\n          filter: filter,\n          onChange: function onChange(value) {\n            return _this2.filterColumn(column, value);\n          }\n        }, _defaultProps2.default.column.Filter) : null);\n      };\n\n      var makeFilters = function makeFilters() {\n        var theadFilterProps = _utils2.default.splitProps(getTheadFilterProps(finalState, undefined, undefined, _this2));\n        var theadFilterTrProps = _utils2.default.splitProps(getTheadFilterTrProps(finalState, undefined, undefined, _this2));\n        return _react2.default.createElement(TheadComponent, _extends({\n          className: (0, _classnames2.default)('-filters', theadFilterProps.className),\n          style: _extends({}, theadFilterProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, theadFilterProps.rest), _react2.default.createElement(TrComponent, _extends({\n          className: theadFilterTrProps.className,\n          style: theadFilterTrProps.style\n        }, theadFilterTrProps.rest), allVisibleColumns.map(makeFilter)));\n      };\n\n      var makePageRow = function makePageRow(row, i) {\n        var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n        var rowInfo = {\n          original: row[originalKey],\n          row: row,\n          index: row[indexKey],\n          viewIndex: rowIndex += 1,\n          pageSize: pageSize,\n          page: page,\n          level: path.length,\n          nestingPath: path.concat([i]),\n          aggregated: row[aggregatedKey],\n          groupedByPivot: row[groupedByPivotKey],\n          subRows: row[subRowsKey]\n        };\n        var isExpanded = _utils2.default.get(expanded, rowInfo.nestingPath);\n        var trGroupProps = getTrGroupProps(finalState, rowInfo, undefined, _this2);\n        var trProps = _utils2.default.splitProps(getTrProps(finalState, rowInfo, undefined, _this2));\n        return _react2.default.createElement(TrGroupComponent, _extends({ key: rowInfo.nestingPath.join('_') }, trGroupProps), _react2.default.createElement(TrComponent, _extends({\n          className: (0, _classnames2.default)(trProps.className, row._viewIndex % 2 ? '-even' : '-odd'),\n          style: trProps.style\n        }, trProps.rest), allVisibleColumns.map(function (column, i2) {\n          var resizedCol = resized.find(function (x) {\n            return x.id === column.id;\n          }) || {};\n          var show = typeof column.show === 'function' ? column.show() : column.show;\n          var width = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n          var maxWidth = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n          var tdProps = _utils2.default.splitProps(getTdProps(finalState, rowInfo, column, _this2));\n          var columnProps = _utils2.default.splitProps(column.getProps(finalState, rowInfo, column, _this2));\n\n          var classes = [tdProps.className, column.className, columnProps.className];\n\n          var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n          var cellInfo = _extends({}, rowInfo, {\n            isExpanded: isExpanded,\n            column: _extends({}, column),\n            value: rowInfo.row[column.id],\n            pivoted: column.pivoted,\n            expander: column.expander,\n            resized: resized,\n            show: show,\n            width: width,\n            maxWidth: maxWidth,\n            tdProps: tdProps,\n            columnProps: columnProps,\n            classes: classes,\n            styles: styles\n          });\n\n          var value = cellInfo.value;\n\n          var useOnExpanderClick = void 0;\n          var isBranch = void 0;\n          var isPreview = void 0;\n\n          var onExpanderClick = function onExpanderClick(e) {\n            var newExpanded = _utils2.default.clone(expanded);\n            if (isExpanded) {\n              newExpanded = _utils2.default.set(newExpanded, cellInfo.nestingPath, false);\n            } else {\n              newExpanded = _utils2.default.set(newExpanded, cellInfo.nestingPath, {});\n            }\n\n            return _this2.setStateWithData({\n              expanded: newExpanded\n            }, function () {\n              return onExpandedChange && onExpandedChange(newExpanded, cellInfo.nestingPath, e);\n            });\n          };\n\n          // Default to a standard cell\n          var resolvedCell = _utils2.default.normalizeComponent(column.Cell, cellInfo, value);\n\n          // Resolve Renderers\n          var ResolvedAggregatedComponent = column.Aggregated || (!column.aggregate ? AggregatedComponent : column.Cell);\n          var ResolvedExpanderComponent = column.Expander || ExpanderComponent;\n          var ResolvedPivotValueComponent = column.PivotValue || PivotValueComponent;\n          var DefaultResolvedPivotComponent = PivotComponent || function (props) {\n            return _react2.default.createElement('div', null, _react2.default.createElement(ResolvedExpanderComponent, props), _react2.default.createElement(ResolvedPivotValueComponent, props));\n          };\n          var ResolvedPivotComponent = column.Pivot || DefaultResolvedPivotComponent;\n\n          // Is this cell expandable?\n          if (cellInfo.pivoted || cellInfo.expander) {\n            // Make it expandable by defualt\n            cellInfo.expandable = true;\n            useOnExpanderClick = true;\n            // If pivoted, has no subRows, and does not have a subComponent,\n            // do not make expandable\n            if (cellInfo.pivoted && !cellInfo.subRows && !SubComponent) {\n              cellInfo.expandable = false;\n            }\n          }\n\n          if (cellInfo.pivoted) {\n            // Is this column a branch?\n            isBranch = rowInfo.row[pivotIDKey] === column.id && cellInfo.subRows;\n            // Should this column be blank?\n            isPreview = pivotBy.indexOf(column.id) > pivotBy.indexOf(rowInfo.row[pivotIDKey]) && cellInfo.subRows;\n            // Pivot Cell Render Override\n            if (isBranch) {\n              // isPivot\n              resolvedCell = _utils2.default.normalizeComponent(ResolvedPivotComponent, _extends({}, cellInfo, {\n                value: row[pivotValKey]\n              }), row[pivotValKey]);\n            } else if (isPreview) {\n              // Show the pivot preview\n              resolvedCell = _utils2.default.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n            } else {\n              resolvedCell = null;\n            }\n          } else if (cellInfo.aggregated) {\n            resolvedCell = _utils2.default.normalizeComponent(ResolvedAggregatedComponent, cellInfo, value);\n          }\n\n          if (cellInfo.expander) {\n            resolvedCell = _utils2.default.normalizeComponent(ResolvedExpanderComponent, cellInfo, row[pivotValKey]);\n            if (pivotBy) {\n              if (cellInfo.groupedByPivot) {\n                resolvedCell = null;\n              }\n              if (!cellInfo.subRows && !SubComponent) {\n                resolvedCell = null;\n              }\n            }\n          }\n\n          var resolvedOnExpanderClick = useOnExpanderClick ? onExpanderClick : function () {};\n\n          // If there are multiple onClick events, make sure they don't\n          // override eachother. This should maybe be expanded to handle all\n          // function attributes\n          var interactionProps = {\n            onClick: resolvedOnExpanderClick\n          };\n\n          if (tdProps.rest.onClick) {\n            interactionProps.onClick = function (e) {\n              tdProps.rest.onClick(e, function () {\n                return resolvedOnExpanderClick(e);\n              });\n            };\n          }\n\n          if (columnProps.rest.onClick) {\n            interactionProps.onClick = function (e) {\n              columnProps.rest.onClick(e, function () {\n                return resolvedOnExpanderClick(e);\n              });\n            };\n          }\n\n          // Return the cell\n          return _react2.default.createElement(TdComponent\n          // eslint-disable-next-line react/no-array-index-key\n\n          , _extends({ key: i2 + '-' + column.id,\n            className: (0, _classnames2.default)(classes, !show && 'hidden', cellInfo.expandable && 'rt-expandable', (isBranch || isPreview) && 'rt-pivot'),\n            style: _extends({}, styles, {\n              flex: width + ' 0 auto',\n              width: _utils2.default.asPx(width),\n              maxWidth: _utils2.default.asPx(maxWidth)\n            })\n          }, tdProps.rest, columnProps.rest, interactionProps), resolvedCell);\n        })), rowInfo.subRows && isExpanded && rowInfo.subRows.map(function (d, i) {\n          return makePageRow(d, i, rowInfo.nestingPath);\n        }), SubComponent && !rowInfo.subRows && isExpanded && SubComponent(rowInfo));\n      };\n\n      var makePadColumn = function makePadColumn(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n        var width = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var flex = width;\n        var maxWidth = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var tdProps = _utils2.default.splitProps(getTdProps(finalState, undefined, column, _this2));\n        var columnProps = _utils2.default.splitProps(column.getProps(finalState, undefined, column, _this2));\n\n        var classes = [tdProps.className, column.className, columnProps.className];\n\n        var styles = _extends({}, tdProps.style, column.style, columnProps.style);\n\n        return _react2.default.createElement(TdComponent, _extends({\n          key: i + '-' + column.id,\n          className: (0, _classnames2.default)(classes, !show && 'hidden'),\n          style: _extends({}, styles, {\n            flex: flex + ' 0 auto',\n            width: _utils2.default.asPx(width),\n            maxWidth: _utils2.default.asPx(maxWidth)\n          })\n        }, tdProps.rest), _utils2.default.normalizeComponent(PadRowComponent));\n      };\n\n      var makePadRow = function makePadRow(row, i) {\n        var trGroupProps = getTrGroupProps(finalState, undefined, undefined, _this2);\n        var trProps = _utils2.default.splitProps(getTrProps(finalState, undefined, undefined, _this2));\n        return _react2.default.createElement(TrGroupComponent, _extends({ key: i }, trGroupProps), _react2.default.createElement(TrComponent, {\n          className: (0, _classnames2.default)('-padRow', (pageRows.length + i) % 2 ? '-even' : '-odd', trProps.className),\n          style: trProps.style || {}\n        }, allVisibleColumns.map(makePadColumn)));\n      };\n\n      var makeColumnFooter = function makeColumnFooter(column, i) {\n        var resizedCol = resized.find(function (x) {\n          return x.id === column.id;\n        }) || {};\n        var show = typeof column.show === 'function' ? column.show() : column.show;\n        var width = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.minWidth);\n        var maxWidth = _utils2.default.getFirstDefined(resizedCol.value, column.width, column.maxWidth);\n        var tFootTdProps = _utils2.default.splitProps(getTfootTdProps(finalState, undefined, undefined, _this2));\n        var columnProps = _utils2.default.splitProps(column.getProps(finalState, undefined, column, _this2));\n        var columnFooterProps = _utils2.default.splitProps(column.getFooterProps(finalState, undefined, column, _this2));\n\n        var classes = [tFootTdProps.className, column.className, columnProps.className, columnFooterProps.className];\n\n        var styles = _extends({}, tFootTdProps.style, column.style, columnProps.style, columnFooterProps.style);\n\n        return _react2.default.createElement(TdComponent, _extends({\n          key: i + '-' + column.id,\n          className: (0, _classnames2.default)(classes, !show && 'hidden'),\n          style: _extends({}, styles, {\n            flex: width + ' 0 auto',\n            width: _utils2.default.asPx(width),\n            maxWidth: _utils2.default.asPx(maxWidth)\n          })\n        }, columnProps.rest, tFootTdProps.rest, columnFooterProps.rest), _utils2.default.normalizeComponent(column.Footer, {\n          data: sortedData,\n          column: column\n        }));\n      };\n\n      var makeColumnFooters = function makeColumnFooters() {\n        var tFootProps = getTfootProps(finalState, undefined, undefined, _this2);\n        var tFootTrProps = _utils2.default.splitProps(getTfootTrProps(finalState, undefined, undefined, _this2));\n        return _react2.default.createElement(TfootComponent, _extends({\n          className: tFootProps.className,\n          style: _extends({}, tFootProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, tFootProps.rest), _react2.default.createElement(TrComponent, _extends({\n          className: (0, _classnames2.default)(tFootTrProps.className),\n          style: tFootTrProps.style\n        }, tFootTrProps.rest), allVisibleColumns.map(makeColumnFooter)));\n      };\n\n      var makePagination = function makePagination() {\n        var paginationProps = _utils2.default.splitProps(getPaginationProps(finalState, undefined, undefined, _this2));\n        return _react2.default.createElement(PaginationComponent, _extends({}, resolvedState, {\n          pages: pages,\n          canPrevious: canPrevious,\n          canNext: canNext,\n          onPageChange: _this2.onPageChange,\n          onPageSizeChange: _this2.onPageSizeChange,\n          className: paginationProps.className,\n          style: paginationProps.style\n        }, paginationProps.rest));\n      };\n\n      var makeTable = function makeTable() {\n        var pagination = makePagination();\n        return _react2.default.createElement('div', _extends({\n          className: (0, _classnames2.default)('ReactTable', className, rootProps.className),\n          style: _extends({}, style, rootProps.style)\n        }, rootProps.rest), showPagination && showPaginationTop ? _react2.default.createElement('div', { className: 'pagination-top' }, pagination) : null, _react2.default.createElement(TableComponent, _extends({\n          className: (0, _classnames2.default)(tableProps.className, currentlyResizing ? 'rt-resizing' : ''),\n          style: tableProps.style\n        }, tableProps.rest), hasHeaderGroups ? makeHeaderGroups() : null, makeHeaders(), hasFilters ? makeFilters() : null, _react2.default.createElement(TbodyComponent, _extends({\n          className: (0, _classnames2.default)(tBodyProps.className),\n          style: _extends({}, tBodyProps.style, {\n            minWidth: rowMinWidth + 'px'\n          })\n        }, tBodyProps.rest), pageRows.map(function (d, i) {\n          return makePageRow(d, i);\n        }), padRows.map(makePadRow)), hasColumnFooter ? makeColumnFooters() : null), showPagination && showPaginationBottom ? _react2.default.createElement('div', { className: 'pagination-bottom' }, pagination) : null, !pageRows.length && _react2.default.createElement(NoDataComponent, noDataProps, _utils2.default.normalizeComponent(noDataText)), _react2.default.createElement(LoadingComponent, _extends({\n          loading: loading,\n          loadingText: loadingText\n        }, loadingProps)));\n      };\n\n      // childProps are optionally passed to a function-as-a-child\n      return children ? children(finalState, makeTable, this) : makeTable();\n    }\n  }]);\n\n  return ReactTable;\n}((0, _methods2.default)((0, _lifecycle2.default)(_react.Component)));\n\nReactTable.propTypes = _propTypes2.default;\nReactTable.defaultProps = _defaultProps2.default;\nexports.default = ReactTable;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","./lifecycle":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\lifecycle.js","./methods":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\methods.js","./utils":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\utils.js","./defaultProps":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\defaultProps.js","classnames":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\classnames\\index.js","./propTypes":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\propTypes.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\table.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\table.js","source":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar React = require('react');\nvar Table = require('react-table').default;\n\nvar TableComponent = function (_React$PureComponent) {\n  _inherits(TableComponent, _React$PureComponent);\n\n  function TableComponent() {\n    _classCallCheck(this, TableComponent);\n\n    return _possibleConstructorReturn(this, (TableComponent.__proto__ || Object.getPrototypeOf(TableComponent)).apply(this, arguments));\n  }\n\n  _createClass(TableComponent, [{\n    key: 'getColumns',\n    value: function getColumns() {\n      if (this.props.columns) {\n        if (this.props.columns.length && typeof this.props.columns[0] === 'string') {\n          return this.props.columns.map(function (d) {\n            return {\n              Header: d,\n              accessor: d\n            };\n          });\n        }\n\n        return this.props.columns;\n      }\n      if ((this.props.data || []).length) {\n        return Object.keys(this.props.data[0]).map(function (d) {\n          return {\n            Header: d,\n            accessor: d\n          };\n        });\n      }\n\n      return [];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement(Table, _extends({\n        className: 'table ' + (this.props.className || ''),\n        minRows: (this.props.data || []).length\n      }, this.props, {\n        children: undefined,\n        columns: this.getColumns()\n      }));\n    }\n  }]);\n\n  return TableComponent;\n}(React.PureComponent);\n\nTableComponent.defaultProps = {\n  showPagination: false,\n  showPageSizeOptions: false,\n  showPageJump: false\n};\n\nmodule.exports = TableComponent;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlRhYmxlIiwiZGVmYXVsdCIsIlRhYmxlQ29tcG9uZW50IiwicHJvcHMiLCJjb2x1bW5zIiwibGVuZ3RoIiwibWFwIiwiZCIsIkhlYWRlciIsImFjY2Vzc29yIiwiZGF0YSIsIk9iamVjdCIsImtleXMiLCJjbGFzc05hbWUiLCJ1bmRlZmluZWQiLCJnZXRDb2x1bW5zIiwiUHVyZUNvbXBvbmVudCIsImRlZmF1bHRQcm9wcyIsInNob3dQYWdpbmF0aW9uIiwic2hvd1BhZ2VTaXplT3B0aW9ucyIsInNob3dQYWdlSnVtcCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQU1BLFFBQVFDLFFBQVEsT0FBUixDQUFkO0FBQ0EsSUFBTUMsUUFBUUQsUUFBUSxhQUFSLEVBQXVCRSxPQUFyQzs7SUFFTUMsYzs7Ozs7Ozs7Ozs7aUNBQ1M7QUFDWCxVQUFJLEtBQUtDLEtBQUwsQ0FBV0MsT0FBZixFQUF3QjtBQUN0QixZQUFJLEtBQUtELEtBQUwsQ0FBV0MsT0FBWCxDQUFtQkMsTUFBbkIsSUFBNkIsT0FBTyxLQUFLRixLQUFMLENBQVdDLE9BQVgsQ0FBbUIsQ0FBbkIsQ0FBUCxLQUFpQyxRQUFsRSxFQUE0RTtBQUMxRSxpQkFBTyxLQUFLRCxLQUFMLENBQVdDLE9BQVgsQ0FBbUJFLEdBQW5CLENBQXVCLFVBQUNDLENBQUQsRUFBTztBQUNuQyxtQkFBTztBQUNMQyxzQkFBUUQsQ0FESDtBQUVMRSx3QkFBVUY7QUFGTCxhQUFQO0FBSUQsV0FMTSxDQUFQO0FBTUQ7O0FBRUQsZUFBTyxLQUFLSixLQUFMLENBQVdDLE9BQWxCO0FBQ0Q7QUFDRCxVQUFJLENBQUMsS0FBS0QsS0FBTCxDQUFXTyxJQUFYLElBQW1CLEVBQXBCLEVBQXdCTCxNQUE1QixFQUFvQztBQUNsQyxlQUFPTSxPQUFPQyxJQUFQLENBQVksS0FBS1QsS0FBTCxDQUFXTyxJQUFYLENBQWdCLENBQWhCLENBQVosRUFBZ0NKLEdBQWhDLENBQW9DLFVBQUNDLENBQUQsRUFBTztBQUNoRCxpQkFBTztBQUNMQyxvQkFBUUQsQ0FESDtBQUVMRSxzQkFBVUY7QUFGTCxXQUFQO0FBSUQsU0FMTSxDQUFQO0FBTUQ7O0FBRUQsYUFBTyxFQUFQO0FBQ0Q7Ozs2QkFDUTtBQUNQLGFBQ0Usb0JBQUMsS0FBRDtBQUNFLCtCQUFvQixLQUFLSixLQUFMLENBQVdVLFNBQVgsSUFBd0IsRUFBNUMsQ0FERjtBQUVFLGlCQUFTLENBQUMsS0FBS1YsS0FBTCxDQUFXTyxJQUFYLElBQW1CLEVBQXBCLEVBQXdCTDtBQUZuQyxTQUdNLEtBQUtGLEtBSFg7QUFJRSxrQkFBVVcsU0FKWjtBQUtFLGlCQUFTLEtBQUtDLFVBQUw7QUFMWCxTQURGO0FBU0Q7Ozs7RUFuQzBCakIsTUFBTWtCLGE7O0FBc0NuQ2QsZUFBZWUsWUFBZixHQUE4QjtBQUM1QkMsa0JBQWdCLEtBRFk7QUFFNUJDLHVCQUFxQixLQUZPO0FBRzVCQyxnQkFBYztBQUhjLENBQTlCOztBQU1BQyxPQUFPQyxPQUFQLEdBQWlCcEIsY0FBakIiLCJmaWxlIjoidGFibGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBUYWJsZSA9IHJlcXVpcmUoJ3JlYWN0LXRhYmxlJykuZGVmYXVsdDtcblxuY2xhc3MgVGFibGVDb21wb25lbnQgZXh0ZW5kcyBSZWFjdC5QdXJlQ29tcG9uZW50IHtcbiAgZ2V0Q29sdW1ucygpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5jb2x1bW5zKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy5jb2x1bW5zLmxlbmd0aCAmJiB0eXBlb2YgdGhpcy5wcm9wcy5jb2x1bW5zWzBdID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9wcy5jb2x1bW5zLm1hcCgoZCkgPT4ge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBIZWFkZXI6IGQsXG4gICAgICAgICAgICBhY2Nlc3NvcjogZFxuICAgICAgICAgIH07XG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNvbHVtbnM7XG4gICAgfVxuICAgIGlmICgodGhpcy5wcm9wcy5kYXRhIHx8IFtdKS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLnByb3BzLmRhdGFbMF0pLm1hcCgoZCkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIEhlYWRlcjogZCxcbiAgICAgICAgICBhY2Nlc3NvcjogZFxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cblxuICAgIHJldHVybiBbXTtcbiAgfVxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxUYWJsZVxuICAgICAgICBjbGFzc05hbWU9e2B0YWJsZSAke3RoaXMucHJvcHMuY2xhc3NOYW1lIHx8ICcnfWB9XG4gICAgICAgIG1pblJvd3M9eyh0aGlzLnByb3BzLmRhdGEgfHwgW10pLmxlbmd0aH1cbiAgICAgICAgey4uLnRoaXMucHJvcHN9XG4gICAgICAgIGNoaWxkcmVuPXt1bmRlZmluZWR9XG4gICAgICAgIGNvbHVtbnM9e3RoaXMuZ2V0Q29sdW1ucygpfVxuICAgICAgICAgLz5cbiAgICApO1xuICB9XG59XG5cblRhYmxlQ29tcG9uZW50LmRlZmF1bHRQcm9wcyA9IHtcbiAgc2hvd1BhZ2luYXRpb246IGZhbHNlLFxuICBzaG93UGFnZVNpemVPcHRpb25zOiBmYWxzZSxcbiAgc2hvd1BhZ2VKdW1wOiBmYWxzZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFRhYmxlQ29tcG9uZW50O1xuIl19","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","react-table":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_2.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\.idyll\\_stream_2.js","source":"'use strict';\n\nmodule.exports = {\n\t'header': require('C:/Users/Eric/Dropbox/Documents/Writing/RPG/Computer/components/default/header.js'),\n\t'aside': require('C:/Users/Eric/Dropbox/Documents/Writing/RPG/Computer/components/default/aside.js'),\n\t'table': require('C:/Users/Eric/Dropbox/Documents/Writing/RPG/Computer/components/default/table.js')\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9zdHJlYW1fMi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBT0MsT0FBUCxHQUFpQjtBQUNoQixXQUFVQyxRQUFRLG1GQUFSLENBRE07QUFFaEIsVUFBU0EsUUFBUSxrRkFBUixDQUZPO0FBR2hCLFVBQVNBLFFBQVEsa0ZBQVI7QUFITyxDQUFqQiIsImZpbGUiOiJfc3RyZWFtXzIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcblx0J2hlYWRlcic6IHJlcXVpcmUoJ0M6L1VzZXJzL0VyaWMvRHJvcGJveC9Eb2N1bWVudHMvV3JpdGluZy9SUEcvQ29tcHV0ZXIvY29tcG9uZW50cy9kZWZhdWx0L2hlYWRlci5qcycpLFxuXHQnYXNpZGUnOiByZXF1aXJlKCdDOi9Vc2Vycy9FcmljL0Ryb3Bib3gvRG9jdW1lbnRzL1dyaXRpbmcvUlBHL0NvbXB1dGVyL2NvbXBvbmVudHMvZGVmYXVsdC9hc2lkZS5qcycpLFxuXHQndGFibGUnOiByZXF1aXJlKCdDOi9Vc2Vycy9FcmljL0Ryb3Bib3gvRG9jdW1lbnRzL1dyaXRpbmcvUlBHL0NvbXB1dGVyL2NvbXBvbmVudHMvZGVmYXVsdC90YWJsZS5qcycpXG59XG4iXX0=","deps":{"C:/Users/Eric/Dropbox/Documents/Writing/RPG/Computer/components/default/header.js":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\header.js","C:/Users/Eric/Dropbox/Documents/Writing/RPG/Computer/components/default/aside.js":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\aside.js","C:/Users/Eric/Dropbox/Documents/Writing/RPG/Computer/components/default/table.js":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\table.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-date-object\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-date-object\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && _typeof(Symbol.toStringTag) === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImdldERheSIsIkRhdGUiLCJwcm90b3R5cGUiLCJ0cnlEYXRlT2JqZWN0IiwidmFsdWUiLCJjYWxsIiwiZSIsInRvU3RyIiwiT2JqZWN0IiwidG9TdHJpbmciLCJkYXRlQ2xhc3MiLCJoYXNUb1N0cmluZ1RhZyIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwibW9kdWxlIiwiZXhwb3J0cyIsImlzRGF0ZU9iamVjdCJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFFQSxJQUFJQSxTQUFTQyxLQUFLQyxTQUFMLENBQWVGLE1BQTVCO0FBQ0EsSUFBSUcsZ0JBQWdCLFNBQVNBLGFBQVQsQ0FBdUJDLEtBQXZCLEVBQThCO0FBQ2pELEtBQUk7QUFDSEosU0FBT0ssSUFBUCxDQUFZRCxLQUFaO0FBQ0EsU0FBTyxJQUFQO0FBQ0EsRUFIRCxDQUdFLE9BQU9FLENBQVAsRUFBVTtBQUNYLFNBQU8sS0FBUDtBQUNBO0FBQ0QsQ0FQRDs7QUFTQSxJQUFJQyxRQUFRQyxPQUFPTixTQUFQLENBQWlCTyxRQUE3QjtBQUNBLElBQUlDLFlBQVksZUFBaEI7QUFDQSxJQUFJQyxpQkFBaUIsT0FBT0MsTUFBUCxLQUFrQixVQUFsQixJQUFnQyxRQUFPQSxPQUFPQyxXQUFkLE1BQThCLFFBQW5GOztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFlBQVQsQ0FBc0JaLEtBQXRCLEVBQTZCO0FBQzdDLEtBQUksUUFBT0EsS0FBUCx5Q0FBT0EsS0FBUCxPQUFpQixRQUFqQixJQUE2QkEsVUFBVSxJQUEzQyxFQUFpRDtBQUFFLFNBQU8sS0FBUDtBQUFlO0FBQ2xFLFFBQU9PLGlCQUFpQlIsY0FBY0MsS0FBZCxDQUFqQixHQUF3Q0csTUFBTUYsSUFBTixDQUFXRCxLQUFYLE1BQXNCTSxTQUFyRTtBQUNBLENBSEQiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBnZXREYXkgPSBEYXRlLnByb3RvdHlwZS5nZXREYXk7XG52YXIgdHJ5RGF0ZU9iamVjdCA9IGZ1bmN0aW9uIHRyeURhdGVPYmplY3QodmFsdWUpIHtcblx0dHJ5IHtcblx0XHRnZXREYXkuY2FsbCh2YWx1ZSk7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn07XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgZGF0ZUNsYXNzID0gJ1tvYmplY3QgRGF0ZV0nO1xudmFyIGhhc1RvU3RyaW5nVGFnID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgU3ltYm9sLnRvU3RyaW5nVGFnID09PSAnc3ltYm9sJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0RhdGVPYmplY3QodmFsdWUpIHtcblx0aWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcgfHwgdmFsdWUgPT09IG51bGwpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdHJldHVybiBoYXNUb1N0cmluZ1RhZyA/IHRyeURhdGVPYmplY3QodmFsdWUpIDogdG9TdHIuY2FsbCh2YWx1ZSkgPT09IGRhdGVDbGFzcztcbn07XG4iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-symbol\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-symbol\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = typeof Symbol === 'function' && _typeof(Symbol()) === 'symbol';\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isSymbolObject(value) {\n\t\tif (_typeof(value.valueOf()) !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\tmodule.exports = function isSymbol(value) {\n\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false;\n\t};\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInRvU3RyIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJoYXNTeW1ib2xzIiwiU3ltYm9sIiwic3ltVG9TdHIiLCJzeW1TdHJpbmdSZWdleCIsImlzU3ltYm9sT2JqZWN0IiwidmFsdWUiLCJ2YWx1ZU9mIiwidGVzdCIsImNhbGwiLCJtb2R1bGUiLCJleHBvcnRzIiwiaXNTeW1ib2wiLCJlIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQUlBLFFBQVFDLE9BQU9DLFNBQVAsQ0FBaUJDLFFBQTdCO0FBQ0EsSUFBSUMsYUFBYSxPQUFPQyxNQUFQLEtBQWtCLFVBQWxCLElBQWdDLFFBQU9BLFFBQVAsTUFBb0IsUUFBckU7O0FBRUEsSUFBSUQsVUFBSixFQUFnQjtBQUNmLEtBQUlFLFdBQVdELE9BQU9ILFNBQVAsQ0FBaUJDLFFBQWhDO0FBQ0EsS0FBSUksaUJBQWlCLGdCQUFyQjtBQUNBLEtBQUlDLGlCQUFpQixTQUFTQSxjQUFULENBQXdCQyxLQUF4QixFQUErQjtBQUNuRCxNQUFJLFFBQU9BLE1BQU1DLE9BQU4sRUFBUCxNQUEyQixRQUEvQixFQUF5QztBQUFFLFVBQU8sS0FBUDtBQUFlO0FBQzFELFNBQU9ILGVBQWVJLElBQWYsQ0FBb0JMLFNBQVNNLElBQVQsQ0FBY0gsS0FBZCxDQUFwQixDQUFQO0FBQ0EsRUFIRDtBQUlBSSxRQUFPQyxPQUFQLEdBQWlCLFNBQVNDLFFBQVQsQ0FBa0JOLEtBQWxCLEVBQXlCO0FBQ3pDLE1BQUksUUFBT0EsS0FBUCx5Q0FBT0EsS0FBUCxPQUFpQixRQUFyQixFQUErQjtBQUFFLFVBQU8sSUFBUDtBQUFjO0FBQy9DLE1BQUlULE1BQU1ZLElBQU4sQ0FBV0gsS0FBWCxNQUFzQixpQkFBMUIsRUFBNkM7QUFBRSxVQUFPLEtBQVA7QUFBZTtBQUM5RCxNQUFJO0FBQ0gsVUFBT0QsZUFBZUMsS0FBZixDQUFQO0FBQ0EsR0FGRCxDQUVFLE9BQU9PLENBQVAsRUFBVTtBQUNYLFVBQU8sS0FBUDtBQUNBO0FBQ0QsRUFSRDtBQVNBLENBaEJELE1BZ0JPO0FBQ05ILFFBQU9DLE9BQVAsR0FBaUIsU0FBU0MsUUFBVCxDQUFrQk4sS0FBbEIsRUFBeUI7QUFDekM7QUFDQSxTQUFPLEtBQVA7QUFDQSxFQUhEO0FBSUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgaGFzU3ltYm9scyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbCgpID09PSAnc3ltYm9sJztcblxuaWYgKGhhc1N5bWJvbHMpIHtcblx0dmFyIHN5bVRvU3RyID0gU3ltYm9sLnByb3RvdHlwZS50b1N0cmluZztcblx0dmFyIHN5bVN0cmluZ1JlZ2V4ID0gL15TeW1ib2xcXCguKlxcKSQvO1xuXHR2YXIgaXNTeW1ib2xPYmplY3QgPSBmdW5jdGlvbiBpc1N5bWJvbE9iamVjdCh2YWx1ZSkge1xuXHRcdGlmICh0eXBlb2YgdmFsdWUudmFsdWVPZigpICE9PSAnc3ltYm9sJykgeyByZXR1cm4gZmFsc2U7IH1cblx0XHRyZXR1cm4gc3ltU3RyaW5nUmVnZXgudGVzdChzeW1Ub1N0ci5jYWxsKHZhbHVlKSk7XG5cdH07XG5cdG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcblx0XHRpZiAodHlwZW9mIHZhbHVlID09PSAnc3ltYm9sJykgeyByZXR1cm4gdHJ1ZTsgfVxuXHRcdGlmICh0b1N0ci5jYWxsKHZhbHVlKSAhPT0gJ1tvYmplY3QgU3ltYm9sXScpIHsgcmV0dXJuIGZhbHNlOyB9XG5cdFx0dHJ5IHtcblx0XHRcdHJldHVybiBpc1N5bWJvbE9iamVjdCh2YWx1ZSk7XG5cdFx0fSBjYXRjaCAoZSkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0fTtcbn0gZWxzZSB7XG5cdG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcblx0XHQvLyB0aGlzIGVudmlyb25tZW50IGRvZXMgbm90IHN1cHBvcnQgU3ltYm9scy5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH07XG59XG4iXX0=","deps":{}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es6.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es6.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar hasSymbols = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol';\n\nvar isPrimitive = require('./helpers/isPrimitive');\nvar isCallable = require('is-callable');\nvar isDate = require('is-date-object');\nvar isSymbol = require('is-symbol');\n\nvar ordinaryToPrimitive = function OrdinaryToPrimitive(O, hint) {\n\tif (typeof O === 'undefined' || O === null) {\n\t\tthrow new TypeError('Cannot call method on ' + O);\n\t}\n\tif (typeof hint !== 'string' || hint !== 'number' && hint !== 'string') {\n\t\tthrow new TypeError('hint must be \"string\" or \"number\"');\n\t}\n\tvar methodNames = hint === 'string' ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\tvar method, result, i;\n\tfor (i = 0; i < methodNames.length; ++i) {\n\t\tmethod = O[methodNames[i]];\n\t\tif (isCallable(method)) {\n\t\t\tresult = method.call(O);\n\t\t\tif (isPrimitive(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\tthrow new TypeError('No default value');\n};\n\nvar GetMethod = function GetMethod(O, P) {\n\tvar func = O[P];\n\tif (func !== null && typeof func !== 'undefined') {\n\t\tif (!isCallable(func)) {\n\t\t\tthrow new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');\n\t\t}\n\t\treturn func;\n\t}\n};\n\n// http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\nmodule.exports = function ToPrimitive(input, PreferredType) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tvar hint = 'default';\n\tif (arguments.length > 1) {\n\t\tif (PreferredType === String) {\n\t\t\thint = 'string';\n\t\t} else if (PreferredType === Number) {\n\t\t\thint = 'number';\n\t\t}\n\t}\n\n\tvar exoticToPrim;\n\tif (hasSymbols) {\n\t\tif (Symbol.toPrimitive) {\n\t\t\texoticToPrim = GetMethod(input, Symbol.toPrimitive);\n\t\t} else if (isSymbol(input)) {\n\t\t\texoticToPrim = Symbol.prototype.valueOf;\n\t\t}\n\t}\n\tif (typeof exoticToPrim !== 'undefined') {\n\t\tvar result = exoticToPrim.call(input, hint);\n\t\tif (isPrimitive(result)) {\n\t\t\treturn result;\n\t\t}\n\t\tthrow new TypeError('unable to convert exotic object to primitive');\n\t}\n\tif (hint === 'default' && (isDate(input) || isSymbol(input))) {\n\t\thint = 'string';\n\t}\n\treturn ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzNi5qcyJdLCJuYW1lcyI6WyJoYXNTeW1ib2xzIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJpc1ByaW1pdGl2ZSIsInJlcXVpcmUiLCJpc0NhbGxhYmxlIiwiaXNEYXRlIiwiaXNTeW1ib2wiLCJvcmRpbmFyeVRvUHJpbWl0aXZlIiwiT3JkaW5hcnlUb1ByaW1pdGl2ZSIsIk8iLCJoaW50IiwiVHlwZUVycm9yIiwibWV0aG9kTmFtZXMiLCJtZXRob2QiLCJyZXN1bHQiLCJpIiwibGVuZ3RoIiwiY2FsbCIsIkdldE1ldGhvZCIsIlAiLCJmdW5jIiwibW9kdWxlIiwiZXhwb3J0cyIsIlRvUHJpbWl0aXZlIiwiaW5wdXQiLCJQcmVmZXJyZWRUeXBlIiwiYXJndW1lbnRzIiwiU3RyaW5nIiwiTnVtYmVyIiwiZXhvdGljVG9QcmltIiwidG9QcmltaXRpdmUiLCJwcm90b3R5cGUiLCJ2YWx1ZU9mIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQUlBLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixVQUFsQixJQUFnQyxRQUFPQSxPQUFPQyxRQUFkLE1BQTJCLFFBQTVFOztBQUVBLElBQUlDLGNBQWNDLFFBQVEsdUJBQVIsQ0FBbEI7QUFDQSxJQUFJQyxhQUFhRCxRQUFRLGFBQVIsQ0FBakI7QUFDQSxJQUFJRSxTQUFTRixRQUFRLGdCQUFSLENBQWI7QUFDQSxJQUFJRyxXQUFXSCxRQUFRLFdBQVIsQ0FBZjs7QUFFQSxJQUFJSSxzQkFBc0IsU0FBU0MsbUJBQVQsQ0FBNkJDLENBQTdCLEVBQWdDQyxJQUFoQyxFQUFzQztBQUMvRCxLQUFJLE9BQU9ELENBQVAsS0FBYSxXQUFiLElBQTRCQSxNQUFNLElBQXRDLEVBQTRDO0FBQzNDLFFBQU0sSUFBSUUsU0FBSixDQUFjLDJCQUEyQkYsQ0FBekMsQ0FBTjtBQUNBO0FBQ0QsS0FBSSxPQUFPQyxJQUFQLEtBQWdCLFFBQWhCLElBQTZCQSxTQUFTLFFBQVQsSUFBcUJBLFNBQVMsUUFBL0QsRUFBMEU7QUFDekUsUUFBTSxJQUFJQyxTQUFKLENBQWMsbUNBQWQsQ0FBTjtBQUNBO0FBQ0QsS0FBSUMsY0FBY0YsU0FBUyxRQUFULEdBQW9CLENBQUMsVUFBRCxFQUFhLFNBQWIsQ0FBcEIsR0FBOEMsQ0FBQyxTQUFELEVBQVksVUFBWixDQUFoRTtBQUNBLEtBQUlHLE1BQUosRUFBWUMsTUFBWixFQUFvQkMsQ0FBcEI7QUFDQSxNQUFLQSxJQUFJLENBQVQsRUFBWUEsSUFBSUgsWUFBWUksTUFBNUIsRUFBb0MsRUFBRUQsQ0FBdEMsRUFBeUM7QUFDeENGLFdBQVNKLEVBQUVHLFlBQVlHLENBQVosQ0FBRixDQUFUO0FBQ0EsTUFBSVgsV0FBV1MsTUFBWCxDQUFKLEVBQXdCO0FBQ3ZCQyxZQUFTRCxPQUFPSSxJQUFQLENBQVlSLENBQVosQ0FBVDtBQUNBLE9BQUlQLFlBQVlZLE1BQVosQ0FBSixFQUF5QjtBQUN4QixXQUFPQSxNQUFQO0FBQ0E7QUFDRDtBQUNEO0FBQ0QsT0FBTSxJQUFJSCxTQUFKLENBQWMsa0JBQWQsQ0FBTjtBQUNBLENBbkJEOztBQXFCQSxJQUFJTyxZQUFZLFNBQVNBLFNBQVQsQ0FBbUJULENBQW5CLEVBQXNCVSxDQUF0QixFQUF5QjtBQUN4QyxLQUFJQyxPQUFPWCxFQUFFVSxDQUFGLENBQVg7QUFDQSxLQUFJQyxTQUFTLElBQVQsSUFBaUIsT0FBT0EsSUFBUCxLQUFnQixXQUFyQyxFQUFrRDtBQUNqRCxNQUFJLENBQUNoQixXQUFXZ0IsSUFBWCxDQUFMLEVBQXVCO0FBQ3RCLFNBQU0sSUFBSVQsU0FBSixDQUFjUyxPQUFPLHlCQUFQLEdBQW1DRCxDQUFuQyxHQUF1QyxhQUF2QyxHQUF1RFYsQ0FBdkQsR0FBMkQsb0JBQXpFLENBQU47QUFDQTtBQUNELFNBQU9XLElBQVA7QUFDQTtBQUNELENBUkQ7O0FBVUE7QUFDQUMsT0FBT0MsT0FBUCxHQUFpQixTQUFTQyxXQUFULENBQXFCQyxLQUFyQixFQUE0QkMsYUFBNUIsRUFBMkM7QUFDM0QsS0FBSXZCLFlBQVlzQixLQUFaLENBQUosRUFBd0I7QUFDdkIsU0FBT0EsS0FBUDtBQUNBO0FBQ0QsS0FBSWQsT0FBTyxTQUFYO0FBQ0EsS0FBSWdCLFVBQVVWLE1BQVYsR0FBbUIsQ0FBdkIsRUFBMEI7QUFDekIsTUFBSVMsa0JBQWtCRSxNQUF0QixFQUE4QjtBQUM3QmpCLFVBQU8sUUFBUDtBQUNBLEdBRkQsTUFFTyxJQUFJZSxrQkFBa0JHLE1BQXRCLEVBQThCO0FBQ3BDbEIsVUFBTyxRQUFQO0FBQ0E7QUFDRDs7QUFFRCxLQUFJbUIsWUFBSjtBQUNBLEtBQUk5QixVQUFKLEVBQWdCO0FBQ2YsTUFBSUMsT0FBTzhCLFdBQVgsRUFBd0I7QUFDdkJELGtCQUFlWCxVQUFVTSxLQUFWLEVBQWlCeEIsT0FBTzhCLFdBQXhCLENBQWY7QUFDQSxHQUZELE1BRU8sSUFBSXhCLFNBQVNrQixLQUFULENBQUosRUFBcUI7QUFDM0JLLGtCQUFlN0IsT0FBTytCLFNBQVAsQ0FBaUJDLE9BQWhDO0FBQ0E7QUFDRDtBQUNELEtBQUksT0FBT0gsWUFBUCxLQUF3QixXQUE1QixFQUF5QztBQUN4QyxNQUFJZixTQUFTZSxhQUFhWixJQUFiLENBQWtCTyxLQUFsQixFQUF5QmQsSUFBekIsQ0FBYjtBQUNBLE1BQUlSLFlBQVlZLE1BQVosQ0FBSixFQUF5QjtBQUN4QixVQUFPQSxNQUFQO0FBQ0E7QUFDRCxRQUFNLElBQUlILFNBQUosQ0FBYyw4Q0FBZCxDQUFOO0FBQ0E7QUFDRCxLQUFJRCxTQUFTLFNBQVQsS0FBdUJMLE9BQU9tQixLQUFQLEtBQWlCbEIsU0FBU2tCLEtBQVQsQ0FBeEMsQ0FBSixFQUE4RDtBQUM3RGQsU0FBTyxRQUFQO0FBQ0E7QUFDRCxRQUFPSCxvQkFBb0JpQixLQUFwQixFQUEyQmQsU0FBUyxTQUFULEdBQXFCLFFBQXJCLEdBQWdDQSxJQUEzRCxDQUFQO0FBQ0EsQ0FoQ0QiLCJmaWxlIjoiZXM2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzU3ltYm9scyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gJ3N5bWJvbCc7XG5cbnZhciBpc1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vaGVscGVycy9pc1ByaW1pdGl2ZScpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCdpcy1jYWxsYWJsZScpO1xudmFyIGlzRGF0ZSA9IHJlcXVpcmUoJ2lzLWRhdGUtb2JqZWN0Jyk7XG52YXIgaXNTeW1ib2wgPSByZXF1aXJlKCdpcy1zeW1ib2wnKTtcblxudmFyIG9yZGluYXJ5VG9QcmltaXRpdmUgPSBmdW5jdGlvbiBPcmRpbmFyeVRvUHJpbWl0aXZlKE8sIGhpbnQpIHtcblx0aWYgKHR5cGVvZiBPID09PSAndW5kZWZpbmVkJyB8fCBPID09PSBudWxsKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNhbGwgbWV0aG9kIG9uICcgKyBPKTtcblx0fVxuXHRpZiAodHlwZW9mIGhpbnQgIT09ICdzdHJpbmcnIHx8IChoaW50ICE9PSAnbnVtYmVyJyAmJiBoaW50ICE9PSAnc3RyaW5nJykpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdoaW50IG11c3QgYmUgXCJzdHJpbmdcIiBvciBcIm51bWJlclwiJyk7XG5cdH1cblx0dmFyIG1ldGhvZE5hbWVzID0gaGludCA9PT0gJ3N0cmluZycgPyBbJ3RvU3RyaW5nJywgJ3ZhbHVlT2YnXSA6IFsndmFsdWVPZicsICd0b1N0cmluZyddO1xuXHR2YXIgbWV0aG9kLCByZXN1bHQsIGk7XG5cdGZvciAoaSA9IDA7IGkgPCBtZXRob2ROYW1lcy5sZW5ndGg7ICsraSkge1xuXHRcdG1ldGhvZCA9IE9bbWV0aG9kTmFtZXNbaV1dO1xuXHRcdGlmIChpc0NhbGxhYmxlKG1ldGhvZCkpIHtcblx0XHRcdHJlc3VsdCA9IG1ldGhvZC5jYWxsKE8pO1xuXHRcdFx0aWYgKGlzUHJpbWl0aXZlKHJlc3VsdCkpIHtcblx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0dGhyb3cgbmV3IFR5cGVFcnJvcignTm8gZGVmYXVsdCB2YWx1ZScpO1xufTtcblxudmFyIEdldE1ldGhvZCA9IGZ1bmN0aW9uIEdldE1ldGhvZChPLCBQKSB7XG5cdHZhciBmdW5jID0gT1tQXTtcblx0aWYgKGZ1bmMgIT09IG51bGwgJiYgdHlwZW9mIGZ1bmMgIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0aWYgKCFpc0NhbGxhYmxlKGZ1bmMpKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGZ1bmMgKyAnIHJldHVybmVkIGZvciBwcm9wZXJ0eSAnICsgUCArICcgb2Ygb2JqZWN0ICcgKyBPICsgJyBpcyBub3QgYSBmdW5jdGlvbicpO1xuXHRcdH1cblx0XHRyZXR1cm4gZnVuYztcblx0fVxufTtcblxuLy8gaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLXRvcHJpbWl0aXZlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIFRvUHJpbWl0aXZlKGlucHV0LCBQcmVmZXJyZWRUeXBlKSB7XG5cdGlmIChpc1ByaW1pdGl2ZShpbnB1dCkpIHtcblx0XHRyZXR1cm4gaW5wdXQ7XG5cdH1cblx0dmFyIGhpbnQgPSAnZGVmYXVsdCc7XG5cdGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuXHRcdGlmIChQcmVmZXJyZWRUeXBlID09PSBTdHJpbmcpIHtcblx0XHRcdGhpbnQgPSAnc3RyaW5nJztcblx0XHR9IGVsc2UgaWYgKFByZWZlcnJlZFR5cGUgPT09IE51bWJlcikge1xuXHRcdFx0aGludCA9ICdudW1iZXInO1xuXHRcdH1cblx0fVxuXG5cdHZhciBleG90aWNUb1ByaW07XG5cdGlmIChoYXNTeW1ib2xzKSB7XG5cdFx0aWYgKFN5bWJvbC50b1ByaW1pdGl2ZSkge1xuXHRcdFx0ZXhvdGljVG9QcmltID0gR2V0TWV0aG9kKGlucHV0LCBTeW1ib2wudG9QcmltaXRpdmUpO1xuXHRcdH0gZWxzZSBpZiAoaXNTeW1ib2woaW5wdXQpKSB7XG5cdFx0XHRleG90aWNUb1ByaW0gPSBTeW1ib2wucHJvdG90eXBlLnZhbHVlT2Y7XG5cdFx0fVxuXHR9XG5cdGlmICh0eXBlb2YgZXhvdGljVG9QcmltICE9PSAndW5kZWZpbmVkJykge1xuXHRcdHZhciByZXN1bHQgPSBleG90aWNUb1ByaW0uY2FsbChpbnB1dCwgaGludCk7XG5cdFx0aWYgKGlzUHJpbWl0aXZlKHJlc3VsdCkpIHtcblx0XHRcdHJldHVybiByZXN1bHQ7XG5cdFx0fVxuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ3VuYWJsZSB0byBjb252ZXJ0IGV4b3RpYyBvYmplY3QgdG8gcHJpbWl0aXZlJyk7XG5cdH1cblx0aWYgKGhpbnQgPT09ICdkZWZhdWx0JyAmJiAoaXNEYXRlKGlucHV0KSB8fCBpc1N5bWJvbChpbnB1dCkpKSB7XG5cdFx0aGludCA9ICdzdHJpbmcnO1xuXHR9XG5cdHJldHVybiBvcmRpbmFyeVRvUHJpbWl0aXZlKGlucHV0LCBoaW50ID09PSAnZGVmYXVsdCcgPyAnbnVtYmVyJyA6IGhpbnQpO1xufTtcbiJdfQ==","deps":{"is-callable":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-callable\\index.js","./helpers/isPrimitive":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\helpers\\isPrimitive.js","is-date-object":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-date-object\\index.js","is-symbol":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-symbol\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es5.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es5.js","source":"'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// https://es5.github.io/#x8.12\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function DefaultValue(O, hint) {\n\t\tvar actualHint = hint || (toStr.call(O) === '[object Date]' ? String : Number);\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// https://es5.github.io/#x9\nmodule.exports = function ToPrimitive(input, PreferredType) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input, PreferredType);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzNS5qcyJdLCJuYW1lcyI6WyJ0b1N0ciIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiaXNQcmltaXRpdmUiLCJyZXF1aXJlIiwiaXNDYWxsYWJsZSIsIkVTNWludGVybmFsU2xvdHMiLCJPIiwiaGludCIsImFjdHVhbEhpbnQiLCJjYWxsIiwiU3RyaW5nIiwiTnVtYmVyIiwibWV0aG9kcyIsInZhbHVlIiwiaSIsImxlbmd0aCIsIlR5cGVFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiLCJUb1ByaW1pdGl2ZSIsImlucHV0IiwiUHJlZmVycmVkVHlwZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsUUFBUUMsT0FBT0MsU0FBUCxDQUFpQkMsUUFBN0I7O0FBRUEsSUFBSUMsY0FBY0MsUUFBUSx1QkFBUixDQUFsQjs7QUFFQSxJQUFJQyxhQUFhRCxRQUFRLGFBQVIsQ0FBakI7O0FBRUE7QUFDQSxJQUFJRSxtQkFBbUI7QUFDdEIscUJBQW9CLHNCQUFVQyxDQUFWLEVBQWFDLElBQWIsRUFBbUI7QUFDdEMsTUFBSUMsYUFBYUQsU0FBU1QsTUFBTVcsSUFBTixDQUFXSCxDQUFYLE1BQWtCLGVBQWxCLEdBQW9DSSxNQUFwQyxHQUE2Q0MsTUFBdEQsQ0FBakI7O0FBRUEsTUFBSUgsZUFBZUUsTUFBZixJQUF5QkYsZUFBZUcsTUFBNUMsRUFBb0Q7QUFDbkQsT0FBSUMsVUFBVUosZUFBZUUsTUFBZixHQUF3QixDQUFDLFVBQUQsRUFBYSxTQUFiLENBQXhCLEdBQWtELENBQUMsU0FBRCxFQUFZLFVBQVosQ0FBaEU7QUFDQSxPQUFJRyxLQUFKLEVBQVdDLENBQVg7QUFDQSxRQUFLQSxJQUFJLENBQVQsRUFBWUEsSUFBSUYsUUFBUUcsTUFBeEIsRUFBZ0MsRUFBRUQsQ0FBbEMsRUFBcUM7QUFDcEMsUUFBSVYsV0FBV0UsRUFBRU0sUUFBUUUsQ0FBUixDQUFGLENBQVgsQ0FBSixFQUErQjtBQUM5QkQsYUFBUVAsRUFBRU0sUUFBUUUsQ0FBUixDQUFGLEdBQVI7QUFDQSxTQUFJWixZQUFZVyxLQUFaLENBQUosRUFBd0I7QUFDdkIsYUFBT0EsS0FBUDtBQUNBO0FBQ0Q7QUFDRDtBQUNELFNBQU0sSUFBSUcsU0FBSixDQUFjLGtCQUFkLENBQU47QUFDQTtBQUNELFFBQU0sSUFBSUEsU0FBSixDQUFjLHdDQUFkLENBQU47QUFDQTtBQWxCcUIsQ0FBdkI7O0FBcUJBO0FBQ0FDLE9BQU9DLE9BQVAsR0FBaUIsU0FBU0MsV0FBVCxDQUFxQkMsS0FBckIsRUFBNEJDLGFBQTVCLEVBQTJDO0FBQzNELEtBQUluQixZQUFZa0IsS0FBWixDQUFKLEVBQXdCO0FBQ3ZCLFNBQU9BLEtBQVA7QUFDQTtBQUNELFFBQU9mLGlCQUFpQixrQkFBakIsRUFBcUNlLEtBQXJDLEVBQTRDQyxhQUE1QyxDQUFQO0FBQ0EsQ0FMRCIsImZpbGUiOiJlczUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG5cbnZhciBpc1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vaGVscGVycy9pc1ByaW1pdGl2ZScpO1xuXG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJ2lzLWNhbGxhYmxlJyk7XG5cbi8vIGh0dHBzOi8vZXM1LmdpdGh1Yi5pby8jeDguMTJcbnZhciBFUzVpbnRlcm5hbFNsb3RzID0ge1xuXHQnW1tEZWZhdWx0VmFsdWVdXSc6IGZ1bmN0aW9uIChPLCBoaW50KSB7XG5cdFx0dmFyIGFjdHVhbEhpbnQgPSBoaW50IHx8ICh0b1N0ci5jYWxsKE8pID09PSAnW29iamVjdCBEYXRlXScgPyBTdHJpbmcgOiBOdW1iZXIpO1xuXG5cdFx0aWYgKGFjdHVhbEhpbnQgPT09IFN0cmluZyB8fCBhY3R1YWxIaW50ID09PSBOdW1iZXIpIHtcblx0XHRcdHZhciBtZXRob2RzID0gYWN0dWFsSGludCA9PT0gU3RyaW5nID8gWyd0b1N0cmluZycsICd2YWx1ZU9mJ10gOiBbJ3ZhbHVlT2YnLCAndG9TdHJpbmcnXTtcblx0XHRcdHZhciB2YWx1ZSwgaTtcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBtZXRob2RzLmxlbmd0aDsgKytpKSB7XG5cdFx0XHRcdGlmIChpc0NhbGxhYmxlKE9bbWV0aG9kc1tpXV0pKSB7XG5cdFx0XHRcdFx0dmFsdWUgPSBPW21ldGhvZHNbaV1dKCk7XG5cdFx0XHRcdFx0aWYgKGlzUHJpbWl0aXZlKHZhbHVlKSkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignTm8gZGVmYXVsdCB2YWx1ZScpO1xuXHRcdH1cblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdpbnZhbGlkIFtbRGVmYXVsdFZhbHVlXV0gaGludCBzdXBwbGllZCcpO1xuXHR9XG59O1xuXG4vLyBodHRwczovL2VzNS5naXRodWIuaW8vI3g5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIFRvUHJpbWl0aXZlKGlucHV0LCBQcmVmZXJyZWRUeXBlKSB7XG5cdGlmIChpc1ByaW1pdGl2ZShpbnB1dCkpIHtcblx0XHRyZXR1cm4gaW5wdXQ7XG5cdH1cblx0cmV0dXJuIEVTNWludGVybmFsU2xvdHNbJ1tbRGVmYXVsdFZhbHVlXV0nXShpbnB1dCwgUHJlZmVycmVkVHlwZSk7XG59O1xuIl19","deps":{"is-callable":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-callable\\index.js","./helpers/isPrimitive":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\helpers\\isPrimitive.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es5.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es5.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn Number(value);\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (number === 0 || !$isFinite(number)) {\n\t\t\treturn number;\n\t\t}\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) {\n\t\t\t// 0 === -0, but they are not identical.\n\t\t\tif (x === 0) {\n\t\t\t\treturn 1 / x === 1 / y;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// http://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\t\t// jscs:disable\n\t\tfor (var key in Desc) {\n\t\t\t// eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\t// jscs:enable\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// http://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.IsPropertyDescriptor(Desc)) {\n\t\t\tthrow new TypeError('Desc must be a Property Descriptor');\n\t\t}\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// http://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.IsPropertyDescriptor(Desc)) {\n\t\t\tthrow new TypeError('Desc must be a Property Descriptor');\n\t\t}\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// http://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.IsPropertyDescriptor(Desc)) {\n\t\t\tthrow new TypeError('Desc must be a Property Descriptor');\n\t\t}\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// http://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tif (!this.IsPropertyDescriptor(Desc)) {\n\t\t\tthrow new TypeError('Desc must be a Property Descriptor');\n\t\t}\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// http://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","deps":{"has":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js","./helpers/isNaN":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isNaN.js","./helpers/isFinite":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isFinite.js","./helpers/sign":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\sign.js","./helpers/mod":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\mod.js","is-callable":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-callable\\index.js","es-to-primitive/es5":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es5.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2015.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2015.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar has = require('has');\nvar toPrimitive = require('es-to-primitive/es6');\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = typeof Symbol === 'function' && _typeof(Symbol.iterator) === 'symbol';\n\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1;\n\nvar assign = require('./helpers/assign');\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\nvar isPrimitive = require('./helpers/isPrimitive');\nvar parseInteger = parseInt;\nvar bind = require('function-bind');\nvar arraySlice = bind.call(Function.call, Array.prototype.slice);\nvar strSlice = bind.call(Function.call, String.prototype.slice);\nvar isBinary = bind.call(Function.call, RegExp.prototype.test, /^0b[01]+$/i);\nvar isOctal = bind.call(Function.call, RegExp.prototype.test, /^0o[0-7]+$/i);\nvar regexExec = bind.call(Function.call, RegExp.prototype.exec);\nvar nonWS = ['\\x85', '\\u200B', '\\uFFFE'].join('');\nvar nonWSregex = new RegExp('[' + nonWS + ']', 'g');\nvar hasNonWS = bind.call(Function.call, RegExp.prototype.test, nonWSregex);\nvar invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nvar isInvalidHexLiteral = bind.call(Function.call, RegExp.prototype.test, invalidHexLiteral);\n\n// whitespace from: http://es5.github.io/#x15.5.4.20\n// implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\nvar ws = ['\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003', '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028', '\\u2029\\uFEFF'].join('');\nvar trimRegex = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\nvar replace = bind.call(Function.call, String.prototype.replace);\nvar trim = function trim(value) {\n\treturn replace(value, trimRegex, '');\n};\n\nvar ES5 = require('./es5');\n\nvar hasRegExpMatcher = require('is-regex');\n\n// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-abstract-operations\nvar ES6 = assign(assign({}, ES5), {\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-call-f-v-args\n\tCall: function Call(F, V) {\n\t\tvar args = arguments.length > 2 ? arguments[2] : [];\n\t\tif (!this.IsCallable(F)) {\n\t\t\tthrow new TypeError(F + ' is not a function');\n\t\t}\n\t\treturn F.apply(V, args);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toprimitive\n\tToPrimitive: toPrimitive,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toboolean\n\t// ToBoolean: ES5.ToBoolean,\n\n\t// http://www.ecma-international.org/ecma-262/6.0/#sec-tonumber\n\tToNumber: function ToNumber(argument) {\n\t\tvar value = isPrimitive(argument) ? argument : toPrimitive(argument, Number);\n\t\tif ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'symbol') {\n\t\t\tthrow new TypeError('Cannot convert a Symbol value to a number');\n\t\t}\n\t\tif (typeof value === 'string') {\n\t\t\tif (isBinary(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 2));\n\t\t\t} else if (isOctal(value)) {\n\t\t\t\treturn this.ToNumber(parseInteger(strSlice(value, 2), 8));\n\t\t\t} else if (hasNonWS(value) || isInvalidHexLiteral(value)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar trimmed = trim(value);\n\t\t\t\tif (trimmed !== value) {\n\t\t\t\t\treturn this.ToNumber(trimmed);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Number(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tointeger\n\t// ToInteger: ES5.ToNumber,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint32\n\t// ToInt32: ES5.ToInt32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint32\n\t// ToUint32: ES5.ToUint32,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint16\n\tToInt16: function ToInt16(argument) {\n\t\tvar int16bit = this.ToUint16(argument);\n\t\treturn int16bit >= 0x8000 ? int16bit - 0x10000 : int16bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint16\n\t// ToUint16: ES5.ToUint16,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toint8\n\tToInt8: function ToInt8(argument) {\n\t\tvar int8bit = this.ToUint8(argument);\n\t\treturn int8bit >= 0x80 ? int8bit - 0x100 : int8bit;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8\n\tToUint8: function ToUint8(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) {\n\t\t\treturn 0;\n\t\t}\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x100);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-touint8clamp\n\tToUint8Clamp: function ToUint8Clamp(argument) {\n\t\tvar number = this.ToNumber(argument);\n\t\tif ($isNaN(number) || number <= 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (number >= 0xFF) {\n\t\t\treturn 0xFF;\n\t\t}\n\t\tvar f = Math.floor(argument);\n\t\tif (f + 0.5 < number) {\n\t\t\treturn f + 1;\n\t\t}\n\t\tif (number < f + 0.5) {\n\t\t\treturn f;\n\t\t}\n\t\tif (f % 2 !== 0) {\n\t\t\treturn f + 1;\n\t\t}\n\t\treturn f;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tostring\n\tToString: function ToString(argument) {\n\t\tif ((typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol') {\n\t\t\tthrow new TypeError('Cannot convert a Symbol value to a string');\n\t\t}\n\t\treturn String(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-toobject\n\tToObject: function ToObject(value) {\n\t\tthis.RequireObjectCoercible(value);\n\t\treturn Object(value);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-topropertykey\n\tToPropertyKey: function ToPropertyKey(argument) {\n\t\tvar key = this.ToPrimitive(argument, String);\n\t\treturn (typeof key === 'undefined' ? 'undefined' : _typeof(key)) === 'symbol' ? key : this.ToString(key);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\tToLength: function ToLength(argument) {\n\t\tvar len = this.ToInteger(argument);\n\t\tif (len <= 0) {\n\t\t\treturn 0;\n\t\t} // includes converting -0 to +0\n\t\tif (len > MAX_SAFE_INTEGER) {\n\t\t\treturn MAX_SAFE_INTEGER;\n\t\t}\n\t\treturn len;\n\t},\n\n\t// http://www.ecma-international.org/ecma-262/6.0/#sec-canonicalnumericindexstring\n\tCanonicalNumericIndexString: function CanonicalNumericIndexString(argument) {\n\t\tif (toStr.call(argument) !== '[object String]') {\n\t\t\tthrow new TypeError('must be a string');\n\t\t}\n\t\tif (argument === '-0') {\n\t\t\treturn -0;\n\t\t}\n\t\tvar n = this.ToNumber(argument);\n\t\tif (this.SameValue(this.ToString(n), argument)) {\n\t\t\treturn n;\n\t\t}\n\t\treturn void 0;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-requireobjectcoercible\n\tRequireObjectCoercible: ES5.CheckObjectCoercible,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isarray\n\tIsArray: Array.isArray || function IsArray(argument) {\n\t\treturn toStr.call(argument) === '[object Array]';\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-iscallable\n\t// IsCallable: ES5.IsCallable,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isconstructor\n\tIsConstructor: function IsConstructor(argument) {\n\t\treturn typeof argument === 'function' && !!argument.prototype; // unfortunately there's no way to truly check this without try/catch `new argument`\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isextensible-o\n\tIsExtensible: function IsExtensible(obj) {\n\t\tif (!Object.preventExtensions) {\n\t\t\treturn true;\n\t\t}\n\t\tif (isPrimitive(obj)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn Object.isExtensible(obj);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-isinteger\n\tIsInteger: function IsInteger(argument) {\n\t\tif (typeof argument !== 'number' || $isNaN(argument) || !$isFinite(argument)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar abs = Math.abs(argument);\n\t\treturn Math.floor(abs) === abs;\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ispropertykey\n\tIsPropertyKey: function IsPropertyKey(argument) {\n\t\treturn typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n\t},\n\n\t// http://www.ecma-international.org/ecma-262/6.0/#sec-isregexp\n\tIsRegExp: function IsRegExp(argument) {\n\t\tif (!argument || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols) {\n\t\t\tvar isRegExp = argument[Symbol.match];\n\t\t\tif (typeof isRegExp !== 'undefined') {\n\t\t\t\treturn ES5.ToBoolean(isRegExp);\n\t\t\t}\n\t\t}\n\t\treturn hasRegExpMatcher(argument);\n\t},\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevalue\n\t// SameValue: ES5.SameValue,\n\n\t// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero\n\tSameValueZero: function SameValueZero(x, y) {\n\t\treturn x === y || $isNaN(x) && $isNaN(y);\n\t},\n\n\t/**\n  * 7.3.2 GetV (V, P)\n  * 1. Assert: IsPropertyKey(P) is true.\n  * 2. Let O be ToObject(V).\n  * 3. ReturnIfAbrupt(O).\n  * 4. Return O.[[Get]](P, V).\n  */\n\tGetV: function GetV(V, P) {\n\t\t// 7.3.2.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.2.2-3\n\t\tvar O = this.ToObject(V);\n\n\t\t// 7.3.2.4\n\t\treturn O[P];\n\t},\n\n\t/**\n  * 7.3.9 - http://www.ecma-international.org/ecma-262/6.0/#sec-getmethod\n  * 1. Assert: IsPropertyKey(P) is true.\n  * 2. Let func be GetV(O, P).\n  * 3. ReturnIfAbrupt(func).\n  * 4. If func is either undefined or null, return undefined.\n  * 5. If IsCallable(func) is false, throw a TypeError exception.\n  * 6. Return func.\n  */\n\tGetMethod: function GetMethod(O, P) {\n\t\t// 7.3.9.1\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\n\t\t// 7.3.9.2\n\t\tvar func = this.GetV(O, P);\n\n\t\t// 7.3.9.4\n\t\tif (func == null) {\n\t\t\treturn void 0;\n\t\t}\n\n\t\t// 7.3.9.5\n\t\tif (!this.IsCallable(func)) {\n\t\t\tthrow new TypeError(P + 'is not a function');\n\t\t}\n\n\t\t// 7.3.9.6\n\t\treturn func;\n\t},\n\n\t/**\n  * 7.3.1 Get (O, P) - http://www.ecma-international.org/ecma-262/6.0/#sec-get-o-p\n  * 1. Assert: Type(O) is Object.\n  * 2. Assert: IsPropertyKey(P) is true.\n  * 3. Return O.[[Get]](P, O).\n  */\n\tGet: function Get(O, P) {\n\t\t// 7.3.1.1\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\t// 7.3.1.2\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\t// 7.3.1.3\n\t\treturn O[P];\n\t},\n\n\tType: function Type(x) {\n\t\tif ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'symbol') {\n\t\t\treturn 'Symbol';\n\t\t}\n\t\treturn ES5.Type(x);\n\t},\n\n\t// http://www.ecma-international.org/ecma-262/6.0/#sec-speciesconstructor\n\tSpeciesConstructor: function SpeciesConstructor(O, defaultConstructor) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tvar C = O.constructor;\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.Type(C) !== 'Object') {\n\t\t\tthrow new TypeError('O.constructor is not an Object');\n\t\t}\n\t\tvar S = hasSymbols && Symbol.species ? C[Symbol.species] : void 0;\n\t\tif (S == null) {\n\t\t\treturn defaultConstructor;\n\t\t}\n\t\tif (this.IsConstructor(S)) {\n\t\t\treturn S;\n\t\t}\n\t\tthrow new TypeError('no constructor found');\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-completepropertydescriptor\n\tCompletePropertyDescriptor: function CompletePropertyDescriptor(Desc) {\n\t\tif (!this.IsPropertyDescriptor(Desc)) {\n\t\t\tthrow new TypeError('Desc must be a Property Descriptor');\n\t\t}\n\n\t\tif (this.IsGenericDescriptor(Desc) || this.IsDataDescriptor(Desc)) {\n\t\t\tif (!has(Desc, '[[Value]]')) {\n\t\t\t\tDesc['[[Value]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Writable]]')) {\n\t\t\t\tDesc['[[Writable]]'] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tif (!has(Desc, '[[Get]]')) {\n\t\t\t\tDesc['[[Get]]'] = void 0;\n\t\t\t}\n\t\t\tif (!has(Desc, '[[Set]]')) {\n\t\t\t\tDesc['[[Set]]'] = void 0;\n\t\t\t}\n\t\t}\n\t\tif (!has(Desc, '[[Enumerable]]')) {\n\t\t\tDesc['[[Enumerable]]'] = false;\n\t\t}\n\t\tif (!has(Desc, '[[Configurable]]')) {\n\t\t\tDesc['[[Configurable]]'] = false;\n\t\t}\n\t\treturn Desc;\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-set-o-p-v-throw\n\tSet: function Set(O, P, V, Throw) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('P must be a Property Key');\n\t\t}\n\t\tif (this.Type(Throw) !== 'Boolean') {\n\t\t\tthrow new TypeError('Throw must be a Boolean');\n\t\t}\n\t\tif (Throw) {\n\t\t\tO[P] = V;\n\t\t\treturn true;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tO[P] = V;\n\t\t\t} catch (e) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-hasownproperty\n\tHasOwnProperty: function HasOwnProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('P must be a Property Key');\n\t\t}\n\t\treturn has(O, P);\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-hasproperty\n\tHasProperty: function HasProperty(O, P) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new TypeError('O must be an Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('P must be a Property Key');\n\t\t}\n\t\treturn P in O;\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-isconcatspreadable\n\tIsConcatSpreadable: function IsConcatSpreadable(O) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tif (hasSymbols && _typeof(Symbol.isConcatSpreadable) === 'symbol') {\n\t\t\tvar spreadable = this.Get(O, Symbol.isConcatSpreadable);\n\t\t\tif (typeof spreadable !== 'undefined') {\n\t\t\t\treturn this.ToBoolean(spreadable);\n\t\t\t}\n\t\t}\n\t\treturn this.IsArray(O);\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-invoke\n\tInvoke: function Invoke(O, P) {\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('P must be a Property Key');\n\t\t}\n\t\tvar argumentsList = arraySlice(arguments, 2);\n\t\tvar func = this.GetV(O, P);\n\t\treturn this.Call(func, O, argumentsList);\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-createiterresultobject\n\tCreateIterResultObject: function CreateIterResultObject(value, done) {\n\t\tif (this.Type(done) !== 'Boolean') {\n\t\t\tthrow new TypeError('Assertion failed: Type(done) is not Boolean');\n\t\t}\n\t\treturn {\n\t\t\tvalue: value,\n\t\t\tdone: done\n\t\t};\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-regexpexec\n\tRegExpExec: function RegExpExec(R, S) {\n\t\tif (this.Type(R) !== 'Object') {\n\t\t\tthrow new TypeError('R must be an Object');\n\t\t}\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new TypeError('S must be a String');\n\t\t}\n\t\tvar exec = this.Get(R, 'exec');\n\t\tif (this.IsCallable(exec)) {\n\t\t\tvar result = this.Call(exec, R, [S]);\n\t\t\tif (result === null || this.Type(result) === 'Object') {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new TypeError('\"exec\" method must return `null` or an Object');\n\t\t}\n\t\treturn regexExec(R, S);\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-arrayspeciescreate\n\tArraySpeciesCreate: function ArraySpeciesCreate(originalArray, length) {\n\t\tif (!this.IsInteger(length) || length < 0) {\n\t\t\tthrow new TypeError('Assertion failed: length must be an integer >= 0');\n\t\t}\n\t\tvar len = length === 0 ? 0 : length;\n\t\tvar C;\n\t\tvar isArray = this.IsArray(originalArray);\n\t\tif (isArray) {\n\t\t\tC = this.Get(originalArray, 'constructor');\n\t\t\t// TODO: figure out how to make a cross-realm normal Array, a same-realm Array\n\t\t\t// if (this.IsConstructor(C)) {\n\t\t\t// \tif C is another realm's Array, C = undefined\n\t\t\t// \tObject.getPrototypeOf(Object.getPrototypeOf(Object.getPrototypeOf(Array))) === null ?\n\t\t\t// }\n\t\t\tif (this.Type(C) === 'Object' && hasSymbols && Symbol.species) {\n\t\t\t\tC = this.Get(C, Symbol.species);\n\t\t\t\tif (C === null) {\n\t\t\t\t\tC = void 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (typeof C === 'undefined') {\n\t\t\treturn Array(len);\n\t\t}\n\t\tif (!this.IsConstructor(C)) {\n\t\t\tthrow new TypeError('C must be a constructor');\n\t\t}\n\t\treturn new C(len); // this.Construct(C, len);\n\t},\n\n\tCreateDataProperty: function CreateDataProperty(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar oldDesc = Object.getOwnPropertyDescriptor(O, P);\n\t\tvar extensible = oldDesc || typeof Object.isExtensible !== 'function' || Object.isExtensible(O);\n\t\tvar immutable = oldDesc && (!oldDesc.writable || !oldDesc.configurable);\n\t\tif (immutable || !extensible) {\n\t\t\treturn false;\n\t\t}\n\t\tvar newDesc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tvalue: V,\n\t\t\twritable: true\n\t\t};\n\t\tObject.defineProperty(O, P, newDesc);\n\t\treturn true;\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-createdatapropertyorthrow\n\tCreateDataPropertyOrThrow: function CreateDataPropertyOrThrow(O, P, V) {\n\t\tif (this.Type(O) !== 'Object') {\n\t\t\tthrow new TypeError('Assertion failed: Type(O) is not Object');\n\t\t}\n\t\tif (!this.IsPropertyKey(P)) {\n\t\t\tthrow new TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t\t}\n\t\tvar success = this.CreateDataProperty(O, P, V);\n\t\tif (!success) {\n\t\t\tthrow new TypeError('unable to create data property');\n\t\t}\n\t\treturn success;\n\t},\n\n\t// http://ecma-international.org/ecma-262/6.0/#sec-advancestringindex\n\tAdvanceStringIndex: function AdvanceStringIndex(S, index, unicode) {\n\t\tif (this.Type(S) !== 'String') {\n\t\t\tthrow new TypeError('Assertion failed: Type(S) is not String');\n\t\t}\n\t\tif (!this.IsInteger(index)) {\n\t\t\tthrow new TypeError('Assertion failed: length must be an integer >= 0 and <= (2**53 - 1)');\n\t\t}\n\t\tif (index < 0 || index > MAX_SAFE_INTEGER) {\n\t\t\tthrow new RangeError('Assertion failed: length must be an integer >= 0 and <= (2**53 - 1)');\n\t\t}\n\t\tif (this.Type(unicode) !== 'Boolean') {\n\t\t\tthrow new TypeError('Assertion failed: Type(unicode) is not Boolean');\n\t\t}\n\t\tif (!unicode) {\n\t\t\treturn index + 1;\n\t\t}\n\t\tvar length = S.length;\n\t\tif (index + 1 >= length) {\n\t\t\treturn index + 1;\n\t\t}\n\t\tvar first = S.charCodeAt(index);\n\t\tif (first < 0xD800 || first > 0xDBFF) {\n\t\t\treturn index + 1;\n\t\t}\n\t\tvar second = S.charCodeAt(index + 1);\n\t\tif (second < 0xDC00 || second > 0xDFFF) {\n\t\t\treturn index + 1;\n\t\t}\n\t\treturn index + 2;\n\t}\n});\n\ndelete ES6.CheckObjectCoercible; // renamed in ES6 to RequireObjectCoercible\n\nmodule.exports = ES6;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzMjAxNS5qcyJdLCJuYW1lcyI6WyJoYXMiLCJyZXF1aXJlIiwidG9QcmltaXRpdmUiLCJ0b1N0ciIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiaGFzU3ltYm9scyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiJGlzTmFOIiwiJGlzRmluaXRlIiwiTUFYX1NBRkVfSU5URUdFUiIsIk51bWJlciIsIk1hdGgiLCJwb3ciLCJhc3NpZ24iLCJzaWduIiwibW9kIiwiaXNQcmltaXRpdmUiLCJwYXJzZUludGVnZXIiLCJwYXJzZUludCIsImJpbmQiLCJhcnJheVNsaWNlIiwiY2FsbCIsIkZ1bmN0aW9uIiwiQXJyYXkiLCJzbGljZSIsInN0clNsaWNlIiwiU3RyaW5nIiwiaXNCaW5hcnkiLCJSZWdFeHAiLCJ0ZXN0IiwiaXNPY3RhbCIsInJlZ2V4RXhlYyIsImV4ZWMiLCJub25XUyIsImpvaW4iLCJub25XU3JlZ2V4IiwiaGFzTm9uV1MiLCJpbnZhbGlkSGV4TGl0ZXJhbCIsImlzSW52YWxpZEhleExpdGVyYWwiLCJ3cyIsInRyaW1SZWdleCIsInJlcGxhY2UiLCJ0cmltIiwidmFsdWUiLCJFUzUiLCJoYXNSZWdFeHBNYXRjaGVyIiwiRVM2IiwiQ2FsbCIsIkYiLCJWIiwiYXJncyIsImFyZ3VtZW50cyIsImxlbmd0aCIsIklzQ2FsbGFibGUiLCJUeXBlRXJyb3IiLCJhcHBseSIsIlRvUHJpbWl0aXZlIiwiVG9OdW1iZXIiLCJhcmd1bWVudCIsIk5hTiIsInRyaW1tZWQiLCJUb0ludDE2IiwiaW50MTZiaXQiLCJUb1VpbnQxNiIsIlRvSW50OCIsImludDhiaXQiLCJUb1VpbnQ4IiwibnVtYmVyIiwicG9zSW50IiwiZmxvb3IiLCJhYnMiLCJUb1VpbnQ4Q2xhbXAiLCJmIiwiVG9TdHJpbmciLCJUb09iamVjdCIsIlJlcXVpcmVPYmplY3RDb2VyY2libGUiLCJUb1Byb3BlcnR5S2V5Iiwia2V5IiwiVG9MZW5ndGgiLCJsZW4iLCJUb0ludGVnZXIiLCJDYW5vbmljYWxOdW1lcmljSW5kZXhTdHJpbmciLCJuIiwiU2FtZVZhbHVlIiwiQ2hlY2tPYmplY3RDb2VyY2libGUiLCJJc0FycmF5IiwiaXNBcnJheSIsIklzQ29uc3RydWN0b3IiLCJJc0V4dGVuc2libGUiLCJvYmoiLCJwcmV2ZW50RXh0ZW5zaW9ucyIsImlzRXh0ZW5zaWJsZSIsIklzSW50ZWdlciIsIklzUHJvcGVydHlLZXkiLCJJc1JlZ0V4cCIsImlzUmVnRXhwIiwibWF0Y2giLCJUb0Jvb2xlYW4iLCJTYW1lVmFsdWVaZXJvIiwieCIsInkiLCJHZXRWIiwiUCIsIk8iLCJHZXRNZXRob2QiLCJmdW5jIiwiR2V0IiwiVHlwZSIsIlNwZWNpZXNDb25zdHJ1Y3RvciIsImRlZmF1bHRDb25zdHJ1Y3RvciIsIkMiLCJjb25zdHJ1Y3RvciIsIlMiLCJzcGVjaWVzIiwiQ29tcGxldGVQcm9wZXJ0eURlc2NyaXB0b3IiLCJEZXNjIiwiSXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJJc0dlbmVyaWNEZXNjcmlwdG9yIiwiSXNEYXRhRGVzY3JpcHRvciIsIlNldCIsIlRocm93IiwiZSIsIkhhc093blByb3BlcnR5IiwiSGFzUHJvcGVydHkiLCJJc0NvbmNhdFNwcmVhZGFibGUiLCJpc0NvbmNhdFNwcmVhZGFibGUiLCJzcHJlYWRhYmxlIiwiSW52b2tlIiwiYXJndW1lbnRzTGlzdCIsIkNyZWF0ZUl0ZXJSZXN1bHRPYmplY3QiLCJkb25lIiwiUmVnRXhwRXhlYyIsIlIiLCJyZXN1bHQiLCJBcnJheVNwZWNpZXNDcmVhdGUiLCJvcmlnaW5hbEFycmF5IiwiQ3JlYXRlRGF0YVByb3BlcnR5Iiwib2xkRGVzYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImV4dGVuc2libGUiLCJpbW11dGFibGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsIm5ld0Rlc2MiLCJlbnVtZXJhYmxlIiwiZGVmaW5lUHJvcGVydHkiLCJDcmVhdGVEYXRhUHJvcGVydHlPclRocm93Iiwic3VjY2VzcyIsIkFkdmFuY2VTdHJpbmdJbmRleCIsImluZGV4IiwidW5pY29kZSIsIlJhbmdlRXJyb3IiLCJmaXJzdCIsImNoYXJDb2RlQXQiLCJzZWNvbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQUlBLE1BQU1DLFFBQVEsS0FBUixDQUFWO0FBQ0EsSUFBSUMsY0FBY0QsUUFBUSxxQkFBUixDQUFsQjs7QUFFQSxJQUFJRSxRQUFRQyxPQUFPQyxTQUFQLENBQWlCQyxRQUE3QjtBQUNBLElBQUlDLGFBQWEsT0FBT0MsTUFBUCxLQUFrQixVQUFsQixJQUFnQyxRQUFPQSxPQUFPQyxRQUFkLE1BQTJCLFFBQTVFOztBQUVBLElBQUlDLFNBQVNULFFBQVEsaUJBQVIsQ0FBYjtBQUNBLElBQUlVLFlBQVlWLFFBQVEsb0JBQVIsQ0FBaEI7QUFDQSxJQUFJVyxtQkFBbUJDLE9BQU9ELGdCQUFQLElBQTJCRSxLQUFLQyxHQUFMLENBQVMsQ0FBVCxFQUFZLEVBQVosSUFBa0IsQ0FBcEU7O0FBRUEsSUFBSUMsU0FBU2YsUUFBUSxrQkFBUixDQUFiO0FBQ0EsSUFBSWdCLE9BQU9oQixRQUFRLGdCQUFSLENBQVg7QUFDQSxJQUFJaUIsTUFBTWpCLFFBQVEsZUFBUixDQUFWO0FBQ0EsSUFBSWtCLGNBQWNsQixRQUFRLHVCQUFSLENBQWxCO0FBQ0EsSUFBSW1CLGVBQWVDLFFBQW5CO0FBQ0EsSUFBSUMsT0FBT3JCLFFBQVEsZUFBUixDQUFYO0FBQ0EsSUFBSXNCLGFBQWFELEtBQUtFLElBQUwsQ0FBVUMsU0FBU0QsSUFBbkIsRUFBeUJFLE1BQU1yQixTQUFOLENBQWdCc0IsS0FBekMsQ0FBakI7QUFDQSxJQUFJQyxXQUFXTixLQUFLRSxJQUFMLENBQVVDLFNBQVNELElBQW5CLEVBQXlCSyxPQUFPeEIsU0FBUCxDQUFpQnNCLEtBQTFDLENBQWY7QUFDQSxJQUFJRyxXQUFXUixLQUFLRSxJQUFMLENBQVVDLFNBQVNELElBQW5CLEVBQXlCTyxPQUFPMUIsU0FBUCxDQUFpQjJCLElBQTFDLEVBQWdELFlBQWhELENBQWY7QUFD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QWMscUVBQWQsQ0FBTjtBQUNBO0FBQ0QsTUFBSStGLFFBQVEsQ0FBUixJQUFhQSxRQUFRNUksZ0JBQXpCLEVBQTJDO0FBQzFDLFNBQU0sSUFBSThJLFVBQUosQ0FBZSxxRUFBZixDQUFOO0FBQ0E7QUFDRCxNQUFJLEtBQUs1QyxJQUFMLENBQVUyQyxPQUFWLE1BQXVCLFNBQTNCLEVBQXNDO0FBQ3JDLFNBQU0sSUFBSWhHLFNBQUosQ0FBYyxnREFBZCxDQUFOO0FBQ0E7QUFDRCxNQUFJLENBQUNnRyxPQUFMLEVBQWM7QUFDYixVQUFPRCxRQUFRLENBQWY7QUFDQTtBQUNELE1BQUlqRyxTQUFTNEQsRUFBRTVELE1BQWY7QUFDQSxNQUFLaUcsUUFBUSxDQUFULElBQWVqRyxNQUFuQixFQUEyQjtBQUMxQixVQUFPaUcsUUFBUSxDQUFmO0FBQ0E7QUFDRCxNQUFJRyxRQUFReEMsRUFBRXlDLFVBQUYsQ0FBYUosS0FBYixDQUFaO0FBQ0EsTUFBSUcsUUFBUSxNQUFSLElBQWtCQSxRQUFRLE1BQTlCLEVBQXNDO0FBQ3JDLFVBQU9ILFFBQVEsQ0FBZjtBQUNBO0FBQ0QsTUFBSUssU0FBUzFDLEVBQUV5QyxVQUFGLENBQWFKLFFBQVEsQ0FBckIsQ0FBYjtBQUNBLE1BQUlLLFNBQVMsTUFBVCxJQUFtQkEsU0FBUyxNQUFoQyxFQUF3QztBQUN2QyxVQUFPTCxRQUFRLENBQWY7QUFDQTtBQUNELFNBQU9BLFFBQVEsQ0FBZjtBQUNBO0FBaGdCZ0MsQ0FBeEIsQ0FBVjs7QUFtZ0JBLE9BQU92RyxJQUFJc0Msb0JBQVgsQyxDQUFpQzs7QUFFakN1RSxPQUFPQyxPQUFQLEdBQWlCOUcsR0FBakIiLCJmaWxlIjoiZXMyMDE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzID0gcmVxdWlyZSgnaGFzJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCdlcy10by1wcmltaXRpdmUvZXM2Jyk7XG5cbnZhciB0b1N0ciA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7XG52YXIgaGFzU3ltYm9scyA9IHR5cGVvZiBTeW1ib2wgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gJ3N5bWJvbCc7XG5cbnZhciAkaXNOYU4gPSByZXF1aXJlKCcuL2hlbHBlcnMvaXNOYU4nKTtcbnZhciAkaXNGaW5pdGUgPSByZXF1aXJlKCcuL2hlbHBlcnMvaXNGaW5pdGUnKTtcbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIgfHwgTWF0aC5wb3coMiwgNTMpIC0gMTtcblxudmFyIGFzc2lnbiA9IHJlcXVpcmUoJy4vaGVscGVycy9hc3NpZ24nKTtcbnZhciBzaWduID0gcmVxdWlyZSgnLi9oZWxwZXJzL3NpZ24nKTtcbnZhciBtb2QgPSByZXF1aXJlKCcuL2hlbHBlcnMvbW9kJyk7XG52YXIgaXNQcmltaXRpdmUgPSByZXF1aXJlKCcuL2hlbHBlcnMvaXNQcmltaXRpdmUnKTtcbnZhciBwYXJzZUludGVnZXIgPSBwYXJzZUludDtcbnZhciBiaW5kID0gcmVxdWlyZSgnZnVuY3Rpb24tYmluZCcpO1xudmFyIGFycmF5U2xpY2UgPSBiaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCwgQXJyYXkucHJvdG90eXBlLnNsaWNlKTtcbnZhciBzdHJTbGljZSA9IGJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLCBTdHJpbmcucHJvdG90eXBlLnNsaWNlKTtcbnZhciBpc0JpbmFyeSA9IGJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLCBSZWdFeHAucHJvdG90eXBlLnRlc3QsIC9eMGJbMDFdKyQvaSk7XG52YXIgaXNPY3RhbCA9IGJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLCBSZWdFeHAucHJvdG90eXBlLnRlc3QsIC9eMG9bMC03XSskL2kpO1xudmFyIHJlZ2V4RXhlYyA9IGJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLCBSZWdFeHAucHJvdG90eXBlLmV4ZWMpO1xudmFyIG5vbldTID0gWydcXHUwMDg1JywgJ1xcdTIwMGInLCAnXFx1ZmZmZSddLmpvaW4oJycpO1xudmFyIG5vbldTcmVnZXggPSBuZXcgUmVnRXhwKCdbJyArIG5vbldTICsgJ10nLCAnZycpO1xudmFyIGhhc05vbldTID0gYmluZC5jYWxsKEZ1bmN0aW9uLmNhbGwsIFJlZ0V4cC5wcm90b3R5cGUudGVzdCwgbm9uV1NyZWdleCk7XG52YXIgaW52YWxpZEhleExpdGVyYWwgPSAvXlstK10weFswLTlhLWZdKyQvaTtcbnZhciBpc0ludmFsaWRIZXhMaXRlcmFsID0gYmluZC5jYWxsKEZ1bmN0aW9uLmNhbGwsIFJlZ0V4cC5wcm90b3R5cGUudGVzdCwgaW52YWxpZEhleExpdGVyYWwpO1xuXG4vLyB3aGl0ZXNwYWNlIGZyb206IGh0dHA6Ly9lczUuZ2l0aHViLmlvLyN4MTUuNS40LjIwXG4vLyBpbXBsZW1lbnRhdGlvbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9lcy1zaGltcy9lczUtc2hpbS9ibG9iL3YzLjQuMC9lczUtc2hpbS5qcyNMMTMwNC1MMTMyNFxudmFyIHdzID0gW1xuXHQnXFx4MDlcXHgwQVxceDBCXFx4MENcXHgwRFxceDIwXFx4QTBcXHUxNjgwXFx1MTgwRVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDMnLFxuXHQnXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwQVxcdTIwMkZcXHUyMDVGXFx1MzAwMFxcdTIwMjgnLFxuXHQnXFx1MjAyOVxcdUZFRkYnXG5dLmpvaW4oJycpO1xudmFyIHRyaW1SZWdleCA9IG5ldyBSZWdFeHAoJyheWycgKyB3cyArICddKyl8KFsnICsgd3MgKyAnXSskKScsICdnJyk7XG52YXIgcmVwbGFjZSA9IGJpbmQuY2FsbChGdW5jdGlvbi5jYWxsLCBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2UpO1xudmFyIHRyaW0gPSBmdW5jdGlvbiAodmFsdWUpIHtcblx0cmV0dXJuIHJlcGxhY2UodmFsdWUsIHRyaW1SZWdleCwgJycpO1xufTtcblxudmFyIEVTNSA9IHJlcXVpcmUoJy4vZXM1Jyk7XG5cbnZhciBoYXNSZWdFeHBNYXRjaGVyID0gcmVxdWlyZSgnaXMtcmVnZXgnKTtcblxuLy8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWFic3RyYWN0LW9wZXJhdGlvbnNcbnZhciBFUzYgPSBhc3NpZ24oYXNzaWduKHt9LCBFUzUpLCB7XG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWNhbGwtZi12LWFyZ3Ncblx0Q2FsbDogZnVuY3Rpb24gQ2FsbChGLCBWKSB7XG5cdFx0dmFyIGFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IFtdO1xuXHRcdGlmICghdGhpcy5Jc0NhbGxhYmxlKEYpKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKEYgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uJyk7XG5cdFx0fVxuXHRcdHJldHVybiBGLmFwcGx5KFYsIGFyZ3MpO1xuXHR9LFxuXG5cdC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy10b3ByaW1pdGl2ZVxuXHRUb1ByaW1pdGl2ZTogdG9QcmltaXRpdmUsXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXRvYm9vbGVhblxuXHQvLyBUb0Jvb2xlYW46IEVTNS5Ub0Jvb2xlYW4sXG5cblx0Ly8gaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLXRvbnVtYmVyXG5cdFRvTnVtYmVyOiBmdW5jdGlvbiBUb051bWJlcihhcmd1bWVudCkge1xuXHRcdHZhciB2YWx1ZSA9IGlzUHJpbWl0aXZlKGFyZ3VtZW50KSA/IGFyZ3VtZW50IDogdG9QcmltaXRpdmUoYXJndW1lbnQsIE51bWJlcik7XG5cdFx0aWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N5bWJvbCcpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgbnVtYmVyJyk7XG5cdFx0fVxuXHRcdGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG5cdFx0XHRpZiAoaXNCaW5hcnkodmFsdWUpKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLlRvTnVtYmVyKHBhcnNlSW50ZWdlcihzdHJTbGljZSh2YWx1ZSwgMiksIDIpKTtcblx0XHRcdH0gZWxzZSBpZiAoaXNPY3RhbCh2YWx1ZSkpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuVG9OdW1iZXIocGFyc2VJbnRlZ2VyKHN0clNsaWNlKHZhbHVlLCAyKSwgOCkpO1xuXHRcdFx0fSBlbHNlIGlmIChoYXNOb25XUyh2YWx1ZSkgfHwgaXNJbnZhbGlkSGV4TGl0ZXJhbCh2YWx1ZSkpIHtcblx0XHRcdFx0cmV0dXJuIE5hTjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhciB0cmltbWVkID0gdHJpbSh2YWx1ZSk7XG5cdFx0XHRcdGlmICh0cmltbWVkICE9PSB2YWx1ZSkge1xuXHRcdFx0XHRcdHJldHVybiB0aGlzLlRvTnVtYmVyKHRyaW1tZWQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBOdW1iZXIodmFsdWUpO1xuXHR9LFxuXG5cdC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy10b2ludGVnZXJcblx0Ly8gVG9JbnRlZ2VyOiBFUzUuVG9OdW1iZXIsXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXRvaW50MzJcblx0Ly8gVG9JbnQzMjogRVM1LlRvSW50MzIsXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXRvdWludDMyXG5cdC8vIFRvVWludDMyOiBFUzUuVG9VaW50MzIsXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXRvaW50MTZcblx0VG9JbnQxNjogZnVuY3Rpb24gVG9JbnQxNihhcmd1bWVudCkge1xuXHRcdHZhciBpbnQxNmJpdCA9IHRoaXMuVG9VaW50MTYoYXJndW1lbnQpO1xuXHRcdHJldHVybiBpbnQxNmJpdCA+PSAweDgwMDAgPyBpbnQxNmJpdCAtIDB4MTAwMDAgOiBpbnQxNmJpdDtcblx0fSxcblxuXHQvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtdG91aW50MTZcblx0Ly8gVG9VaW50MTY6IEVTNS5Ub1VpbnQxNixcblxuXHQvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtdG9pbnQ4XG5cdFRvSW50ODogZnVuY3Rpb24gVG9JbnQ4KGFyZ3VtZW50KSB7XG5cdFx0dmFyIGludDhiaXQgPSB0aGlzLlRvVWludDgoYXJndW1lbnQpO1xuXHRcdHJldHVybiBpbnQ4Yml0ID49IDB4ODAgPyBpbnQ4Yml0IC0gMHgxMDAgOiBpbnQ4Yml0O1xuXHR9LFxuXG5cdC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy10b3VpbnQ4XG5cdFRvVWludDg6IGZ1bmN0aW9uIFRvVWludDgoYXJndW1lbnQpIHtcblx0XHR2YXIgbnVtYmVyID0gdGhpcy5Ub051bWJlcihhcmd1bWVudCk7XG5cdFx0aWYgKCRpc05hTihudW1iZXIpIHx8IG51bWJlciA9PT0gMCB8fCAhJGlzRmluaXRlKG51bWJlcikpIHsgcmV0dXJuIDA7IH1cblx0XHR2YXIgcG9zSW50ID0gc2lnbihudW1iZXIpICogTWF0aC5mbG9vcihNYXRoLmFicyhudW1iZXIpKTtcblx0XHRyZXR1cm4gbW9kKHBvc0ludCwgMHgxMDApO1xuXHR9LFxuXG5cdC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy10b3VpbnQ4Y2xhbXBcblx0VG9VaW50OENsYW1wOiBmdW5jdGlvbiBUb1VpbnQ4Q2xhbXAoYXJndW1lbnQpIHtcblx0XHR2YXIgbnVtYmVyID0gdGhpcy5Ub051bWJlcihhcmd1bWVudCk7XG5cdFx0aWYgKCRpc05hTihudW1iZXIpIHx8IG51bWJlciA8PSAwKSB7IHJldHVybiAwOyB9XG5cdFx0aWYgKG51bWJlciA+PSAweEZGKSB7IHJldHVybiAweEZGOyB9XG5cdFx0dmFyIGYgPSBNYXRoLmZsb29yKGFyZ3VtZW50KTtcblx0XHRpZiAoZiArIDAuNSA8IG51bWJlcikgeyByZXR1cm4gZiArIDE7IH1cblx0XHRpZiAobnVtYmVyIDwgZiArIDAuNSkgeyByZXR1cm4gZjsgfVxuXHRcdGlmIChmICUgMiAhPT0gMCkgeyByZXR1cm4gZiArIDE7IH1cblx0XHRyZXR1cm4gZjtcblx0fSxcblxuXHQvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtdG9zdHJpbmdcblx0VG9TdHJpbmc6IGZ1bmN0aW9uIFRvU3RyaW5nKGFyZ3VtZW50KSB7XG5cdFx0aWYgKHR5cGVvZiBhcmd1bWVudCA9PT0gJ3N5bWJvbCcpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjb252ZXJ0IGEgU3ltYm9sIHZhbHVlIHRvIGEgc3RyaW5nJyk7XG5cdFx0fVxuXHRcdHJldHVybiBTdHJpbmcoYXJndW1lbnQpO1xuXHR9LFxuXG5cdC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy10b29iamVjdFxuXHRUb09iamVjdDogZnVuY3Rpb24gVG9PYmplY3QodmFsdWUpIHtcblx0XHR0aGlzLlJlcXVpcmVPYmplY3RDb2VyY2libGUodmFsdWUpO1xuXHRcdHJldHVybiBPYmplY3QodmFsdWUpO1xuXHR9LFxuXG5cdC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy10b3Byb3BlcnR5a2V5XG5cdFRvUHJvcGVydHlLZXk6IGZ1bmN0aW9uIFRvUHJvcGVydHlLZXkoYXJndW1lbnQpIHtcblx0XHR2YXIga2V5ID0gdGhpcy5Ub1ByaW1pdGl2ZShhcmd1bWVudCwgU3RyaW5nKTtcblx0XHRyZXR1cm4gdHlwZW9mIGtleSA9PT0gJ3N5bWJvbCcgPyBrZXkgOiB0aGlzLlRvU3RyaW5nKGtleSk7XG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXRvbGVuZ3RoXG5cdFRvTGVuZ3RoOiBmdW5jdGlvbiBUb0xlbmd0aChhcmd1bWVudCkge1xuXHRcdHZhciBsZW4gPSB0aGlzLlRvSW50ZWdlcihhcmd1bWVudCk7XG5cdFx0aWYgKGxlbiA8PSAwKSB7IHJldHVybiAwOyB9IC8vIGluY2x1ZGVzIGNvbnZlcnRpbmcgLTAgdG8gKzBcblx0XHRpZiAobGVuID4gTUFYX1NBRkVfSU5URUdFUikgeyByZXR1cm4gTUFYX1NBRkVfSU5URUdFUjsgfVxuXHRcdHJldHVybiBsZW47XG5cdH0sXG5cblx0Ly8gaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWNhbm9uaWNhbG51bWVyaWNpbmRleHN0cmluZ1xuXHRDYW5vbmljYWxOdW1lcmljSW5kZXhTdHJpbmc6IGZ1bmN0aW9uIENhbm9uaWNhbE51bWVyaWNJbmRleFN0cmluZyhhcmd1bWVudCkge1xuXHRcdGlmICh0b1N0ci5jYWxsKGFyZ3VtZW50KSAhPT0gJ1tvYmplY3QgU3RyaW5nXScpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ211c3QgYmUgYSBzdHJpbmcnKTtcblx0XHR9XG5cdFx0aWYgKGFyZ3VtZW50ID09PSAnLTAnKSB7IHJldHVybiAtMDsgfVxuXHRcdHZhciBuID0gdGhpcy5Ub051bWJlcihhcmd1bWVudCk7XG5cdFx0aWYgKHRoaXMuU2FtZVZhbHVlKHRoaXMuVG9TdHJpbmcobiksIGFyZ3VtZW50KSkgeyByZXR1cm4gbjsgfVxuXHRcdHJldHVybiB2b2lkIDA7XG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXJlcXVpcmVvYmplY3Rjb2VyY2libGVcblx0UmVxdWlyZU9iamVjdENvZXJjaWJsZTogRVM1LkNoZWNrT2JqZWN0Q29lcmNpYmxlLFxuXG5cdC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy1pc2FycmF5XG5cdElzQXJyYXk6IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gSXNBcnJheShhcmd1bWVudCkge1xuXHRcdHJldHVybiB0b1N0ci5jYWxsKGFyZ3VtZW50KSA9PT0gJ1tvYmplY3QgQXJyYXldJztcblx0fSxcblxuXHQvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtaXNjYWxsYWJsZVxuXHQvLyBJc0NhbGxhYmxlOiBFUzUuSXNDYWxsYWJsZSxcblxuXHQvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtaXNjb25zdHJ1Y3RvclxuXHRJc0NvbnN0cnVjdG9yOiBmdW5jdGlvbiBJc0NvbnN0cnVjdG9yKGFyZ3VtZW50KSB7XG5cdFx0cmV0dXJuIHR5cGVvZiBhcmd1bWVudCA9PT0gJ2Z1bmN0aW9uJyAmJiAhIWFyZ3VtZW50LnByb3RvdHlwZTsgLy8gdW5mb3J0dW5hdGVseSB0aGVyZSdzIG5vIHdheSB0byB0cnVseSBjaGVjayB0aGlzIHdpdGhvdXQgdHJ5L2NhdGNoIGBuZXcgYXJndW1lbnRgXG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLWlzZXh0ZW5zaWJsZS1vXG5cdElzRXh0ZW5zaWJsZTogZnVuY3Rpb24gSXNFeHRlbnNpYmxlKG9iaikge1xuXHRcdGlmICghT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKSB7IHJldHVybiB0cnVlOyB9XG5cdFx0aWYgKGlzUHJpbWl0aXZlKG9iaikpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIE9iamVjdC5pc0V4dGVuc2libGUob2JqKTtcblx0fSxcblxuXHQvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtaXNpbnRlZ2VyXG5cdElzSW50ZWdlcjogZnVuY3Rpb24gSXNJbnRlZ2VyKGFyZ3VtZW50KSB7XG5cdFx0aWYgKHR5cGVvZiBhcmd1bWVudCAhPT0gJ251bWJlcicgfHwgJGlzTmFOKGFyZ3VtZW50KSB8fCAhJGlzRmluaXRlKGFyZ3VtZW50KSkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHR2YXIgYWJzID0gTWF0aC5hYnMoYXJndW1lbnQpO1xuXHRcdHJldHVybiBNYXRoLmZsb29yKGFicykgPT09IGFicztcblx0fSxcblxuXHQvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtaXNwcm9wZXJ0eWtleVxuXHRJc1Byb3BlcnR5S2V5OiBmdW5jdGlvbiBJc1Byb3BlcnR5S2V5KGFyZ3VtZW50KSB7XG5cdFx0cmV0dXJuIHR5cGVvZiBhcmd1bWVudCA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIGFyZ3VtZW50ID09PSAnc3ltYm9sJztcblx0fSxcblxuXHQvLyBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtaXNyZWdleHBcblx0SXNSZWdFeHA6IGZ1bmN0aW9uIElzUmVnRXhwKGFyZ3VtZW50KSB7XG5cdFx0aWYgKCFhcmd1bWVudCB8fCB0eXBlb2YgYXJndW1lbnQgIT09ICdvYmplY3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXHRcdGlmIChoYXNTeW1ib2xzKSB7XG5cdFx0XHR2YXIgaXNSZWdFeHAgPSBhcmd1bWVudFtTeW1ib2wubWF0Y2hdO1xuXHRcdFx0aWYgKHR5cGVvZiBpc1JlZ0V4cCAhPT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0cmV0dXJuIEVTNS5Ub0Jvb2xlYW4oaXNSZWdFeHApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gaGFzUmVnRXhwTWF0Y2hlcihhcmd1bWVudCk7XG5cdH0sXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXNhbWV2YWx1ZVxuXHQvLyBTYW1lVmFsdWU6IEVTNS5TYW1lVmFsdWUsXG5cblx0Ly8gaHR0cHM6Ly9wZW9wbGUubW96aWxsYS5vcmcvfmpvcmVuZG9yZmYvZXM2LWRyYWZ0Lmh0bWwjc2VjLXNhbWV2YWx1ZXplcm9cblx0U2FtZVZhbHVlWmVybzogZnVuY3Rpb24gU2FtZVZhbHVlWmVybyh4LCB5KSB7XG5cdFx0cmV0dXJuICh4ID09PSB5KSB8fCAoJGlzTmFOKHgpICYmICRpc05hTih5KSk7XG5cdH0sXG5cblx0LyoqXG5cdCAqIDcuMy4yIEdldFYgKFYsIFApXG5cdCAqIDEuIEFzc2VydDogSXNQcm9wZXJ0eUtleShQKSBpcyB0cnVlLlxuXHQgKiAyLiBMZXQgTyBiZSBUb09iamVjdChWKS5cblx0ICogMy4gUmV0dXJuSWZBYnJ1cHQoTykuXG5cdCAqIDQuIFJldHVybiBPLltbR2V0XV0oUCwgVikuXG5cdCAqL1xuXHRHZXRWOiBmdW5jdGlvbiBHZXRWKFYsIFApIHtcblx0XHQvLyA3LjMuMi4xXG5cdFx0aWYgKCF0aGlzLklzUHJvcGVydHlLZXkoUCkpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Fzc2VydGlvbiBmYWlsZWQ6IElzUHJvcGVydHlLZXkoUCkgaXMgbm90IHRydWUnKTtcblx0XHR9XG5cblx0XHQvLyA3LjMuMi4yLTNcblx0XHR2YXIgTyA9IHRoaXMuVG9PYmplY3QoVik7XG5cblx0XHQvLyA3LjMuMi40XG5cdFx0cmV0dXJuIE9bUF07XG5cdH0sXG5cblx0LyoqXG5cdCAqIDcuMy45IC0gaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWdldG1ldGhvZFxuXHQgKiAxLiBBc3NlcnQ6IElzUHJvcGVydHlLZXkoUCkgaXMgdHJ1ZS5cblx0ICogMi4gTGV0IGZ1bmMgYmUgR2V0VihPLCBQKS5cblx0ICogMy4gUmV0dXJuSWZBYnJ1cHQoZnVuYykuXG5cdCAqIDQuIElmIGZ1bmMgaXMgZWl0aGVyIHVuZGVmaW5lZCBvciBudWxsLCByZXR1cm4gdW5kZWZpbmVkLlxuXHQgKiA1LiBJZiBJc0NhbGxhYmxlKGZ1bmMpIGlzIGZhbHNlLCB0aHJvdyBhIFR5cGVFcnJvciBleGNlcHRpb24uXG5cdCAqIDYuIFJldHVybiBmdW5jLlxuXHQgKi9cblx0R2V0TWV0aG9kOiBmdW5jdGlvbiBHZXRNZXRob2QoTywgUCkge1xuXHRcdC8vIDcuMy45LjFcblx0XHRpZiAoIXRoaXMuSXNQcm9wZXJ0eUtleShQKSkge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignQXNzZXJ0aW9uIGZhaWxlZDogSXNQcm9wZXJ0eUtleShQKSBpcyBub3QgdHJ1ZScpO1xuXHRcdH1cblxuXHRcdC8vIDcuMy45LjJcblx0XHR2YXIgZnVuYyA9IHRoaXMuR2V0VihPLCBQKTtcblxuXHRcdC8vIDcuMy45LjRcblx0XHRpZiAoZnVuYyA9PSBudWxsKSB7XG5cdFx0XHRyZXR1cm4gdm9pZCAwO1xuXHRcdH1cblxuXHRcdC8vIDcuMy45LjVcblx0XHRpZiAoIXRoaXMuSXNDYWxsYWJsZShmdW5jKSkge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcihQICsgJ2lzIG5vdCBhIGZ1bmN0aW9uJyk7XG5cdFx0fVxuXG5cdFx0Ly8gNy4zLjkuNlxuXHRcdHJldHVybiBmdW5jO1xuXHR9LFxuXG5cdC8qKlxuXHQgKiA3LjMuMSBHZXQgKE8sIFApIC0gaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWdldC1vLXBcblx0ICogMS4gQXNzZXJ0OiBUeXBlKE8pIGlzIE9iamVjdC5cblx0ICogMi4gQXNzZXJ0OiBJc1Byb3BlcnR5S2V5KFApIGlzIHRydWUuXG5cdCAqIDMuIFJldHVybiBPLltbR2V0XV0oUCwgTykuXG5cdCAqL1xuXHRHZXQ6IGZ1bmN0aW9uIEdldChPLCBQKSB7XG5cdFx0Ly8gNy4zLjEuMVxuXHRcdGlmICh0aGlzLlR5cGUoTykgIT09ICdPYmplY3QnKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBUeXBlKE8pIGlzIG5vdCBPYmplY3QnKTtcblx0XHR9XG5cdFx0Ly8gNy4zLjEuMlxuXHRcdGlmICghdGhpcy5Jc1Byb3BlcnR5S2V5KFApKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBJc1Byb3BlcnR5S2V5KFApIGlzIG5vdCB0cnVlJyk7XG5cdFx0fVxuXHRcdC8vIDcuMy4xLjNcblx0XHRyZXR1cm4gT1tQXTtcblx0fSxcblxuXHRUeXBlOiBmdW5jdGlvbiBUeXBlKHgpIHtcblx0XHRpZiAodHlwZW9mIHggPT09ICdzeW1ib2wnKSB7XG5cdFx0XHRyZXR1cm4gJ1N5bWJvbCc7XG5cdFx0fVxuXHRcdHJldHVybiBFUzUuVHlwZSh4KTtcblx0fSxcblxuXHQvLyBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtc3BlY2llc2NvbnN0cnVjdG9yXG5cdFNwZWNpZXNDb25zdHJ1Y3RvcjogZnVuY3Rpb24gU3BlY2llc0NvbnN0cnVjdG9yKE8sIGRlZmF1bHRDb25zdHJ1Y3Rvcikge1xuXHRcdGlmICh0aGlzLlR5cGUoTykgIT09ICdPYmplY3QnKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBUeXBlKE8pIGlzIG5vdCBPYmplY3QnKTtcblx0XHR9XG5cdFx0dmFyIEMgPSBPLmNvbnN0cnVjdG9yO1xuXHRcdGlmICh0eXBlb2YgQyA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdHJldHVybiBkZWZhdWx0Q29uc3RydWN0b3I7XG5cdFx0fVxuXHRcdGlmICh0aGlzLlR5cGUoQykgIT09ICdPYmplY3QnKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPLmNvbnN0cnVjdG9yIGlzIG5vdCBhbiBPYmplY3QnKTtcblx0XHR9XG5cdFx0dmFyIFMgPSBoYXNTeW1ib2xzICYmIFN5bWJvbC5zcGVjaWVzID8gQ1tTeW1ib2wuc3BlY2llc10gOiB2b2lkIDA7XG5cdFx0aWYgKFMgPT0gbnVsbCkge1xuXHRcdFx0cmV0dXJuIGRlZmF1bHRDb25zdHJ1Y3Rvcjtcblx0XHR9XG5cdFx0aWYgKHRoaXMuSXNDb25zdHJ1Y3RvcihTKSkge1xuXHRcdFx0cmV0dXJuIFM7XG5cdFx0fVxuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ25vIGNvbnN0cnVjdG9yIGZvdW5kJyk7XG5cdH0sXG5cblx0Ly8gaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtY29tcGxldGVwcm9wZXJ0eWRlc2NyaXB0b3Jcblx0Q29tcGxldGVQcm9wZXJ0eURlc2NyaXB0b3I6IGZ1bmN0aW9uIENvbXBsZXRlUHJvcGVydHlEZXNjcmlwdG9yKERlc2MpIHtcblx0XHRpZiAoIXRoaXMuSXNQcm9wZXJ0eURlc2NyaXB0b3IoRGVzYykpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Rlc2MgbXVzdCBiZSBhIFByb3BlcnR5IERlc2NyaXB0b3InKTtcblx0XHR9XG5cblx0XHRpZiAodGhpcy5Jc0dlbmVyaWNEZXNjcmlwdG9yKERlc2MpIHx8IHRoaXMuSXNEYXRhRGVzY3JpcHRvcihEZXNjKSkge1xuXHRcdFx0aWYgKCFoYXMoRGVzYywgJ1tbVmFsdWVdXScpKSB7XG5cdFx0XHRcdERlc2NbJ1tbVmFsdWVdXSddID0gdm9pZCAwO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFoYXMoRGVzYywgJ1tbV3JpdGFibGVdXScpKSB7XG5cdFx0XHRcdERlc2NbJ1tbV3JpdGFibGVdXSddID0gZmFsc2U7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICghaGFzKERlc2MsICdbW0dldF1dJykpIHtcblx0XHRcdFx0RGVzY1snW1tHZXRdXSddID0gdm9pZCAwO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCFoYXMoRGVzYywgJ1tbU2V0XV0nKSkge1xuXHRcdFx0XHREZXNjWydbW1NldF1dJ10gPSB2b2lkIDA7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmICghaGFzKERlc2MsICdbW0VudW1lcmFibGVdXScpKSB7XG5cdFx0XHREZXNjWydbW0VudW1lcmFibGVdXSddID0gZmFsc2U7XG5cdFx0fVxuXHRcdGlmICghaGFzKERlc2MsICdbW0NvbmZpZ3VyYWJsZV1dJykpIHtcblx0XHRcdERlc2NbJ1tbQ29uZmlndXJhYmxlXV0nXSA9IGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gRGVzYztcblx0fSxcblxuXHQvLyBodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi82LjAvI3NlYy1zZXQtby1wLXYtdGhyb3dcblx0U2V0OiBmdW5jdGlvbiBTZXQoTywgUCwgViwgVGhyb3cpIHtcblx0XHRpZiAodGhpcy5UeXBlKE8pICE9PSAnT2JqZWN0Jykge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignTyBtdXN0IGJlIGFuIE9iamVjdCcpO1xuXHRcdH1cblx0XHRpZiAoIXRoaXMuSXNQcm9wZXJ0eUtleShQKSkge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignUCBtdXN0IGJlIGEgUHJvcGVydHkgS2V5Jyk7XG5cdFx0fVxuXHRcdGlmICh0aGlzLlR5cGUoVGhyb3cpICE9PSAnQm9vbGVhbicpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1Rocm93IG11c3QgYmUgYSBCb29sZWFuJyk7XG5cdFx0fVxuXHRcdGlmIChUaHJvdykge1xuXHRcdFx0T1tQXSA9IFY7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0T1tQXSA9IFY7XG5cdFx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0Ly8gaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtaGFzb3ducHJvcGVydHlcblx0SGFzT3duUHJvcGVydHk6IGZ1bmN0aW9uIEhhc093blByb3BlcnR5KE8sIFApIHtcblx0XHRpZiAodGhpcy5UeXBlKE8pICE9PSAnT2JqZWN0Jykge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignTyBtdXN0IGJlIGFuIE9iamVjdCcpO1xuXHRcdH1cblx0XHRpZiAoIXRoaXMuSXNQcm9wZXJ0eUtleShQKSkge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignUCBtdXN0IGJlIGEgUHJvcGVydHkgS2V5Jyk7XG5cdFx0fVxuXHRcdHJldHVybiBoYXMoTywgUCk7XG5cdH0sXG5cblx0Ly8gaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtaGFzcHJvcGVydHlcblx0SGFzUHJvcGVydHk6IGZ1bmN0aW9uIEhhc1Byb3BlcnR5KE8sIFApIHtcblx0XHRpZiAodGhpcy5UeXBlKE8pICE9PSAnT2JqZWN0Jykge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignTyBtdXN0IGJlIGFuIE9iamVjdCcpO1xuXHRcdH1cblx0XHRpZiAoIXRoaXMuSXNQcm9wZXJ0eUtleShQKSkge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignUCBtdXN0IGJlIGEgUHJvcGVydHkgS2V5Jyk7XG5cdFx0fVxuXHRcdHJldHVybiBQIGluIE87XG5cdH0sXG5cblx0Ly8gaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtaXNjb25jYXRzcHJlYWRhYmxlXG5cdElzQ29uY2F0U3ByZWFkYWJsZTogZnVuY3Rpb24gSXNDb25jYXRTcHJlYWRhYmxlKE8pIHtcblx0XHRpZiAodGhpcy5UeXBlKE8pICE9PSAnT2JqZWN0Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRpZiAoaGFzU3ltYm9scyAmJiB0eXBlb2YgU3ltYm9sLmlzQ29uY2F0U3ByZWFkYWJsZSA9PT0gJ3N5bWJvbCcpIHtcblx0XHRcdHZhciBzcHJlYWRhYmxlID0gdGhpcy5HZXQoTywgU3ltYm9sLmlzQ29uY2F0U3ByZWFkYWJsZSk7XG5cdFx0XHRpZiAodHlwZW9mIHNwcmVhZGFibGUgIT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHRcdHJldHVybiB0aGlzLlRvQm9vbGVhbihzcHJlYWRhYmxlKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuSXNBcnJheShPKTtcblx0fSxcblxuXHQvLyBodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi82LjAvI3NlYy1pbnZva2Vcblx0SW52b2tlOiBmdW5jdGlvbiBJbnZva2UoTywgUCkge1xuXHRcdGlmICghdGhpcy5Jc1Byb3BlcnR5S2V5KFApKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdQIG11c3QgYmUgYSBQcm9wZXJ0eSBLZXknKTtcblx0XHR9XG5cdFx0dmFyIGFyZ3VtZW50c0xpc3QgPSBhcnJheVNsaWNlKGFyZ3VtZW50cywgMik7XG5cdFx0dmFyIGZ1bmMgPSB0aGlzLkdldFYoTywgUCk7XG5cdFx0cmV0dXJuIHRoaXMuQ2FsbChmdW5jLCBPLCBhcmd1bWVudHNMaXN0KTtcblx0fSxcblxuXHQvLyBodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi82LjAvI3NlYy1jcmVhdGVpdGVycmVzdWx0b2JqZWN0XG5cdENyZWF0ZUl0ZXJSZXN1bHRPYmplY3Q6IGZ1bmN0aW9uIENyZWF0ZUl0ZXJSZXN1bHRPYmplY3QodmFsdWUsIGRvbmUpIHtcblx0XHRpZiAodGhpcy5UeXBlKGRvbmUpICE9PSAnQm9vbGVhbicpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Fzc2VydGlvbiBmYWlsZWQ6IFR5cGUoZG9uZSkgaXMgbm90IEJvb2xlYW4nKTtcblx0XHR9XG5cdFx0cmV0dXJuIHtcblx0XHRcdHZhbHVlOiB2YWx1ZSxcblx0XHRcdGRvbmU6IGRvbmVcblx0XHR9O1xuXHR9LFxuXG5cdC8vIGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLXJlZ2V4cGV4ZWNcblx0UmVnRXhwRXhlYzogZnVuY3Rpb24gUmVnRXhwRXhlYyhSLCBTKSB7XG5cdFx0aWYgKHRoaXMuVHlwZShSKSAhPT0gJ09iamVjdCcpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1IgbXVzdCBiZSBhbiBPYmplY3QnKTtcblx0XHR9XG5cdFx0aWYgKHRoaXMuVHlwZShTKSAhPT0gJ1N0cmluZycpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1MgbXVzdCBiZSBhIFN0cmluZycpO1xuXHRcdH1cblx0XHR2YXIgZXhlYyA9IHRoaXMuR2V0KFIsICdleGVjJyk7XG5cdFx0aWYgKHRoaXMuSXNDYWxsYWJsZShleGVjKSkge1xuXHRcdFx0dmFyIHJlc3VsdCA9IHRoaXMuQ2FsbChleGVjLCBSLCBbU10pO1xuXHRcdFx0aWYgKHJlc3VsdCA9PT0gbnVsbCB8fCB0aGlzLlR5cGUocmVzdWx0KSA9PT0gJ09iamVjdCcpIHtcblx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdH1cblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1wiZXhlY1wiIG1ldGhvZCBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gT2JqZWN0Jyk7XG5cdFx0fVxuXHRcdHJldHVybiByZWdleEV4ZWMoUiwgUyk7XG5cdH0sXG5cblx0Ly8gaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNi4wLyNzZWMtYXJyYXlzcGVjaWVzY3JlYXRlXG5cdEFycmF5U3BlY2llc0NyZWF0ZTogZnVuY3Rpb24gQXJyYXlTcGVjaWVzQ3JlYXRlKG9yaWdpbmFsQXJyYXksIGxlbmd0aCkge1xuXHRcdGlmICghdGhpcy5Jc0ludGVnZXIobGVuZ3RoKSB8fCBsZW5ndGggPCAwKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBsZW5ndGggbXVzdCBiZSBhbiBpbnRlZ2VyID49IDAnKTtcblx0XHR9XG5cdFx0dmFyIGxlbiA9IGxlbmd0aCA9PT0gMCA/IDAgOiBsZW5ndGg7XG5cdFx0dmFyIEM7XG5cdFx0dmFyIGlzQXJyYXkgPSB0aGlzLklzQXJyYXkob3JpZ2luYWxBcnJheSk7XG5cdFx0aWYgKGlzQXJyYXkpIHtcblx0XHRcdEMgPSB0aGlzLkdldChvcmlnaW5hbEFycmF5LCAnY29uc3RydWN0b3InKTtcblx0XHRcdC8vIFRPRE86IGZpZ3VyZSBvdXQgaG93IHRvIG1ha2UgYSBjcm9zcy1yZWFsbSBub3JtYWwgQXJyYXksIGEgc2FtZS1yZWFsbSBBcnJheVxuXHRcdFx0Ly8gaWYgKHRoaXMuSXNDb25zdHJ1Y3RvcihDKSkge1xuXHRcdFx0Ly8gXHRpZiBDIGlzIGFub3RoZXIgcmVhbG0ncyBBcnJheSwgQyA9IHVuZGVmaW5lZFxuXHRcdFx0Ly8gXHRPYmplY3QuZ2V0UHJvdG90eXBlT2YoT2JqZWN0LmdldFByb3RvdHlwZU9mKE9iamVjdC5nZXRQcm90b3R5cGVPZihBcnJheSkpKSA9PT0gbnVsbCA/XG5cdFx0XHQvLyB9XG5cdFx0XHRpZiAodGhpcy5UeXBlKEMpID09PSAnT2JqZWN0JyAmJiBoYXNTeW1ib2xzICYmIFN5bWJvbC5zcGVjaWVzKSB7XG5cdFx0XHRcdEMgPSB0aGlzLkdldChDLCBTeW1ib2wuc3BlY2llcyk7XG5cdFx0XHRcdGlmIChDID09PSBudWxsKSB7XG5cdFx0XHRcdFx0QyA9IHZvaWQgMDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRpZiAodHlwZW9mIEMgPT09ICd1bmRlZmluZWQnKSB7XG5cdFx0XHRyZXR1cm4gQXJyYXkobGVuKTtcblx0XHR9XG5cdFx0aWYgKCF0aGlzLklzQ29uc3RydWN0b3IoQykpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0MgbXVzdCBiZSBhIGNvbnN0cnVjdG9yJyk7XG5cdFx0fVxuXHRcdHJldHVybiBuZXcgQyhsZW4pOyAvLyB0aGlzLkNvbnN0cnVjdChDLCBsZW4pO1xuXHR9LFxuXG5cdENyZWF0ZURhdGFQcm9wZXJ0eTogZnVuY3Rpb24gQ3JlYXRlRGF0YVByb3BlcnR5KE8sIFAsIFYpIHtcblx0XHRpZiAodGhpcy5UeXBlKE8pICE9PSAnT2JqZWN0Jykge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignQXNzZXJ0aW9uIGZhaWxlZDogVHlwZShPKSBpcyBub3QgT2JqZWN0Jyk7XG5cdFx0fVxuXHRcdGlmICghdGhpcy5Jc1Byb3BlcnR5S2V5KFApKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBJc1Byb3BlcnR5S2V5KFApIGlzIG5vdCB0cnVlJyk7XG5cdFx0fVxuXHRcdHZhciBvbGREZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKTtcblx0XHR2YXIgZXh0ZW5zaWJsZSA9IG9sZERlc2MgfHwgKHR5cGVvZiBPYmplY3QuaXNFeHRlbnNpYmxlICE9PSAnZnVuY3Rpb24nIHx8IE9iamVjdC5pc0V4dGVuc2libGUoTykpO1xuXHRcdHZhciBpbW11dGFibGUgPSBvbGREZXNjICYmICghb2xkRGVzYy53cml0YWJsZSB8fCAhb2xkRGVzYy5jb25maWd1cmFibGUpO1xuXHRcdGlmIChpbW11dGFibGUgfHwgIWV4dGVuc2libGUpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0dmFyIG5ld0Rlc2MgPSB7XG5cdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdFx0dmFsdWU6IFYsXG5cdFx0XHR3cml0YWJsZTogdHJ1ZVxuXHRcdH07XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIG5ld0Rlc2MpO1xuXHRcdHJldHVybiB0cnVlO1xuXHR9LFxuXG5cdC8vIGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWNyZWF0ZWRhdGFwcm9wZXJ0eW9ydGhyb3dcblx0Q3JlYXRlRGF0YVByb3BlcnR5T3JUaHJvdzogZnVuY3Rpb24gQ3JlYXRlRGF0YVByb3BlcnR5T3JUaHJvdyhPLCBQLCBWKSB7XG5cdFx0aWYgKHRoaXMuVHlwZShPKSAhPT0gJ09iamVjdCcpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Fzc2VydGlvbiBmYWlsZWQ6IFR5cGUoTykgaXMgbm90IE9iamVjdCcpO1xuXHRcdH1cblx0XHRpZiAoIXRoaXMuSXNQcm9wZXJ0eUtleShQKSkge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignQXNzZXJ0aW9uIGZhaWxlZDogSXNQcm9wZXJ0eUtleShQKSBpcyBub3QgdHJ1ZScpO1xuXHRcdH1cblx0XHR2YXIgc3VjY2VzcyA9IHRoaXMuQ3JlYXRlRGF0YVByb3BlcnR5KE8sIFAsIFYpO1xuXHRcdGlmICghc3VjY2Vzcykge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcigndW5hYmxlIHRvIGNyZWF0ZSBkYXRhIHByb3BlcnR5Jyk7XG5cdFx0fVxuXHRcdHJldHVybiBzdWNjZXNzO1xuXHR9LFxuXG5cdC8vIGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzYuMC8jc2VjLWFkdmFuY2VzdHJpbmdpbmRleFxuXHRBZHZhbmNlU3RyaW5nSW5kZXg6IGZ1bmN0aW9uIEFkdmFuY2VTdHJpbmdJbmRleChTLCBpbmRleCwgdW5pY29kZSkge1xuXHRcdGlmICh0aGlzLlR5cGUoUykgIT09ICdTdHJpbmcnKSB7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBUeXBlKFMpIGlzIG5vdCBTdHJpbmcnKTtcblx0XHR9XG5cdFx0aWYgKCF0aGlzLklzSW50ZWdlcihpbmRleCkpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ0Fzc2VydGlvbiBmYWlsZWQ6IGxlbmd0aCBtdXN0IGJlIGFuIGludGVnZXIgPj0gMCBhbmQgPD0gKDIqKjUzIC0gMSknKTtcblx0XHR9XG5cdFx0aWYgKGluZGV4IDwgMCB8fCBpbmRleCA+IE1BWF9TQUZFX0lOVEVHRVIpIHtcblx0XHRcdHRocm93IG5ldyBSYW5nZUVycm9yKCdBc3NlcnRpb24gZmFpbGVkOiBsZW5ndGggbXVzdCBiZSBhbiBpbnRlZ2VyID49IDAgYW5kIDw9ICgyKio1MyAtIDEpJyk7XG5cdFx0fVxuXHRcdGlmICh0aGlzLlR5cGUodW5pY29kZSkgIT09ICdCb29sZWFuJykge1xuXHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignQXNzZXJ0aW9uIGZhaWxlZDogVHlwZSh1bmljb2RlKSBpcyBub3QgQm9vbGVhbicpO1xuXHRcdH1cblx0XHRpZiAoIXVuaWNvZGUpIHtcblx0XHRcdHJldHVybiBpbmRleCArIDE7XG5cdFx0fVxuXHRcdHZhciBsZW5ndGggPSBTLmxlbmd0aDtcblx0XHRpZiAoKGluZGV4ICsgMSkgPj0gbGVuZ3RoKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXggKyAxO1xuXHRcdH1cblx0XHR2YXIgZmlyc3QgPSBTLmNoYXJDb2RlQXQoaW5kZXgpO1xuXHRcdGlmIChmaXJzdCA8IDB4RDgwMCB8fCBmaXJzdCA+IDB4REJGRikge1xuXHRcdFx0cmV0dXJuIGluZGV4ICsgMTtcblx0XHR9XG5cdFx0dmFyIHNlY29uZCA9IFMuY2hhckNvZGVBdChpbmRleCArIDEpO1xuXHRcdGlmIChzZWNvbmQgPCAweERDMDAgfHwgc2Vjb25kID4gMHhERkZGKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXggKyAxO1xuXHRcdH1cblx0XHRyZXR1cm4gaW5kZXggKyAyO1xuXHR9XG59KTtcblxuZGVsZXRlIEVTNi5DaGVja09iamVjdENvZXJjaWJsZTsgLy8gcmVuYW1lZCBpbiBFUzYgdG8gUmVxdWlyZU9iamVjdENvZXJjaWJsZVxuXG5tb2R1bGUuZXhwb3J0cyA9IEVTNjtcbiJdfQ==","deps":{"function-bind":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\index.js","has":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js","./helpers/assign":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\assign.js","./helpers/isNaN":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isNaN.js","./helpers/isFinite":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isFinite.js","./helpers/sign":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\sign.js","./helpers/mod":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\mod.js","./helpers/isPrimitive":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isPrimitive.js","is-regex":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-regex\\index.js","./es5":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es5.js","es-to-primitive/es6":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es6.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2016.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2016.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar ES2015 = require('./es2015');\nvar assign = require('./helpers/assign');\n\nvar ES2016 = assign(assign({}, ES2015), {\n\t// https://github.com/tc39/ecma262/pull/60\n\tSameValueNonNumber: function SameValueNonNumber(x, y) {\n\t\tif (typeof x === 'number' || (typeof x === 'undefined' ? 'undefined' : _typeof(x)) !== (typeof y === 'undefined' ? 'undefined' : _typeof(y))) {\n\t\t\tthrow new TypeError('SameValueNonNumber requires two non-number values of the same type.');\n\t\t}\n\t\treturn this.SameValue(x, y);\n\t}\n});\n\nmodule.exports = ES2016;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzMjAxNi5qcyJdLCJuYW1lcyI6WyJFUzIwMTUiLCJyZXF1aXJlIiwiYXNzaWduIiwiRVMyMDE2IiwiU2FtZVZhbHVlTm9uTnVtYmVyIiwieCIsInkiLCJUeXBlRXJyb3IiLCJTYW1lVmFsdWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQUVBLElBQUlBLFNBQVNDLFFBQVEsVUFBUixDQUFiO0FBQ0EsSUFBSUMsU0FBU0QsUUFBUSxrQkFBUixDQUFiOztBQUVBLElBQUlFLFNBQVNELE9BQU9BLE9BQU8sRUFBUCxFQUFXRixNQUFYLENBQVAsRUFBMkI7QUFDdkM7QUFDQUkscUJBQW9CLFNBQVNBLGtCQUFULENBQTRCQyxDQUE1QixFQUErQkMsQ0FBL0IsRUFBa0M7QUFDckQsTUFBSSxPQUFPRCxDQUFQLEtBQWEsUUFBYixJQUF5QixRQUFPQSxDQUFQLHlDQUFPQSxDQUFQLGVBQW9CQyxDQUFwQix5Q0FBb0JBLENBQXBCLEVBQTdCLEVBQW9EO0FBQ25ELFNBQU0sSUFBSUMsU0FBSixDQUFjLHFFQUFkLENBQU47QUFDQTtBQUNELFNBQU8sS0FBS0MsU0FBTCxDQUFlSCxDQUFmLEVBQWtCQyxDQUFsQixDQUFQO0FBQ0E7QUFQc0MsQ0FBM0IsQ0FBYjs7QUFVQUcsT0FBT0MsT0FBUCxHQUFpQlAsTUFBakIiLCJmaWxlIjoiZXMyMDE2LmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRVMyMDE1ID0gcmVxdWlyZSgnLi9lczIwMTUnKTtcbnZhciBhc3NpZ24gPSByZXF1aXJlKCcuL2hlbHBlcnMvYXNzaWduJyk7XG5cbnZhciBFUzIwMTYgPSBhc3NpZ24oYXNzaWduKHt9LCBFUzIwMTUpLCB7XG5cdC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L2VjbWEyNjIvcHVsbC82MFxuXHRTYW1lVmFsdWVOb25OdW1iZXI6IGZ1bmN0aW9uIFNhbWVWYWx1ZU5vbk51bWJlcih4LCB5KSB7XG5cdFx0aWYgKHR5cGVvZiB4ID09PSAnbnVtYmVyJyB8fCB0eXBlb2YgeCAhPT0gdHlwZW9mIHkpIHtcblx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1NhbWVWYWx1ZU5vbk51bWJlciByZXF1aXJlcyB0d28gbm9uLW51bWJlciB2YWx1ZXMgb2YgdGhlIHNhbWUgdHlwZS4nKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuU2FtZVZhbHVlKHgsIHkpO1xuXHR9XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBFUzIwMTY7XG4iXX0=","deps":{"./helpers/assign":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\assign.js","./es2015":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2015.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es7.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es7.js","source":"'use strict';\n\nmodule.exports = require('./es2016');\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVzNy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwicmVxdWlyZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUFBLE9BQU9DLE9BQVAsR0FBaUJDLFFBQVEsVUFBUixDQUFqQiIsImZpbGUiOiJlczcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9lczIwMTYnKTtcbiJdfQ==","deps":{"./es2016":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2016.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\implementation.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\implementation.js","source":"'use strict';\n\nvar ES = require('es-abstract/es7');\nvar has = require('has');\nvar bind = require('function-bind');\nvar isEnumerable = bind.call(Function.call, Object.prototype.propertyIsEnumerable);\n\nmodule.exports = function entries(O) {\n\tvar obj = ES.RequireObjectCoercible(O);\n\tvar entrys = [];\n\tfor (var key in obj) {\n\t\tif (has(obj, key) && isEnumerable(obj, key)) {\n\t\t\tentrys.push([key, obj[key]]);\n\t\t}\n\t}\n\treturn entrys;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltcGxlbWVudGF0aW9uLmpzIl0sIm5hbWVzIjpbIkVTIiwicmVxdWlyZSIsImhhcyIsImJpbmQiLCJpc0VudW1lcmFibGUiLCJjYWxsIiwiRnVuY3Rpb24iLCJPYmplY3QiLCJwcm90b3R5cGUiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJlbnRyaWVzIiwiTyIsIm9iaiIsIlJlcXVpcmVPYmplY3RDb2VyY2libGUiLCJlbnRyeXMiLCJrZXkiLCJwdXNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxLQUFLQyxRQUFRLGlCQUFSLENBQVQ7QUFDQSxJQUFJQyxNQUFNRCxRQUFRLEtBQVIsQ0FBVjtBQUNBLElBQUlFLE9BQU9GLFFBQVEsZUFBUixDQUFYO0FBQ0EsSUFBSUcsZUFBZUQsS0FBS0UsSUFBTCxDQUFVQyxTQUFTRCxJQUFuQixFQUF5QkUsT0FBT0MsU0FBUCxDQUFpQkMsb0JBQTFDLENBQW5COztBQUVBQyxPQUFPQyxPQUFQLEdBQWlCLFNBQVNDLE9BQVQsQ0FBaUJDLENBQWpCLEVBQW9CO0FBQ3BDLEtBQUlDLE1BQU1kLEdBQUdlLHNCQUFILENBQTBCRixDQUExQixDQUFWO0FBQ0EsS0FBSUcsU0FBUyxFQUFiO0FBQ0EsTUFBSyxJQUFJQyxHQUFULElBQWdCSCxHQUFoQixFQUFxQjtBQUNwQixNQUFJWixJQUFJWSxHQUFKLEVBQVNHLEdBQVQsS0FBaUJiLGFBQWFVLEdBQWIsRUFBa0JHLEdBQWxCLENBQXJCLEVBQTZDO0FBQzVDRCxVQUFPRSxJQUFQLENBQVksQ0FBQ0QsR0FBRCxFQUFNSCxJQUFJRyxHQUFKLENBQU4sQ0FBWjtBQUNBO0FBQ0Q7QUFDRCxRQUFPRCxNQUFQO0FBQ0EsQ0FURCIsImZpbGUiOiJpbXBsZW1lbnRhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEVTID0gcmVxdWlyZSgnZXMtYWJzdHJhY3QvZXM3Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnaGFzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJ2Z1bmN0aW9uLWJpbmQnKTtcbnZhciBpc0VudW1lcmFibGUgPSBiaW5kLmNhbGwoRnVuY3Rpb24uY2FsbCwgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZW50cmllcyhPKSB7XG5cdHZhciBvYmogPSBFUy5SZXF1aXJlT2JqZWN0Q29lcmNpYmxlKE8pO1xuXHR2YXIgZW50cnlzID0gW107XG5cdGZvciAodmFyIGtleSBpbiBvYmopIHtcblx0XHRpZiAoaGFzKG9iaiwga2V5KSAmJiBpc0VudW1lcmFibGUob2JqLCBrZXkpKSB7XG5cdFx0XHRlbnRyeXMucHVzaChba2V5LCBvYmpba2V5XV0pO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gZW50cnlzO1xufTtcbiJdfQ==","deps":{"function-bind":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\index.js","has":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js","es-abstract/es7":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es7.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\index.js","source":"'use strict';\n\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = getPolyfill();\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImRlZmluZSIsInJlcXVpcmUiLCJpbXBsZW1lbnRhdGlvbiIsImdldFBvbHlmaWxsIiwic2hpbSIsInBvbHlmaWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUEsSUFBSUEsU0FBU0MsUUFBUSxtQkFBUixDQUFiOztBQUVBLElBQUlDLGlCQUFpQkQsUUFBUSxrQkFBUixDQUFyQjtBQUNBLElBQUlFLGNBQWNGLFFBQVEsWUFBUixDQUFsQjtBQUNBLElBQUlHLE9BQU9ILFFBQVEsUUFBUixDQUFYOztBQUVBLElBQUlJLFdBQVdGLGFBQWY7O0FBRUFILE9BQU9LLFFBQVAsRUFBaUI7QUFDaEJGLGNBQWFBLFdBREc7QUFFaEJELGlCQUFnQkEsY0FGQTtBQUdoQkUsT0FBTUE7QUFIVSxDQUFqQjs7QUFNQUUsT0FBT0MsT0FBUCxHQUFpQkYsUUFBakIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBkZWZpbmUgPSByZXF1aXJlKCdkZWZpbmUtcHJvcGVydGllcycpO1xuXG52YXIgaW1wbGVtZW50YXRpb24gPSByZXF1aXJlKCcuL2ltcGxlbWVudGF0aW9uJyk7XG52YXIgZ2V0UG9seWZpbGwgPSByZXF1aXJlKCcuL3BvbHlmaWxsJyk7XG52YXIgc2hpbSA9IHJlcXVpcmUoJy4vc2hpbScpO1xuXG52YXIgcG9seWZpbGwgPSBnZXRQb2x5ZmlsbCgpO1xuXG5kZWZpbmUocG9seWZpbGwsIHtcblx0Z2V0UG9seWZpbGw6IGdldFBvbHlmaWxsLFxuXHRpbXBsZW1lbnRhdGlvbjogaW1wbGVtZW50YXRpb24sXG5cdHNoaW06IHNoaW1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBvbHlmaWxsO1xuIl19","deps":{"./polyfill":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\polyfill.js","define-properties":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\define-properties\\index.js","./shim":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\shim.js","./implementation":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\implementation.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\index.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\index.js","source":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _scrollparent = require('scrollparent');\n\nvar _scrollparent2 = _interopRequireDefault(_scrollparent);\n\nvar _scrollmonitor = require('scrollmonitor');\n\nvar _scrollmonitor2 = _interopRequireDefault(_scrollmonitor);\n\nvar _schema2element = require('./utils/schema2element');\n\nvar _schema2element2 = _interopRequireDefault(_schema2element);\n\nvar _object = require('object.entries');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _object3 = require('object.values');\n\nvar _object4 = _interopRequireDefault(_object3);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;target[i] = obj[i];\n  }return target;\n}\n\nvar updatePropsCallbacks = [];\nvar updateRefsCallbacks = [];\nvar scrollWatchers = [];\nvar scrollOffsets = {};\nvar refCache = {};\nvar evalContext = {};\nvar scrollContainer = void 0;\n\nvar getRefs = function getRefs() {\n  var refs = {};\n  if (!scrollContainer) {\n    return;\n  }\n\n  scrollWatchers.forEach(function (watcher) {\n    // left and right props assume no horizontal scrolling\n    var watchItem = watcher.watchItem,\n        callbacks = watcher.callbacks,\n        container = watcher.container,\n        recalculateLocation = watcher.recalculateLocation,\n        offsets = watcher.offsets,\n        watcherProps = _objectWithoutProperties(watcher, ['watchItem', 'callbacks', 'container', 'recalculateLocation', 'offsets']);\n\n    refs[watchItem.dataset.ref] = _extends({}, watcherProps, {\n      domNode: watchItem\n    });\n  });\n\n  return refs;\n};\n\nvar wrapperKey = 0;\n\nvar Wrapper = function (_React$PureComponent) {\n  _inherits(Wrapper, _React$PureComponent);\n\n  function Wrapper(props) {\n    _classCallCheck(this, Wrapper);\n\n    var _this = _possibleConstructorReturn(this, _React$PureComponent.call(this, props));\n\n    _this.key = wrapperKey++;\n    _this.ref = {};\n    _this.onUpdateRefs = _this.onUpdateRefs.bind(_this);\n    _this.onUpdateProps = _this.onUpdateProps.bind(_this);\n\n    var vars = (0, _object4.default)(props.__vars__);\n    var exps = (0, _object4.default)(props.__expr__);\n\n    _this.usesRefs = exps.some(function (v) {\n      return v.includes('refs.');\n    });\n\n    // listen for props updates IF we care about them\n    if (vars.length || exps.length) {\n      // called with new doc state\n      // when any component calls updateProps()\n      updatePropsCallbacks.push(_this.onUpdateProps);\n    }\n\n    // listen for ref updates IF we care about them\n    if (props.hasHook || _this.usesRefs) {\n      updateRefsCallbacks.push(_this.onUpdateRefs);\n    }\n\n    _this.state = { hasError: false, error: null };\n    return _this;\n  }\n\n  Wrapper.prototype.componentDidCatch = function componentDidCatch(error, info) {\n    this.setState({ hasError: true, error: error });\n  };\n\n  Wrapper.prototype.onUpdateProps = function onUpdateProps(newState, changedKeys) {\n    var _props = this.props,\n        __vars__ = _props.__vars__,\n        __expr__ = _props.__expr__;\n\n    // were there changes to any vars we track?\n    // or vars our expressions reference?\n\n    var shouldUpdate = changedKeys.some(function (k) {\n      return (0, _object4.default)(__vars__).includes(k) || (0, _object4.default)(__expr__).some(function (expr) {\n        return expr.includes(k);\n      });\n    });\n    // if nothing we care about changed bail out and don't re-render\n    if (!shouldUpdate) return;\n\n    // update this component's state\n    var nextState = {};\n    // pull in the latest value for any tracked vars\n    Object.keys(__vars__).forEach(function (key) {\n      nextState[key] = newState[__vars__[key]];\n    });\n    // re-run this component's expressions using the latest doc state\n    Object.keys(__expr__).forEach(function (key) {\n      nextState[key] = (0, _utils.evalExpression)(newState, __expr__[key], key, evalContext);\n    });\n    // trigger a re-render of this component\n    // and more importantly, its wrapped component\n    this.setState(nextState);\n  };\n\n  Wrapper.prototype.onUpdateRefs = function onUpdateRefs(newState) {\n    var __expr__ = this.props.__expr__;\n\n    if (this.usesRefs) {\n      var nextState = { refs: newState.refs };\n      (0, _object2.default)(__expr__).forEach(function (_ref) {\n        var key = _ref[0],\n            val = _ref[1];\n\n        if (!key.includes('refs.')) {\n          return;\n        }\n        nextState[key] = (0, _utils.evalExpression)(newState, val, key, evalContext);\n      });\n\n      // trigger a render with latest state\n      this.setState(nextState);\n    }\n  };\n\n  Wrapper.prototype.componentWillUnmount = function componentWillUnmount() {\n    var propsIndex = updatePropsCallbacks.indexOf(this.onUpdateProps);\n    if (propsIndex > -1) updatePropsCallbacks.splice(propsIndex, 1);\n\n    var refsIndex = updateRefsCallbacks.indexOf(this.onUpdateRefs);\n    if (refsIndex > -1) updateRefsCallbacks.splice(refsIndex, 1);\n  };\n\n  Wrapper.prototype.render = function render() {\n    var _this2 = this;\n\n    if (this.state.hasError) {\n      return _react2.default.createElement('div', { style: { border: 'solid red 1px', padding: 10 } }, this.state.error.message);\n    }\n\n    var _state = this.state,\n        __expr__ = _state.__expr__,\n        __vars__ = _state.__vars__,\n        hasError = _state.hasError,\n        state = _objectWithoutProperties(_state, ['__expr__', '__vars__', 'hasError']);\n\n    var _props2 = this.props,\n        children = _props2.children,\n        passThruProps = _objectWithoutProperties(_props2, ['children']);\n\n    return _react2.default.Children.map(children, function (c, i) {\n      return _react2.default.cloneElement(c, _extends({\n        key: _this2.key + '-' + i\n      }, state, passThruProps));\n    });\n  };\n\n  return Wrapper;\n}(_react2.default.PureComponent);\n\nvar getDerivedValues = function getDerivedValues(dVars) {\n  var o = {};\n  Object.keys(dVars).forEach(function (key) {\n    return o[key] = dVars[key].value;\n  });\n  return o;\n};\n\nvar IdyllDocument = function (_React$PureComponent2) {\n  _inherits(IdyllDocument, _React$PureComponent2);\n\n  function IdyllDocument(props) {\n    _classCallCheck(this, IdyllDocument);\n\n    var _this3 = _possibleConstructorReturn(this, _React$PureComponent2.call(this, props));\n\n    _this3.scrollListener = _this3.scrollListener.bind(_this3);\n    _this3.initScrollListener = _this3.initScrollListener.bind(_this3);\n\n    var ast = (0, _utils.filterASTForDocument)(props.ast);\n\n    var _splitAST = (0, _utils.splitAST)(ast),\n        vars = _splitAST.vars,\n        derived = _splitAST.derived,\n        data = _splitAST.data,\n        elements = _splitAST.elements;\n\n    var initialState = _extends({}, (0, _utils.getVars)(vars), (0, _utils.getData)(data, props.datasets));\n    var derivedVars = _this3.derivedVars = (0, _utils.getVars)(derived, initialState);\n\n    var state = _this3.state = _extends({}, initialState, getDerivedValues(derivedVars));\n\n    _this3.updateState = function (newState) {\n      // merge new doc state with old\n      var newMergedState = _extends({}, _this3.state, newState);\n      // update derived values\n      var newDerivedValues = getDerivedValues((0, _utils.getVars)(derived, newMergedState));\n      var nextState = _extends({}, newMergedState, newDerivedValues);\n      var changedKeys = Object.keys(state).reduce(function (acc, k) {\n        if (state[k] !== nextState[k]) acc.push(k);\n        return acc;\n      }, []);\n      // Update doc state reference.\n      // We re-use the same object here so that\n      // IdyllDocument.state can be accurately checked in tests\n      state = Object.assign(state, nextState);\n      // pass the new doc state to all listeners aka component wrappers\n      updatePropsCallbacks.forEach(function (f) {\n        return f(state, changedKeys);\n      });\n    };\n\n    evalContext.update = _this3.updateState;\n\n    var rjs = new _schema2element2.default(_extends({}, props.components, { Wrapper: Wrapper }));\n    var schema = (0, _utils.translate)(ast);\n\n    var wrapTargets = (0, _utils.findWrapTargets)(schema, _this3.state);\n\n    var refCounter = 0;\n\n    var transformedSchema = (0, _utils.mapTree)(schema, function (node) {\n      if (typeof node === 'string') return node;\n\n      // transform refs from strings to functions and store them\n      if (node.ref || node.hasHook) {\n        node.refName = node.ref || node.component + (refCounter++).toString();\n        node.ref = function (el) {\n          if (!el) return;\n          var domNode = _reactDom2.default.findDOMNode(el);\n          domNode.dataset.ref = node.refName;\n          scrollOffsets[node.refName] = node.scrollOffset || 0;\n          refCache[node.refName] = {\n            props: node,\n            domNode: domNode\n          };\n        };\n      }\n\n      if (!wrapTargets.includes(node)) return node;\n\n      var component = node.component,\n          children = node.children,\n          key = node.key,\n          _node$__vars__ = node.__vars__,\n          __vars__ = _node$__vars__ === undefined ? {} : _node$__vars__,\n          _node$__expr__ = node.__expr__,\n          __expr__ = _node$__expr__ === undefined ? {} : _node$__expr__,\n          props = _objectWithoutProperties(node, ['component', 'children', 'key', '__vars__', '__expr__']);\n\n      // assign the initial values for tracked vars and expressions\n\n\n      Object.keys(props).forEach(function (k) {\n        if (__vars__[k]) {\n          node[k] = state[__vars__[k]];\n        }\n        if (__expr__[k] && !__expr__[k].includes('refs.')) {\n          if (_utils.hooks.indexOf(k) > -1) {\n            return;\n          }\n          node[k] = (0, _utils.evalExpression)(state, __expr__[k], k, evalContext);\n        }\n      });\n\n      // define the function wrapped components will call via this.props.updateProps\n      node.updateProps = function (newProps) {\n        // init new doc state object\n        var newState = {};\n        // iterate over passed in updates\n        Object.keys(newProps).forEach(function (k) {\n          // if a tracked var was updated get its new value\n          if (__vars__[k]) {\n            newState[__vars__[k]] = newProps[k];\n          }\n        });\n        _this3.updateState(newState);\n      };\n\n      return {\n        component: Wrapper,\n        __vars__: __vars__,\n        __expr__: __expr__,\n        hasHook: node.hasHook,\n        refName: node.refName,\n        children: [node]\n      };\n    });\n\n    _this3.kids = _react2.default.createElement('div', { className: 'idyll-root', ref: _this3.initScrollListener }, rjs.parseSchema(transformedSchema));\n    return _this3;\n  }\n\n  IdyllDocument.prototype.scrollListener = function scrollListener() {\n    var _this4 = this;\n\n    var refs = getRefs();\n    updateRefsCallbacks.forEach(function (f) {\n      return f(_extends({}, _this4.state, { refs: refs }));\n    });\n  };\n\n  IdyllDocument.prototype.initScrollListener = function initScrollListener(el) {\n    var _this5 = this;\n\n    if (!el) return;\n\n    var scroller = (0, _scrollparent2.default)(el);\n    if (scroller === document.documentElement) {\n      scroller = document.body;\n    }\n    scrollContainer = _scrollmonitor2.default.createContainer(scroller);\n    Object.keys(refCache).forEach(function (key) {\n      var _refCache$key = refCache[key],\n          props = _refCache$key.props,\n          domNode = _refCache$key.domNode;\n\n      var watcher = scrollContainer.create(domNode, scrollOffsets[key]);\n      _utils.hooks.forEach(function (hook) {\n        if (props[hook]) {\n          watcher[_utils.scrollMonitorEvents[hook]](function () {\n            (0, _utils.evalExpression)(_this5.state, props[hook], hook, evalContext)();\n          });\n        }\n      });\n      scrollWatchers.push(watcher);\n    });\n    if (scroller === document.body) {\n      scroller = window;\n    }\n    scroller.addEventListener('scroll', this.scrollListener);\n  };\n\n  IdyllDocument.prototype.updateDerivedVars = function updateDerivedVars(newState) {\n    var _this6 = this;\n\n    Object.keys(this.derivedVars).forEach(function (dv) {\n      _this6.derivedVars[dv].value = _this6.derivedVars[dv].update(newState, _this6.state);\n    });\n  };\n\n  IdyllDocument.prototype.getDerivedVars = function getDerivedVars() {\n    var _this7 = this;\n\n    var dvs = {};\n    Object.keys(this.derivedVars).forEach(function (dv) {\n      dvs[dv] = _this7.derivedVars[dv].value;\n    });\n    return dvs;\n  };\n\n  IdyllDocument.prototype.componentDidMount = function componentDidMount() {\n    var _this8 = this;\n\n    var refs = getRefs();\n    updateRefsCallbacks.forEach(function (f) {\n      return f(_extends({}, _this8.state, { refs: refs }));\n    });\n  };\n\n  IdyllDocument.prototype.render = function render() {\n    return this.kids;\n  };\n\n  return IdyllDocument;\n}(_react2.default.PureComponent);\n\nexports.default = IdyllDocument;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cG9ydHMiLCJfX2VzTW9kdWxlIiwiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiX3JlYWN0IiwicmVxdWlyZSIsIl9yZWFjdDIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3JlYWN0RG9tIiwiX3JlYWN0RG9tMiIsIl9zY3JvbGxwYXJlbnQiLCJfc2Nyb2xscGFyZW50MiIsIl9zY3JvbGxtb25pdG9yIiwiX3Njcm9sbG1vbml0b3IyIiwiX3NjaGVtYTJlbGVtZW50IiwiX3NjaGVtYTJlbGVtZW50MiIsIl9vYmplY3QiLCJfb2JqZWN0MiIsIl9vYmplY3QzIiwiX29iamVjdDQiLCJfdXRpbHMiLCJvYmoiLCJkZWZhdWx0IiwiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic2VsZiIsIlJlZmVyZW5jZUVycm9yIiwiX2luaGVyaXRzIiwic3ViQ2xhc3MiLCJzdXBlckNsYXNzIiwiY3JlYXRlIiwiY29uc3RydWN0b3IiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJ3cml0YWJsZSIsImNvbmZpZ3VyYWJsZSIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwia2V5cyIsImluZGV4T2YiLCJ1cGRhdGVQcm9wc0NhbGxiYWNrcyIsInVwZGF0ZVJlZnNDYWxsYmFja3MiLCJzY3JvbGxXYXRjaGVycyIsInNjcm9sbE9mZnNldHMiLCJyZWZDYWNoZSIsImV2YWxDb250ZXh0Iiwic2Nyb2xsQ29udGFpbmVyIiwiZ2V0UmVmcyIsInJlZnMiLCJmb3JFYWNoIiwid2F0Y2hlciIsIndhdGNoSXRlbSIsImNhbGxiYWNrcyIsImNvbnRhaW5lciIsInJlY2FsY3VsYXRlTG9jYXRpb24iLCJvZmZzZXRzIiwid2F0Y2hlclByb3BzIiwiZGF0YXNldCIsInJlZiIsImRvbU5vZGUiLCJ3cmFwcGVyS2V5IiwiV3JhcHBlciIsIl9SZWFjdCRQdXJlQ29tcG9uZW50IiwicHJvcHMiLCJfdGhpcyIsIm9uVXBkYXRlUmVmcyIsImJpbmQiLCJvblVwZGF0ZVByb3BzIiwidmFycyIsIl9fdmFyc19fIiwiZXhwcyIsIl9fZXhwcl9fIiwidXNlc1JlZnMiLCJzb21lIiwidiIsImluY2x1ZGVzIiwicHVzaCIsImhhc0hvb2siLCJzdGF0ZSIsImhhc0Vycm9yIiwiZXJyb3IiLCJjb21wb25lbnREaWRDYXRjaCIsImluZm8iLCJzZXRTdGF0ZSIsIm5ld1N0YXRlIiwiY2hhbmdlZEtleXMiLCJfcHJvcHMiLCJzaG91bGRVcGRhdGUiLCJrIiwiZXhwciIsIm5leHRTdGF0ZSIsImV2YWxFeHByZXNzaW9uIiwiX3JlZiIsInZhbCIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwicHJvcHNJbmRleCIsInNwbGljZSIsInJlZnNJbmRleCIsInJlbmRlciIsIl90aGlzMiIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImJvcmRlciIsInBhZGRpbmciLCJtZXNzYWdlIiwiX3N0YXRlIiwiX3Byb3BzMiIsImNoaWxkcmVuIiwicGFzc1RocnVQcm9wcyIsIkNoaWxkcmVuIiwibWFwIiwiYyIsImNsb25lRWxlbWVudCIsIlB1cmVDb21wb25lbnQiLCJnZXREZXJpdmVkVmFsdWVzIiwiZFZhcnMiLCJvIiwiSWR5bGxEb2N1bWVudCIsIl9SZWFjdCRQdXJlQ29tcG9uZW50MiIsIl90aGlzMyIsInNjcm9sbExpc3RlbmVyIiwiaW5pdFNjcm9sbExpc3RlbmVyIiwiYXN0IiwiZmlsdGVyQVNURm9yRG9jdW1lbnQiLCJfc3BsaXRBU1QiLCJzcGxpdEFTVCIsImRlcml2ZWQiLCJkYXRhIiwiZWxlbWVudHMiLCJpbml0aWFsU3RhdGUiLCJnZXRWYXJzIiwiZ2V0RGF0YSIsImRhdGFzZXRzIiwiZGVyaXZlZFZhcnMiLCJ1cGRhdGVTdGF0ZSIsIm5ld01lcmdlZFN0YXRlIiwibmV3RGVyaXZlZFZhbHVlcyIsInJlZHVjZSIsImFjYyIsImYiLCJ1cGRhdGUiLCJyanMiLCJjb21wb25lbnRzIiwic2NoZW1hIiwidHJhbnNsYXRlIiwid3JhcFRhcmdldHMiLCJmaW5kV3JhcFRhcmdldHMiLCJyZWZDb3VudGVyIiwidHJhbnNmb3JtZWRTY2hlbWEiLCJtYXBUcmVlIiwibm9kZSIsInJlZk5hbWUiLCJjb21wb25lbnQiLCJ0b1N0cmluZyIsImVsIiwiZmluZERPTU5vZGUiLCJzY3JvbGxPZmZzZXQiLCJfbm9kZSRfX3ZhcnNfXyIsInVuZGVmaW5lZCIsIl9ub2RlJF9fZXhwcl9fIiwiaG9va3MiLCJ1cGRhdGVQcm9wcyIsIm5ld1Byb3BzIiwia2lkcyIsImNsYXNzTmFtZSIsInBhcnNlU2NoZW1hIiwiX3RoaXM0IiwiX3RoaXM1Iiwic2Nyb2xsZXIiLCJkb2N1bWVudCIsImRvY3VtZW50RWxlbWVudCIsImJvZHkiLCJjcmVhdGVDb250YWluZXIiLCJfcmVmQ2FjaGUka2V5IiwiaG9vayIsInNjcm9sbE1vbml0b3JFdmVudHMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwidXBkYXRlRGVyaXZlZFZhcnMiLCJfdGhpczYiLCJkdiIsImdldERlcml2ZWRWYXJzIiwiX3RoaXM3IiwiZHZzIiwiY29tcG9uZW50RGlkTW91bnQiLCJfdGhpczgiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBRUFBLFFBQVFDLFVBQVIsR0FBcUIsSUFBckI7O0FBRUEsSUFBSUMsV0FBV0MsT0FBT0MsTUFBUCxJQUFpQixVQUFVQyxNQUFWLEVBQWtCO0FBQUUsT0FBSyxJQUFJQyxJQUFJLENBQWIsRUFBZ0JBLElBQUlDLFVBQVVDLE1BQTlCLEVBQXNDRixHQUF0QyxFQUEyQztBQUFFLFFBQUlHLFNBQVNGLFVBQVVELENBQVYsQ0FBYixDQUEyQixLQUFLLElBQUlJLEdBQVQsSUFBZ0JELE1BQWhCLEVBQXdC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QUFRQXVDLGdCQUFjeEgsU0FBZCxDQUF3QndMLGNBQXhCLEdBQXlDLFNBQVNBLGNBQVQsR0FBMEI7QUFDakUsUUFBSUMsU0FBUyxJQUFiOztBQUVBLFFBQUlDLE1BQU0sRUFBVjtBQUNBbE0sV0FBT2lELElBQVAsQ0FBWSxLQUFLK0YsV0FBakIsRUFBOEJwRixPQUE5QixDQUFzQyxVQUFVbUksRUFBVixFQUFjO0FBQ2xERyxVQUFJSCxFQUFKLElBQVVFLE9BQU9qRCxXQUFQLENBQW1CK0MsRUFBbkIsRUFBdUJySixLQUFqQztBQUNELEtBRkQ7QUFHQSxXQUFPd0osR0FBUDtBQUNELEdBUkQ7O0FBVUFsRSxnQkFBY3hILFNBQWQsQ0FBd0IyTCxpQkFBeEIsR0FBNEMsU0FBU0EsaUJBQVQsR0FBNkI7QUFDdkUsUUFBSUMsU0FBUyxJQUFiOztBQUVBLFFBQUl6SSxPQUFPRCxTQUFYO0FBQ0FOLHdCQUFvQlEsT0FBcEIsQ0FBNEIsVUFBVTBGLENBQVYsRUFBYTtBQUN2QyxhQUFPQSxFQUFFdkosU0FBUyxFQUFULEVBQWFxTSxPQUFPM0csS0FBcEIsRUFBMkIsRUFBRTlCLE1BQU1BLElBQVIsRUFBM0IsQ0FBRixDQUFQO0FBQ0QsS0FGRDtBQUdELEdBUEQ7O0FBU0FxRSxnQkFBY3hILFNBQWQsQ0FBd0JxRyxNQUF4QixHQUFpQyxTQUFTQSxNQUFULEdBQWtCO0FBQ2pELFdBQU8sS0FBS2lFLElBQVo7QUFDRCxHQUZEOztBQUlBLFNBQU85QyxhQUFQO0FBQ0QsQ0F6TW1CLENBeU1sQm5ILFFBQVFnQixPQUFSLENBQWdCK0YsYUF6TUUsQ0FBcEI7O0FBMk1BL0gsUUFBUWdDLE9BQVIsR0FBa0JtRyxhQUFsQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX3JlYWN0RG9tID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XG5cbnZhciBfcmVhY3REb20yID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3REb20pO1xuXG52YXIgX3Njcm9sbHBhcmVudCA9IHJlcXVpcmUoJ3Njcm9sbHBhcmVudCcpO1xuXG52YXIgX3Njcm9sbHBhcmVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zY3JvbGxwYXJlbnQpO1xuXG52YXIgX3Njcm9sbG1vbml0b3IgPSByZXF1aXJlKCdzY3JvbGxtb25pdG9yJyk7XG5cbnZhciBfc2Nyb2xsbW9uaXRvcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zY3JvbGxtb25pdG9yKTtcblxudmFyIF9zY2hlbWEyZWxlbWVudCA9IHJlcXVpcmUoJy4vdXRpbHMvc2NoZW1hMmVsZW1lbnQnKTtcblxudmFyIF9zY2hlbWEyZWxlbWVudDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9zY2hlbWEyZWxlbWVudCk7XG5cbnZhciBfb2JqZWN0ID0gcmVxdWlyZSgnb2JqZWN0LmVudHJpZXMnKTtcblxudmFyIF9vYmplY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfb2JqZWN0KTtcblxudmFyIF9vYmplY3QzID0gcmVxdWlyZSgnb2JqZWN0LnZhbHVlcycpO1xuXG52YXIgX29iamVjdDQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9vYmplY3QzKTtcblxudmFyIF91dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbnZhciB1cGRhdGVQcm9wc0NhbGxiYWNrcyA9IFtdO1xudmFyIHVwZGF0ZVJlZnNDYWxsYmFja3MgPSBbXTtcbnZhciBzY3JvbGxXYXRjaGVycyA9IFtdO1xudmFyIHNjcm9sbE9mZnNldHMgPSB7fTtcbnZhciByZWZDYWNoZSA9IHt9O1xudmFyIGV2YWxDb250ZXh0ID0ge307XG52YXIgc2Nyb2xsQ29udGFpbmVyID0gdm9pZCAwO1xuXG52YXIgZ2V0UmVmcyA9IGZ1bmN0aW9uIGdldFJlZnMoKSB7XG4gIHZhciByZWZzID0ge307XG4gIGlmICghc2Nyb2xsQ29udGFpbmVyKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc2Nyb2xsV2F0Y2hlcnMuZm9yRWFjaChmdW5jdGlvbiAod2F0Y2hlcikge1xuICAgIC8vIGxlZnQgYW5kIHJpZ2h0IHByb3BzIGFzc3VtZSBubyBob3Jpem9udGFsIHNjcm9sbGluZ1xuICAgIHZhciB3YXRjaEl0ZW0gPSB3YXRjaGVyLndhdGNoSXRlbSxcbiAgICAgICAgY2FsbGJhY2tzID0gd2F0Y2hlci5jYWxsYmFja3MsXG4gICAgICAgIGNvbnRhaW5lciA9IHdhdGNoZXIuY29udGFpbmVyLFxuICAgICAgICByZWNhbGN1bGF0ZUxvY2F0aW9uID0gd2F0Y2hlci5yZWNhbGN1bGF0ZUxvY2F0aW9uLFxuICAgICAgICBvZmZzZXRzID0gd2F0Y2hlci5vZmZzZXRzLFxuICAgICAgICB3YXRjaGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMod2F0Y2hlciwgWyd3YXRjaEl0ZW0nLCAnY2FsbGJhY2tzJywgJ2NvbnRhaW5lcicsICdyZWNhbGN1bGF0ZUxvY2F0aW9uJywgJ29mZnNldHMnXSk7XG5cbiAgICByZWZzW3dhdGNoSXRlbS5kYXRhc2V0LnJlZl0gPSBfZXh0ZW5kcyh7fSwgd2F0Y2hlclByb3BzLCB7XG4gICAgICBkb21Ob2RlOiB3YXRjaEl0ZW1cbiAgICB9KTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJlZnM7XG59O1xuXG52YXIgd3JhcHBlcktleSA9IDA7XG5cbnZhciBXcmFwcGVyID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhXcmFwcGVyLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gV3JhcHBlcihwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBXcmFwcGVyKTtcblxuICAgIHZhciBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRQdXJlQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpKTtcblxuICAgIF90aGlzLmtleSA9IHdyYXBwZXJLZXkrKztcbiAgICBfdGhpcy5yZWYgPSB7fTtcbiAgICBfdGhpcy5vblVwZGF0ZVJlZnMgPSBfdGhpcy5vblVwZGF0ZVJlZnMuYmluZChfdGhpcyk7XG4gICAgX3RoaXMub25VcGRhdGVQcm9wcyA9IF90aGlzLm9uVXBkYXRlUHJvcHMuYmluZChfdGhpcyk7XG5cbiAgICB2YXIgdmFycyA9ICgwLCBfb2JqZWN0NC5kZWZhdWx0KShwcm9wcy5fX3ZhcnNfXyk7XG4gICAgdmFyIGV4cHMgPSAoMCwgX29iamVjdDQuZGVmYXVsdCkocHJvcHMuX19leHByX18pO1xuXG4gICAgX3RoaXMudXNlc1JlZnMgPSBleHBzLnNvbWUoZnVuY3Rpb24gKHYpIHtcbiAgICAgIHJldHVybiB2LmluY2x1ZGVzKCdyZWZzLicpO1xuICAgIH0pO1xuXG4gICAgLy8gbGlzdGVuIGZvciBwcm9wcyB1cGRhdGVzIElGIHdlIGNhcmUgYWJvdXQgdGhlbVxuICAgIGlmICh2YXJzLmxlbmd0aCB8fCBleHBzLmxlbmd0aCkge1xuICAgICAgLy8gY2FsbGVkIHdpdGggbmV3IGRvYyBzdGF0ZVxuICAgICAgLy8gd2hlbiBhbnkgY29tcG9uZW50IGNhbGxzIHVwZGF0ZVByb3BzKClcbiAgICAgIHVwZGF0ZVByb3BzQ2FsbGJhY2tzLnB1c2goX3RoaXMub25VcGRhdGVQcm9wcyk7XG4gICAgfVxuXG4gICAgLy8gbGlzdGVuIGZvciByZWYgdXBkYXRlcyBJRiB3ZSBjYXJlIGFib3V0IHRoZW1cbiAgICBpZiAocHJvcHMuaGFzSG9vayB8fCBfdGhpcy51c2VzUmVmcykge1xuICAgICAgdXBkYXRlUmVmc0NhbGxiYWNrcy5wdXNoKF90aGlzLm9uVXBkYXRlUmVmcyk7XG4gICAgfVxuXG4gICAgX3RoaXMuc3RhdGUgPSB7IGhhc0Vycm9yOiBmYWxzZSwgZXJyb3I6IG51bGwgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBXcmFwcGVyLnByb3RvdHlwZS5jb21wb25lbnREaWRDYXRjaCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZENhdGNoKGVycm9yLCBpbmZvKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IGhhc0Vycm9yOiB0cnVlLCBlcnJvcjogZXJyb3IgfSk7XG4gIH07XG5cbiAgV3JhcHBlci5wcm90b3R5cGUub25VcGRhdGVQcm9wcyA9IGZ1bmN0aW9uIG9uVXBkYXRlUHJvcHMobmV3U3RhdGUsIGNoYW5nZWRLZXlzKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIF9fdmFyc19fID0gX3Byb3BzLl9fdmFyc19fLFxuICAgICAgICBfX2V4cHJfXyA9IF9wcm9wcy5fX2V4cHJfXztcblxuICAgIC8vIHdlcmUgdGhlcmUgY2hhbmdlcyB0byBhbnkgdmFycyB3ZSB0cmFjaz9cbiAgICAvLyBvciB2YXJzIG91ciBleHByZXNzaW9ucyByZWZlcmVuY2U/XG5cbiAgICB2YXIgc2hvdWxkVXBkYXRlID0gY2hhbmdlZEtleXMuc29tZShmdW5jdGlvbiAoaykge1xuICAgICAgcmV0dXJuICgwLCBfb2JqZWN0NC5kZWZhdWx0KShfX3ZhcnNfXykuaW5jbHVkZXMoaykgfHwgKDAsIF9vYmplY3Q0LmRlZmF1bHQpKF9fZXhwcl9fKS5zb21lKGZ1bmN0aW9uIChleHByKSB7XG4gICAgICAgIHJldHVybiBleHByLmluY2x1ZGVzKGspO1xuICAgICAgfSk7XG4gICAgfSk7XG4gICAgLy8gaWYgbm90aGluZyB3ZSBjYXJlIGFib3V0IGNoYW5nZWQgYmFpbCBvdXQgYW5kIGRvbid0IHJlLXJlbmRlclxuICAgIGlmICghc2hvdWxkVXBkYXRlKSByZXR1cm47XG5cbiAgICAvLyB1cGRhdGUgdGhpcyBjb21wb25lbnQncyBzdGF0ZVxuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcbiAgICAvLyBwdWxsIGluIHRoZSBsYXRlc3QgdmFsdWUgZm9yIGFueSB0cmFja2VkIHZhcnNcbiAgICBPYmplY3Qua2V5cyhfX3ZhcnNfXykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBuZXh0U3RhdGVba2V5XSA9IG5ld1N0YXRlW19fdmFyc19fW2tleV1dO1xuICAgIH0pO1xuICAgIC8vIHJlLXJ1biB0aGlzIGNvbXBvbmVudCdzIGV4cHJlc3Npb25zIHVzaW5nIHRoZSBsYXRlc3QgZG9jIHN0YXRlXG4gICAgT2JqZWN0LmtleXMoX19leHByX18pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgbmV4dFN0YXRlW2tleV0gPSAoMCwgX3V0aWxzLmV2YWxFeHByZXNzaW9uKShuZXdTdGF0ZSwgX19leHByX19ba2V5XSwga2V5LCBldmFsQ29udGV4dCk7XG4gICAgfSk7XG4gICAgLy8gdHJpZ2dlciBhIHJlLXJlbmRlciBvZiB0aGlzIGNvbXBvbmVudFxuICAgIC8vIGFuZCBtb3JlIGltcG9ydGFudGx5LCBpdHMgd3JhcHBlZCBjb21wb25lbnRcbiAgICB0aGlzLnNldFN0YXRlKG5leHRTdGF0ZSk7XG4gIH07XG5cbiAgV3JhcHBlci5wcm90b3R5cGUub25VcGRhdGVSZWZzID0gZnVuY3Rpb24gb25VcGRhdGVSZWZzKG5ld1N0YXRlKSB7XG4gICAgdmFyIF9fZXhwcl9fID0gdGhpcy5wcm9wcy5fX2V4cHJfXztcblxuXG4gICAgaWYgKHRoaXMudXNlc1JlZnMpIHtcbiAgICAgIHZhciBuZXh0U3RhdGUgPSB7IHJlZnM6IG5ld1N0YXRlLnJlZnMgfTtcbiAgICAgICgwLCBfb2JqZWN0Mi5kZWZhdWx0KShfX2V4cHJfXykuZm9yRWFjaChmdW5jdGlvbiAoX3JlZikge1xuICAgICAgICB2YXIga2V5ID0gX3JlZlswXSxcbiAgICAgICAgICAgIHZhbCA9IF9yZWZbMV07XG5cbiAgICAgICAgaWYgKCFrZXkuaW5jbHVkZXMoJ3JlZnMuJykpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgbmV4dFN0YXRlW2tleV0gPSAoMCwgX3V0aWxzLmV2YWxFeHByZXNzaW9uKShuZXdTdGF0ZSwgdmFsLCBrZXksIGV2YWxDb250ZXh0KTtcbiAgICAgIH0pO1xuXG4gICAgICAvLyB0cmlnZ2VyIGEgcmVuZGVyIHdpdGggbGF0ZXN0IHN0YXRlXG4gICAgICB0aGlzLnNldFN0YXRlKG5leHRTdGF0ZSk7XG4gICAgfVxuICB9O1xuXG4gIFdyYXBwZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdmFyIHByb3BzSW5kZXggPSB1cGRhdGVQcm9wc0NhbGxiYWNrcy5pbmRleE9mKHRoaXMub25VcGRhdGVQcm9wcyk7XG4gICAgaWYgKHByb3BzSW5kZXggPiAtMSkgdXBkYXRlUHJvcHNDYWxsYmFja3Muc3BsaWNlKHByb3BzSW5kZXgsIDEpO1xuXG4gICAgdmFyIHJlZnNJbmRleCA9IHVwZGF0ZVJlZnNDYWxsYmFja3MuaW5kZXhPZih0aGlzLm9uVXBkYXRlUmVmcyk7XG4gICAgaWYgKHJlZnNJbmRleCA+IC0xKSB1cGRhdGVSZWZzQ2FsbGJhY2tzLnNwbGljZShyZWZzSW5kZXgsIDEpO1xuICB9O1xuXG4gIFdyYXBwZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgIGlmICh0aGlzLnN0YXRlLmhhc0Vycm9yKSB7XG4gICAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICdkaXYnLFxuICAgICAgICB7IHN0eWxlOiB7IGJvcmRlcjogJ3NvbGlkIHJlZCAxcHgnLCBwYWRkaW5nOiAxMCB9IH0sXG4gICAgICAgIHRoaXMuc3RhdGUuZXJyb3IubWVzc2FnZVxuICAgICAgKTtcbiAgICB9XG5cbiAgICB2YXIgX3N0YXRlID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgX19leHByX18gPSBfc3RhdGUuX19leHByX18sXG4gICAgICAgIF9fdmFyc19fID0gX3N0YXRlLl9fdmFyc19fLFxuICAgICAgICBoYXNFcnJvciA9IF9zdGF0ZS5oYXNFcnJvcixcbiAgICAgICAgc3RhdGUgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3N0YXRlLCBbJ19fZXhwcl9fJywgJ19fdmFyc19fJywgJ2hhc0Vycm9yJ10pO1xuXG4gICAgdmFyIF9wcm9wczIgPSB0aGlzLnByb3BzLFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wczIuY2hpbGRyZW4sXG4gICAgICAgIHBhc3NUaHJ1UHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3Byb3BzMiwgWydjaGlsZHJlbiddKTtcblxuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuQ2hpbGRyZW4ubWFwKGNoaWxkcmVuLCBmdW5jdGlvbiAoYywgaSkge1xuICAgICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jbG9uZUVsZW1lbnQoYywgX2V4dGVuZHMoe1xuICAgICAgICBrZXk6IF90aGlzMi5rZXkgKyAnLScgKyBpXG4gICAgICB9LCBzdGF0ZSwgcGFzc1RocnVQcm9wcykpO1xuICAgIH0pO1xuICB9O1xuXG4gIHJldHVybiBXcmFwcGVyO1xufShfcmVhY3QyLmRlZmF1bHQuUHVyZUNvbXBvbmVudCk7XG5cbnZhciBnZXREZXJpdmVkVmFsdWVzID0gZnVuY3Rpb24gZ2V0RGVyaXZlZFZhbHVlcyhkVmFycykge1xuICB2YXIgbyA9IHt9O1xuICBPYmplY3Qua2V5cyhkVmFycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIG9ba2V5XSA9IGRWYXJzW2tleV0udmFsdWU7XG4gIH0pO1xuICByZXR1cm4gbztcbn07XG5cbnZhciBJZHlsbERvY3VtZW50ID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50Mikge1xuICBfaW5oZXJpdHMoSWR5bGxEb2N1bWVudCwgX1JlYWN0JFB1cmVDb21wb25lbnQyKTtcblxuICBmdW5jdGlvbiBJZHlsbERvY3VtZW50KHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIElkeWxsRG9jdW1lbnQpO1xuXG4gICAgdmFyIF90aGlzMyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9SZWFjdCRQdXJlQ29tcG9uZW50Mi5jYWxsKHRoaXMsIHByb3BzKSk7XG5cbiAgICBfdGhpczMuc2Nyb2xsTGlzdGVuZXIgPSBfdGhpczMuc2Nyb2xsTGlzdGVuZXIuYmluZChfdGhpczMpO1xuICAgIF90aGlzMy5pbml0U2Nyb2xsTGlzdGVuZXIgPSBfdGhpczMuaW5pdFNjcm9sbExpc3RlbmVyLmJpbmQoX3RoaXMzKTtcblxuICAgIHZhciBhc3QgPSAoMCwgX3V0aWxzLmZpbHRlckFTVEZvckRvY3VtZW50KShwcm9wcy5hc3QpO1xuXG4gICAgdmFyIF9zcGxpdEFTVCA9ICgwLCBfdXRpbHMuc3BsaXRBU1QpKGFzdCksXG4gICAgICAgIHZhcnMgPSBfc3BsaXRBU1QudmFycyxcbiAgICAgICAgZGVyaXZlZCA9IF9zcGxpdEFTVC5kZXJpdmVkLFxuICAgICAgICBkYXRhID0gX3NwbGl0QVNULmRhdGEsXG4gICAgICAgIGVsZW1lbnRzID0gX3NwbGl0QVNULmVsZW1lbnRzO1xuXG4gICAgdmFyIGluaXRpYWxTdGF0ZSA9IF9leHRlbmRzKHt9LCAoMCwgX3V0aWxzLmdldFZhcnMpKHZhcnMpLCAoMCwgX3V0aWxzLmdldERhdGEpKGRhdGEsIHByb3BzLmRhdGFzZXRzKSk7XG4gICAgdmFyIGRlcml2ZWRWYXJzID0gX3RoaXMzLmRlcml2ZWRWYXJzID0gKDAsIF91dGlscy5nZXRWYXJzKShkZXJpdmVkLCBpbml0aWFsU3RhdGUpO1xuXG4gICAgdmFyIHN0YXRlID0gX3RoaXMzLnN0YXRlID0gX2V4dGVuZHMoe30sIGluaXRpYWxTdGF0ZSwgZ2V0RGVyaXZlZFZhbHVlcyhkZXJpdmVkVmFycykpO1xuXG4gICAgX3RoaXMzLnVwZGF0ZVN0YXRlID0gZnVuY3Rpb24gKG5ld1N0YXRlKSB7XG4gICAgICAvLyBtZXJnZSBuZXcgZG9jIHN0YXRlIHdpdGggb2xkXG4gICAgICB2YXIgbmV3TWVyZ2VkU3RhdGUgPSBfZXh0ZW5kcyh7fSwgX3RoaXMzLnN0YXRlLCBuZXdTdGF0ZSk7XG4gICAgICAvLyB1cGRhdGUgZGVyaXZlZCB2YWx1ZXNcbiAgICAgIHZhciBuZXdEZXJpdmVkVmFsdWVzID0gZ2V0RGVyaXZlZFZhbHVlcygoMCwgX3V0aWxzLmdldFZhcnMpKGRlcml2ZWQsIG5ld01lcmdlZFN0YXRlKSk7XG4gICAgICB2YXIgbmV4dFN0YXRlID0gX2V4dGVuZHMoe30sIG5ld01lcmdlZFN0YXRlLCBuZXdEZXJpdmVkVmFsdWVzKTtcbiAgICAgIHZhciBjaGFuZ2VkS2V5cyA9IE9iamVjdC5rZXlzKHN0YXRlKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgaykge1xuICAgICAgICBpZiAoc3RhdGVba10gIT09IG5leHRTdGF0ZVtrXSkgYWNjLnB1c2goayk7XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgICB9LCBbXSk7XG4gICAgICAvLyBVcGRhdGUgZG9jIHN0YXRlIHJlZmVyZW5jZS5cbiAgICAgIC8vIFdlIHJlLXVzZSB0aGUgc2FtZSBvYmplY3QgaGVyZSBzbyB0aGF0XG4gICAgICAvLyBJZHlsbERvY3VtZW50LnN0YXRlIGNhbiBiZSBhY2N1cmF0ZWx5IGNoZWNrZWQgaW4gdGVzdHNcbiAgICAgIHN0YXRlID0gT2JqZWN0LmFzc2lnbihzdGF0ZSwgbmV4dFN0YXRlKTtcbiAgICAgIC8vIHBhc3MgdGhlIG5ldyBkb2Mgc3RhdGUgdG8gYWxsIGxpc3RlbmVycyBha2EgY29tcG9uZW50IHdyYXBwZXJzXG4gICAgICB1cGRhdGVQcm9wc0NhbGxiYWNrcy5mb3JFYWNoKGZ1bmN0aW9uIChmKSB7XG4gICAgICAgIHJldHVybiBmKHN0YXRlLCBjaGFuZ2VkS2V5cyk7XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgZXZhbENvbnRleHQudXBkYXRlID0gX3RoaXMzLnVwZGF0ZVN0YXRlO1xuXG4gICAgdmFyIHJqcyA9IG5ldyBfc2NoZW1hMmVsZW1lbnQyLmRlZmF1bHQoX2V4dGVuZHMoe30sIHByb3BzLmNvbXBvbmVudHMsIHsgV3JhcHBlcjogV3JhcHBlciB9KSk7XG4gICAgdmFyIHNjaGVtYSA9ICgwLCBfdXRpbHMudHJhbnNsYXRlKShhc3QpO1xuXG4gICAgdmFyIHdyYXBUYXJnZXRzID0gKDAsIF91dGlscy5maW5kV3JhcFRhcmdldHMpKHNjaGVtYSwgX3RoaXMzLnN0YXRlKTtcblxuICAgIHZhciByZWZDb3VudGVyID0gMDtcblxuICAgIHZhciB0cmFuc2Zvcm1lZFNjaGVtYSA9ICgwLCBfdXRpbHMubWFwVHJlZSkoc2NoZW1hLCBmdW5jdGlvbiAobm9kZSkge1xuICAgICAgaWYgKHR5cGVvZiBub2RlID09PSAnc3RyaW5nJykgcmV0dXJuIG5vZGU7XG5cbiAgICAgIC8vIHRyYW5zZm9ybSByZWZzIGZyb20gc3RyaW5ncyB0byBmdW5jdGlvbnMgYW5kIHN0b3JlIHRoZW1cbiAgICAgIGlmIChub2RlLnJlZiB8fCBub2RlLmhhc0hvb2spIHtcbiAgICAgICAgbm9kZS5yZWZOYW1lID0gbm9kZS5yZWYgfHwgbm9kZS5jb21wb25lbnQgKyAocmVmQ291bnRlcisrKS50b1N0cmluZygpO1xuICAgICAgICBub2RlLnJlZiA9IGZ1bmN0aW9uIChlbCkge1xuICAgICAgICAgIGlmICghZWwpIHJldHVybjtcbiAgICAgICAgICB2YXIgZG9tTm9kZSA9IF9yZWFjdERvbTIuZGVmYXVsdC5maW5kRE9NTm9kZShlbCk7XG4gICAgICAgICAgZG9tTm9kZS5kYXRhc2V0LnJlZiA9IG5vZGUucmVmTmFtZTtcbiAgICAgICAgICBzY3JvbGxPZmZzZXRzW25vZGUucmVmTmFtZV0gPSBub2RlLnNjcm9sbE9mZnNldCB8fCAwO1xuICAgICAgICAgIHJlZkNhY2hlW25vZGUucmVmTmFtZV0gPSB7XG4gICAgICAgICAgICBwcm9wczogbm9kZSxcbiAgICAgICAgICAgIGRvbU5vZGU6IGRvbU5vZGVcbiAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICBpZiAoIXdyYXBUYXJnZXRzLmluY2x1ZGVzKG5vZGUpKSByZXR1cm4gbm9kZTtcblxuICAgICAgdmFyIGNvbXBvbmVudCA9IG5vZGUuY29tcG9uZW50LFxuICAgICAgICAgIGNoaWxkcmVuID0gbm9kZS5jaGlsZHJlbixcbiAgICAgICAgICBrZXkgPSBub2RlLmtleSxcbiAgICAgICAgICBfbm9kZSRfX3ZhcnNfXyA9IG5vZGUuX192YXJzX18sXG4gICAgICAgICAgX192YXJzX18gPSBfbm9kZSRfX3ZhcnNfXyA9PT0gdW5kZWZpbmVkID8ge30gOiBfbm9kZSRfX3ZhcnNfXyxcbiAgICAgICAgICBfbm9kZSRfX2V4cHJfXyA9IG5vZGUuX19leHByX18sXG4gICAgICAgICAgX19leHByX18gPSBfbm9kZSRfX2V4cHJfXyA9PT0gdW5kZWZpbmVkID8ge30gOiBfbm9kZSRfX2V4cHJfXyxcbiAgICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhub2RlLCBbJ2NvbXBvbmVudCcsICdjaGlsZHJlbicsICdrZXknLCAnX192YXJzX18nLCAnX19leHByX18nXSk7XG5cbiAgICAgIC8vIGFzc2lnbiB0aGUgaW5pdGlhbCB2YWx1ZXMgZm9yIHRyYWNrZWQgdmFycyBhbmQgZXhwcmVzc2lvbnNcblxuXG4gICAgICBPYmplY3Qua2V5cyhwcm9wcykuZm9yRWFjaChmdW5jdGlvbiAoaykge1xuICAgICAgICBpZiAoX192YXJzX19ba10pIHtcbiAgICAgICAgICBub2RlW2tdID0gc3RhdGVbX192YXJzX19ba11dO1xuICAgICAgICB9XG4gICAgICAgIGlmIChfX2V4cHJfX1trXSAmJiAhX19leHByX19ba10uaW5jbHVkZXMoJ3JlZnMuJykpIHtcbiAgICAgICAgICBpZiAoX3V0aWxzLmhvb2tzLmluZGV4T2YoaykgPiAtMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBub2RlW2tdID0gKDAsIF91dGlscy5ldmFsRXhwcmVzc2lvbikoc3RhdGUsIF9fZXhwcl9fW2tdLCBrLCBldmFsQ29udGV4dCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAvLyBkZWZpbmUgdGhlIGZ1bmN0aW9uIHdyYXBwZWQgY29tcG9uZW50cyB3aWxsIGNhbGwgdmlhIHRoaXMucHJvcHMudXBkYXRlUHJvcHNcbiAgICAgIG5vZGUudXBkYXRlUHJvcHMgPSBmdW5jdGlvbiAobmV3UHJvcHMpIHtcbiAgICAgICAgLy8gaW5pdCBuZXcgZG9jIHN0YXRlIG9iamVjdFxuICAgICAgICB2YXIgbmV3U3RhdGUgPSB7fTtcbiAgICAgICAgLy8gaXRlcmF0ZSBvdmVyIHBhc3NlZCBpbiB1cGRhdGVzXG4gICAgICAgIE9iamVjdC5rZXlzKG5ld1Byb3BzKS5mb3JFYWNoKGZ1bmN0aW9uIChrKSB7XG4gICAgICAgICAgLy8gaWYgYSB0cmFja2VkIHZhciB3YXMgdXBkYXRlZCBnZXQgaXRzIG5ldyB2YWx1ZVxuICAgICAgICAgIGlmIChfX3ZhcnNfX1trXSkge1xuICAgICAgICAgICAgbmV3U3RhdGVbX192YXJzX19ba11dID0gbmV3UHJvcHNba107XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgX3RoaXMzLnVwZGF0ZVN0YXRlKG5ld1N0YXRlKTtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNvbXBvbmVudDogV3JhcHBlcixcbiAgICAgICAgX192YXJzX186IF9fdmFyc19fLFxuICAgICAgICBfX2V4cHJfXzogX19leHByX18sXG4gICAgICAgIGhhc0hvb2s6IG5vZGUuaGFzSG9vayxcbiAgICAgICAgcmVmTmFtZTogbm9kZS5yZWZOYW1lLFxuICAgICAgICBjaGlsZHJlbjogW25vZGVdXG4gICAgICB9O1xuICAgIH0pO1xuXG4gICAgX3RoaXMzLmtpZHMgPSBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICdkaXYnLFxuICAgICAgeyBjbGFzc05hbWU6ICdpZHlsbC1yb290JywgcmVmOiBfdGhpczMuaW5pdFNjcm9sbExpc3RlbmVyIH0sXG4gICAgICByanMucGFyc2VTY2hlbWEodHJhbnNmb3JtZWRTY2hlbWEpXG4gICAgKTtcbiAgICByZXR1cm4gX3RoaXMzO1xuICB9XG5cbiAgSWR5bGxEb2N1bWVudC5wcm90b3R5cGUuc2Nyb2xsTGlzdGVuZXIgPSBmdW5jdGlvbiBzY3JvbGxMaXN0ZW5lcigpIHtcbiAgICB2YXIgX3RoaXM0ID0gdGhpcztcblxuICAgIHZhciByZWZzID0gZ2V0UmVmcygpO1xuICAgIHVwZGF0ZVJlZnNDYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbiAoZikge1xuICAgICAgcmV0dXJuIGYoX2V4dGVuZHMoe30sIF90aGlzNC5zdGF0ZSwgeyByZWZzOiByZWZzIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBJZHlsbERvY3VtZW50LnByb3RvdHlwZS5pbml0U2Nyb2xsTGlzdGVuZXIgPSBmdW5jdGlvbiBpbml0U2Nyb2xsTGlzdGVuZXIoZWwpIHtcbiAgICB2YXIgX3RoaXM1ID0gdGhpcztcblxuICAgIGlmICghZWwpIHJldHVybjtcblxuICAgIHZhciBzY3JvbGxlciA9ICgwLCBfc2Nyb2xscGFyZW50Mi5kZWZhdWx0KShlbCk7XG4gICAgaWYgKHNjcm9sbGVyID09PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpIHtcbiAgICAgIHNjcm9sbGVyID0gZG9jdW1lbnQuYm9keTtcbiAgICB9XG4gICAgc2Nyb2xsQ29udGFpbmVyID0gX3Njcm9sbG1vbml0b3IyLmRlZmF1bHQuY3JlYXRlQ29udGFpbmVyKHNjcm9sbGVyKTtcbiAgICBPYmplY3Qua2V5cyhyZWZDYWNoZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICB2YXIgX3JlZkNhY2hlJGtleSA9IHJlZkNhY2hlW2tleV0sXG4gICAgICAgICAgcHJvcHMgPSBfcmVmQ2FjaGUka2V5LnByb3BzLFxuICAgICAgICAgIGRvbU5vZGUgPSBfcmVmQ2FjaGUka2V5LmRvbU5vZGU7XG5cbiAgICAgIHZhciB3YXRjaGVyID0gc2Nyb2xsQ29udGFpbmVyLmNyZWF0ZShkb21Ob2RlLCBzY3JvbGxPZmZzZXRzW2tleV0pO1xuICAgICAgX3V0aWxzLmhvb2tzLmZvckVhY2goZnVuY3Rpb24gKGhvb2spIHtcbiAgICAgICAgaWYgKHByb3BzW2hvb2tdKSB7XG4gICAgICAgICAgd2F0Y2hlcltfdXRpbHMuc2Nyb2xsTW9uaXRvckV2ZW50c1tob29rXV0oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgKDAsIF91dGlscy5ldmFsRXhwcmVzc2lvbikoX3RoaXM1LnN0YXRlLCBwcm9wc1tob29rXSwgaG9vaywgZXZhbENvbnRleHQpKCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgc2Nyb2xsV2F0Y2hlcnMucHVzaCh3YXRjaGVyKTtcbiAgICB9KTtcbiAgICBpZiAoc2Nyb2xsZXIgPT09IGRvY3VtZW50LmJvZHkpIHtcbiAgICAgIHNjcm9sbGVyID0gd2luZG93O1xuICAgIH1cbiAgICBzY3JvbGxlci5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLnNjcm9sbExpc3RlbmVyKTtcbiAgfTtcblxuICBJZHlsbERvY3VtZW50LnByb3RvdHlwZS51cGRhdGVEZXJpdmVkVmFycyA9IGZ1bmN0aW9uIHVwZGF0ZURlcml2ZWRWYXJzKG5ld1N0YXRlKSB7XG4gICAgdmFyIF90aGlzNiA9IHRoaXM7XG5cbiAgICBPYmplY3Qua2V5cyh0aGlzLmRlcml2ZWRWYXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChkdikge1xuICAgICAgX3RoaXM2LmRlcml2ZWRWYXJzW2R2XS52YWx1ZSA9IF90aGlzNi5kZXJpdmVkVmFyc1tkdl0udXBkYXRlKG5ld1N0YXRlLCBfdGhpczYuc3RhdGUpO1xuICAgIH0pO1xuICB9O1xuXG4gIElkeWxsRG9jdW1lbnQucHJvdG90eXBlLmdldERlcml2ZWRWYXJzID0gZnVuY3Rpb24gZ2V0RGVyaXZlZFZhcnMoKSB7XG4gICAgdmFyIF90aGlzNyA9IHRoaXM7XG5cbiAgICB2YXIgZHZzID0ge307XG4gICAgT2JqZWN0LmtleXModGhpcy5kZXJpdmVkVmFycykuZm9yRWFjaChmdW5jdGlvbiAoZHYpIHtcbiAgICAgIGR2c1tkdl0gPSBfdGhpczcuZGVyaXZlZFZhcnNbZHZdLnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBkdnM7XG4gIH07XG5cbiAgSWR5bGxEb2N1bWVudC5wcm90b3R5cGUuY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB2YXIgX3RoaXM4ID0gdGhpcztcblxuICAgIHZhciByZWZzID0gZ2V0UmVmcygpO1xuICAgIHVwZGF0ZVJlZnNDYWxsYmFja3MuZm9yRWFjaChmdW5jdGlvbiAoZikge1xuICAgICAgcmV0dXJuIGYoX2V4dGVuZHMoe30sIF90aGlzOC5zdGF0ZSwgeyByZWZzOiByZWZzIH0pKTtcbiAgICB9KTtcbiAgfTtcblxuICBJZHlsbERvY3VtZW50LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMua2lkcztcbiAgfTtcblxuICByZXR1cm4gSWR5bGxEb2N1bWVudDtcbn0oX3JlYWN0Mi5kZWZhdWx0LlB1cmVDb21wb25lbnQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBJZHlsbERvY3VtZW50OyJdfQ==","deps":{"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","react-dom":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom\\umd\\react-dom.production.min.js","scrollmonitor":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollmonitor\\scrollMonitor.js","scrollparent":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollparent\\scrollparent.js","object.values":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\index.js","object.entries":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\index.js","./utils/schema2element":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\schema2element.js","./utils":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\index.js"}},"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll\\src\\client\\build.js":{"file":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll\\src\\client\\build.js","source":"'use strict';\n\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar IdyllDocument = require('idyll-document').default;\nvar mountNode = document.getElementById('idyll-mount');\n\nvar ast = require('__IDYLL_AST__');\nvar components = require('__IDYLL_COMPONENTS__');\nvar datasets = require('__IDYLL_DATA__');\nrequire('__IDYLL_SYNTAX_HIGHLIGHT__');\n\nvar opts = require('__IDYLL_OPTS__');\n\nvar mountMethod = opts.ssr ? 'hydrate' : 'render';\nReactDOM[mountMethod](React.createElement(IdyllDocument, { ast: ast, components: components, datasets: datasets }), mountNode);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJ1aWxkLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlJlYWN0RE9NIiwiSWR5bGxEb2N1bWVudCIsImRlZmF1bHQiLCJtb3VudE5vZGUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYXN0IiwiY29tcG9uZW50cyIsImRhdGFzZXRzIiwib3B0cyIsIm1vdW50TWV0aG9kIiwic3NyIiwiY3JlYXRlRWxlbWVudCJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxRQUFRQyxRQUFRLE9BQVIsQ0FBZDtBQUNBLElBQU1DLFdBQVdELFFBQVEsV0FBUixDQUFqQjs7QUFFQSxJQUFNRSxnQkFBZ0JGLFFBQVEsZ0JBQVIsRUFBMEJHLE9BQWhEO0FBQ0EsSUFBTUMsWUFBWUMsU0FBU0MsY0FBVCxDQUF3QixhQUF4QixDQUFsQjs7QUFFQSxJQUFNQyxNQUFNUCxRQUFRLGVBQVIsQ0FBWjtBQUNBLElBQU1RLGFBQWFSLFFBQVEsc0JBQVIsQ0FBbkI7QUFDQSxJQUFNUyxXQUFXVCxRQUFRLGdCQUFSLENBQWpCO0FBQ0FBLFFBQVEsNEJBQVI7O0FBRUEsSUFBTVUsT0FBT1YsUUFBUSxnQkFBUixDQUFiOztBQUVBLElBQU1XLGNBQWNELEtBQUtFLEdBQUwsR0FBVyxTQUFYLEdBQXVCLFFBQTNDO0FBQ0FYLFNBQVNVLFdBQVQsRUFDRVosTUFBTWMsYUFBTixDQUFvQlgsYUFBcEIsRUFBbUMsRUFBRUssUUFBRixFQUFPQyxzQkFBUCxFQUFtQkMsa0JBQW5CLEVBQW5DLENBREYsRUFFRUwsU0FGRiIsImZpbGUiOiJidWlsZC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IFJlYWN0RE9NID0gcmVxdWlyZSgncmVhY3QtZG9tJyk7XG5cbmNvbnN0IElkeWxsRG9jdW1lbnQgPSByZXF1aXJlKCdpZHlsbC1kb2N1bWVudCcpLmRlZmF1bHQ7XG5jb25zdCBtb3VudE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaWR5bGwtbW91bnQnKTtcblxuY29uc3QgYXN0ID0gcmVxdWlyZSgnX19JRFlMTF9BU1RfXycpO1xuY29uc3QgY29tcG9uZW50cyA9IHJlcXVpcmUoJ19fSURZTExfQ09NUE9ORU5UU19fJyk7XG5jb25zdCBkYXRhc2V0cyA9IHJlcXVpcmUoJ19fSURZTExfREFUQV9fJyk7XG5yZXF1aXJlKCdfX0lEWUxMX1NZTlRBWF9ISUdITElHSFRfXycpO1xuXG5jb25zdCBvcHRzID0gcmVxdWlyZSgnX19JRFlMTF9PUFRTX18nKTtcblxuY29uc3QgbW91bnRNZXRob2QgPSBvcHRzLnNzciA/ICdoeWRyYXRlJyA6ICdyZW5kZXInO1xuUmVhY3RET01bbW91bnRNZXRob2RdKFxuICBSZWFjdC5jcmVhdGVFbGVtZW50KElkeWxsRG9jdW1lbnQsIHsgYXN0LCBjb21wb25lbnRzLCBkYXRhc2V0cyB9KSxcbiAgbW91bnROb2RlXG4pO1xuIl19","deps":{"__IDYLL_AST__":false,"__IDYLL_COMPONENTS__":false,"__IDYLL_DATA__":false,"__IDYLL_SYNTAX_HIGHLIGHT__":false,"__IDYLL_OPTS__":false,"react":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js","react-dom":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom\\umd\\react-dom.production.min.js","idyll-document":"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\index.js"}}},"mtimes":{"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react\\umd\\react.production.min.js":1511904402000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom\\umd\\react-dom.production.min.js":1511904423000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\aside.js":1515377503729,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\header.js":1515377503749,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\lifecycle.js":1513894524000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\methods.js":1513894525000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollparent\\scrollparent.js":1491850013000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\scrollmonitor\\scrollMonitor.js":1508271716000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\classnames\\index.js":1461589980000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\utils.js":1513894525000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\polyfill.js":1442874238000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\polyfill.js":1442874226000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\index.js":1513791087000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\pagination.js":1513894525000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\defaultProps.js":1513894524000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-dom-factories\\index.js":1506384322000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\shim.js":1464637158000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\shim.js":1464636969000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case\\upper-case.js":1450225475000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case\\lower-case.js":1487963775000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\foreach\\index.js":1411366736000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\implementation.js":1503905842000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\function-bind\\index.js":1503905842000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-regexp.js":1504891248000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\non-word-regexp.js":1504891248000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\vendor\\camel-case-upper-regexp.js":1504891743000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\isArguments.js":1444860088000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-keys\\index.js":1467738758000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\define-properties\\index.js":1444860996000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\has\\src\\index.js":1437727640000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\implementation.js":1444179008000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.values\\index.js":1455403325000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\no-case\\no-case.js":1483587492000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\swap-case\\swap-case.js":1450224535000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\assign.js":1501515990000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\dot-case\\dot-case.js":1465683190000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\path-case\\path-case.js":1465683916000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\snake-case\\snake-case.js":1465682439000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\camel-case\\camel-case.js":1465692324000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\title-case\\title-case.js":1465682916000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-lower-case\\is-lower-case.js":1450224095000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\header-case\\header-case.js":1489797238000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\pascal-case\\pascal-case.js":1465692678000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\constant-case\\constant-case.js":1465692977000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\param-case\\param-case.js":1465683469000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\lower-case-first\\lower-case-first.js":1450223949000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-upper-case\\is-upper-case.js":1450225224000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\sentence-case\\sentence-case.js":1465681491000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\upper-case-first\\upper-case-first.js":1450224223000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\change-case\\change-case.js":1465694171000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\utils\\schema2element.js":1513791087000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object-assign\\index.js":1484580833000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isNaN.js":1464643773000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isFinite.js":1438151861000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\sign.js":1438151861000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\mod.js":1438151861000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\helpers\\isPrimitive.js":1438151861000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\lib\\ReactPropTypesSecret.js":1506382846000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\emptyFunction.js":1506381453000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\invariant.js":1506381455000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithThrowingShims.js":1506382846000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-callable\\index.js":1456620083000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\helpers\\isPrimitive.js":1446348326000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\checkPropTypes.js":1506382846000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-regex\\index.js":1487404978000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\fbjs\\lib\\warning.js":1506381455000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\factoryWithTypeCheckers.js":1506382846000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\prop-types\\index.js":1506382846000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\propTypes.js":1513894525000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\react-table\\lib\\index.js":1513894524000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\components\\default\\table.js":1515377503768,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-date-object\\index.js":1443359521000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\is-symbol\\index.js":1422136394000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es6.js":1451871294000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-to-primitive\\es5.js":1451870275000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es5.js":1501752520000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2015.js":1511204744000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es2016.js":1506727688000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\es-abstract\\es7.js":1501472591000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\implementation.js":1444179017000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\object.entries\\index.js":1455403172000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll-document\\dist\\cjs\\index.js":1513791087000,"C:\\Users\\Eric\\Dropbox\\Documents\\Writing\\RPG\\Computer\\node_modules\\idyll\\src\\client\\build.js":1509637321000},"dependentFiles":{}}